set cut_paste_input [stack 0]
version 9.0 v7
BackdropNode {
 inputs 0
 name BackdropNode43
 tile_color 0x33283301
 note_font "Helvetica bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_size 100
 selected true
 xpos 12108
 ypos 38530
 bookmark false
 bdwidth 15916
 bdheight 4360
}
StickyNote {
 inputs 0
 name StickyNote68
 tile_color 0xffffffff
 label "<b>Smoke wall    BG            ."
 note_font "Helvetica bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_size 100
 selected true
 xpos 12105
 ypos 38397
}
push 0
DeepExpression {
 chans1 deep
 name AlienDeep-18
 help AlienDeep
 tile_color 0x6fff
 note_font_size 20
 selected true
 xpos 26891
 ypos 42305
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T AlienDeep}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Dot {
 name Dot38
 selected true
 xpos 26925
 ypos 42385
}
push 0
DeepExpression {
 chans1 deep
 name InteriorDeep-18
 help InteriorDeep
 tile_color 0x6fff
 note_font_size 20
 selected true
 xpos 27035
 ypos 42309
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T InteriorDeep}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
DeepMerge {
 inputs 2
 name DeepMerge35
 selected true
 xpos 27035
 ypos 42381
}
Dot {
 name Dot39
 selected true
 xpos 27069
 ypos 42454
}
push 0
NoOp {
 name MainCam1-37
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 12558
 ypos 41819
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-28
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 12582
 ypos 41388
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayA-13
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 12723
 ypos 40866
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {484 -940}
 rotate 19
 scale 0.5
 center {512 2048}
 shutteroffset centred
 name Transform77
 selected true
 xpos 12723
 ypos 40929
}
Dot {
 name Dot1201
 selected true
 xpos 12757
 ypos 40955
 addUserKnob {20 User}
}
push $cut_paste_input
NoOp {
 name smokeWall-1
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 12620
 ypos 40529
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle1
 tile_color 0xffffffff
 selected true
 xpos 12620
 ypos 40565
}
Grade {
 white 0.4
 gamma 0.5
 name Grade1
 selected true
 xpos 12620
 ypos 40611
}
TimeOffset {
 time_offset 327.268
 time ""
 name TimeOffset42
 selected true
 xpos 12648
 ypos 40725
}
Dot {
 name Dot1225
 selected true
 xpos 12682
 ypos 40891
}
set Ned37a60 [stack 0]
Grade {
 inputs 1+1
 white {{Grade45.white}}
 multiply 5
 name Grade57
 selected true
 xpos 12595
 ypos 41049
 addUserKnob {20 User}
}
set Ned19950 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-5.219999313 14.05999565 0.150000006}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card79
 selected true
 xpos 12521
 ypos 41222
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Ned19950
Card2 {
 rows 4
 columns 4
 translate {2.700000048 -7.519999981 0.150000006}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card77
 selected true
 xpos 12852
 ypos 41215
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push 0
NoOp {
 name rayA-15
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 12857
 ypos 40719
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
set Nedc3690 [stack 0]
Roto {
 cliptype none
 replace true
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44000000 x45000000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup OpenSpline8 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x439d333b x45833ccd}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42b0cb08}     x43766676 x41900000}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline7 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x43c96669 x45831335}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42b0cb08}     x43a76669 x414ccd00}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline6 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x440f99a2 x45839003}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42bc4b76}     x440311bd x4183b1c2}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline5 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x43f30017 x4583b99b}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42b0cb08}     x43d86677 x41b99a03}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline4 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x441de66e x45833cce}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42b0cb08}     x4410999e x40f3340c}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline3 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x44340005 x45831336}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42c69e23}     x4426b335 x3f5c9840}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline2 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}     x44091997 x45829668}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x42b0cb08}     x43f0332e xc03333ff}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}
    {curvegroup OpenSpline1 1049088 bezier
     {{cc
       {f 1056800}
       {p
        {}
        {{a osw 1 osf 0}	x43e60000 x4582c000}
        {0 xc1400000}
        {x41000000}
        {{a osw 1 osf x438f336c}     x43bdd89d x40199800}
        {}}}
      {cc
       {f 1056800}
       {p
        {}
        {}
        {0 xc1400000}
        {x41000000}
        {}
        {}}}}
     {t x43d50000 x45028000}
     {a osbe 0 osee 0 osw 1 osf 0 str 1 ltn x449d0000 ltm x449d0000 tt x41200000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createOpenSpline str 1 ssx 1 ssy 1 sf 1 tt 10 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_openspline_width 1
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {320 240}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1256
 lifetime_end 1256
 motionblur_mode global
 motionblur_shutter_offset_type centred
 global_motionblur 0
 openspline_width 1
 name Roto3
 selected true
 xpos 12763
 ypos 40757
}
push $Nedc3690
Merge2 {
 inputs 2
 operation stencil
 name Merge219
 selected true
 xpos 12857
 ypos 40821
}
Transform {
 translate {484 -940}
 rotate 19
 scale 0.5
 center {512 2048}
 shutteroffset centred
 name Transform88
 selected true
 xpos 12866
 ypos 40932
}
Dot {
 name Dot1224
 selected true
 xpos 12900
 ypos 40958
 addUserKnob {20 User}
}
push $Ned37a60
Grade {
 inputs 1+1
 white {{Grade45.white}}
 multiply 5
 name Grade131
 selected true
 xpos 12712
 ypos 41057
 addUserKnob {20 User}
}
set Neef17c0 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-2.200000048 5.949997425 0.150000006}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card40
 selected true
 xpos 12634
 ypos 41220
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Neef17c0
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card15
 selected true
 xpos 12737
 ypos 41221
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 4
 selectable false
 name MergeGeo68
 selected true
 xpos 12692
 ypos 41328
}
TransformGeo {
 inputs 3
 translate {-1.999996185 86 -144.9999847}
 uniform_scale 10
 name TransformGeo36
 selected true
 xpos 12692
 ypos 41393
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 80
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender7
 selected true
 xpos 12692
 ypos 41824
 addUserKnob {20 User}
}
set Nf1e0980 [stack 0]
push $Nf1e0980
DeepFromFrames {
 samples 30
 zmin 350
 zmax 500
 name DeepFromFrames1
 selected true
 xpos 12724
 ypos 41974
}
DeepTransform {
 translate {0 0 -40}
 name DeepTransform2
 selected true
 xpos 12724
 ypos 42028
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor1
 selected true
 xpos 12614
 ypos 42059
}
Dot {
 name Dot19
 selected true
 xpos 12648
 ypos 42255
}
push 0
NoOp {
 name MainCam1-21
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 13138
 ypos 40988
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-5
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 13156
 ypos 39974
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayA-10
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 13374
 ypos 39505
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {344 -840}
 rotate 16
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform70
 selected true
 xpos 13374
 ypos 39541
}
Dot {
 name Dot992
 selected true
 xpos 13408
 ypos 39670
}
push $cut_paste_input
NoOp {
 name smokeWall-2
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 13254
 ypos 38794
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle50
 tile_color 0xffffffff
 selected true
 xpos 13254
 ypos 38830
}
Grade {
 white 0.4
 gamma 0.5
 name Grade43
 selected true
 xpos 13254
 ypos 38874
}
Dot {
 name Dot997
 selected true
 xpos 13288
 ypos 39062
}
Dot {
 name Dot1054
 selected true
 xpos 13288
 ypos 39177
}
TimeOffset {
 time_offset 64.268
 time ""
 name TimeOffset1
 selected true
 xpos 13253
 ypos 39312
}
Grade {
 inputs 1+1
 white {{curve x1600 30 s0 x1900 70 s0}}
 name Grade45
 selected true
 xpos 13249
 ypos 39752
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card1
 selected true
 xpos 13249
 ypos 39888
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {123.5 90 -79.49984741}
 uniform_scale 10
 name TransformGeo29
 selected true
 xpos 13258
 ypos 40093
}
Dot {
 name Dot1055
 selected true
 xpos 13292
 ypos 40715
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender18
 selected true
 xpos 13258
 ypos 40993
 addUserKnob {20 User}
}
set N2aa2bd30 [stack 0]
push $N2aa2bd30
DeepFromFrames {
 zmin 250
 zmax 320
 name DeepFromFrames17
 selected true
 xpos 13407
 ypos 41049
}
DeepTransform {
 translate {0 0 -65}
 name DeepTransform17
 selected true
 xpos 13407
 ypos 41112
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor17
 selected true
 xpos 13258
 ypos 41166
}
Dot {
 name Dot1
 selected true
 xpos 13292
 ypos 42203
}
push 0
NoOp {
 name MainCam1-20
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 14281
 ypos 40946
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-6
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 14276
 ypos 40120
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayA-11
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 14505
 ypos 39700
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {44 -840}
 rotate 16
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform71
 selected true
 xpos 14505
 ypos 39736
}
Dot {
 name Dot1065
 selected true
 xpos 14539
 ypos 39762
}
push $cut_paste_input
NoOp {
 name smokeWall-17
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 14403
 ypos 39196
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle16
 tile_color 0xffffffff
 selected true
 xpos 14403
 ypos 39232
}
Grade {
 white 0.4
 gamma 0.5
 name Grade17
 selected true
 xpos 14403
 ypos 39276
}
Dot {
 name Dot37
 selected true
 xpos 14437
 ypos 39464
}
TimeOffset {
 time_offset 358.753
 time ""
 name TimeOffset2
 selected true
 xpos 14380
 ypos 39574
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade46
 selected true
 xpos 14380
 ypos 39926
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card2
 selected true
 xpos 14380
 ypos 40037
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {45 197.5 -79.49999237}
 uniform_scale 10
 name TransformGeo30
 selected true
 xpos 14389
 ypos 40252
}
Dot {
 name Dot1066
 selected true
 xpos 14423
 ypos 40848
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender17
 selected true
 xpos 14401
 ypos 40951
 addUserKnob {20 User}
}
set Nba9a7960 [stack 0]
push $Nba9a7960
DeepFromFrames {
 zmin 250
 zmax 320
 name DeepFromFrames16
 selected true
 xpos 14550
 ypos 41007
}
DeepTransform {
 translate {0 0 135}
 name DeepTransform16
 selected true
 xpos 14550
 ypos 41070
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor16
 selected true
 xpos 14421
 ypos 41140
}
Dot {
 name Dot2
 selected true
 xpos 14455
 ypos 42177
}
push 0
NoOp {
 name MainCam1-19
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 15402
 ypos 40916
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-7
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 15411
 ypos 40088
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayD-6
 help rayD
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 15608
 ypos 39649
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayD}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {244 -840}
 rotate 16
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform72
 selected true
 xpos 15608
 ypos 39685
}
Dot {
 name Dot1190
 selected true
 xpos 15642
 ypos 39711
}
push $cut_paste_input
NoOp {
 name smokeWall-16
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 15531
 ypos 39201
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle15
 tile_color 0xffffffff
 selected true
 xpos 15531
 ypos 39237
}
Grade {
 white 0.4
 gamma 0.5
 name Grade16
 selected true
 xpos 15531
 ypos 39281
}
TimeOffset {
 time_offset 844.621
 time ""
 name TimeOffset3
 selected true
 xpos 15526
 ypos 39420
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade47
 selected true
 xpos 15526
 ypos 39875
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card3
 selected true
 xpos 15522
 ypos 40010
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {88.5 21.10000038 163.5999908}
 uniform_scale 5
 name TransformGeo31
 selected true
 xpos 15522
 ypos 40177
}
Dot {
 name Dot1191
 selected true
 xpos 15556
 ypos 40692
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender16
 selected true
 xpos 15522
 ypos 40921
 addUserKnob {20 User}
}
set N6a14fee0 [stack 0]
push $N6a14fee0
DeepFromFrames {
 zmin 250
 zmax 320
 name DeepFromFrames15
 selected true
 xpos 15671
 ypos 40977
}
DeepTransform {
 translate {0 0 -95}
 name DeepTransform15
 selected true
 xpos 15671
 ypos 41040
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor15
 selected true
 xpos 15560
 ypos 41108
}
Dot {
 name Dot3
 selected true
 xpos 15594
 ypos 42151
}
push 0
NoOp {
 name MainCam1-18
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 16750
 ypos 40781
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-8
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 16759
 ypos 39821
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayB-5
 help rayB
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 16956
 ypos 39346
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayB}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {-244 -840}
 rotate 16
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform73
 selected true
 xpos 16956
 ypos 39382
}
Dot {
 name Dot1192
 selected true
 xpos 16990
 ypos 39408
}
push $cut_paste_input
NoOp {
 name smokeWall-15
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 16872
 ypos 38963
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle14
 tile_color 0xffffffff
 selected true
 xpos 16872
 ypos 38999
}
Grade {
 white 0.4
 gamma 0.5
 name Grade15
 selected true
 xpos 16872
 ypos 39043
}
TimeOffset {
 time_offset 797.019
 time ""
 name TimeOffset4
 selected true
 xpos 16874
 ypos 39150
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade48
 selected true
 xpos 16870
 ypos 39604
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 translate {0 4.599999905 0}
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card4
 selected true
 xpos 16870
 ypos 39713
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-86 35.49982071 121.3000031}
 uniform_scale 5
 name TransformGeo32
 selected true
 xpos 16870
 ypos 39925
}
Dot {
 name Dot1193
 selected true
 xpos 16904
 ypos 40396
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender15
 selected true
 xpos 16870
 ypos 40786
 addUserKnob {20 User}
}
set N2b2d1a30 [stack 0]
push $N2b2d1a30
DeepFromFrames {
 zmin 250
 zmax 520
 name DeepFromFrames14
 selected true
 xpos 17019
 ypos 40842
}
DeepTransform {
 translate {0 0 -45}
 name DeepTransform14
 selected true
 xpos 17019
 ypos 40905
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor14
 selected true
 xpos 16936
 ypos 40982
}
Dot {
 name Dot5
 selected true
 xpos 16970
 ypos 42125
}
push 0
NoOp {
 name MainCam1-17
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 17546
 ypos 40807
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-23
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 17561
 ypos 39908
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-7
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 17758
 ypos 39469
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {644 -840}
 rotate 20
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform74
 selected true
 xpos 17758
 ypos 39505
}
Dot {
 name Dot1194
 selected true
 xpos 17792
 ypos 39531
}
push $cut_paste_input
NoOp {
 name smokeWall-14
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 17663
 ypos 38834
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle13
 tile_color 0xffffffff
 selected true
 xpos 17663
 ypos 38870
}
Grade {
 white 0.4
 gamma 0.5
 name Grade14
 selected true
 xpos 17663
 ypos 38914
}
Dot {
 name Dot28
 selected true
 xpos 17697
 ypos 39102
}
TimeOffset {
 time_offset 37.78
 time ""
 name TimeOffset5
 selected true
 xpos 17676
 ypos 39239
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade49
 selected true
 xpos 17676
 ypos 39696
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 translate {0 0 3.700000286}
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card5
 selected true
 xpos 17676
 ypos 39802
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-16 35.49983597 121.3000031}
 uniform_scale 5
 name TransformGeo33
 selected true
 xpos 17672
 ypos 40011
}
Dot {
 name Dot1196
 selected true
 xpos 17706
 ypos 40459
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender14
 selected true
 xpos 17666
 ypos 40812
 addUserKnob {20 User}
}
set N2f3859b0 [stack 0]
push $N2f3859b0
DeepFromFrames {
 zmin 250
 zmax 420
 name DeepFromFrames13
 selected true
 xpos 17815
 ypos 40868
}
DeepTransform {
 translate {0 0 -65}
 name DeepTransform13
 selected true
 xpos 17815
 ypos 40931
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor13
 selected true
 xpos 17728
 ypos 41010
}
Dot {
 name Dot7
 selected true
 xpos 17762
 ypos 42099
}
push 0
NoOp {
 name MainCam1-16
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 18503
 ypos 40909
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-24
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 18512
 ypos 40139
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayA-12
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 18709
 ypos 39691
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {44 -840}
 rotate 16
 scale {0.5 1}
 center {512 2048}
 shutteroffset centred
 name Transform75
 selected true
 xpos 18709
 ypos 39727
}
Dot {
 name Dot1197
 selected true
 xpos 18743
 ypos 39762
}
push $cut_paste_input
NoOp {
 name smokeWall-13
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 18628
 ypos 39143
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle12
 tile_color 0xffffffff
 selected true
 xpos 18628
 ypos 39179
}
Grade {
 white 0.4
 gamma 0.5
 name Grade13
 selected true
 xpos 18628
 ypos 39223
}
Dot {
 name Dot25
 selected true
 xpos 18662
 ypos 39411
}
TimeOffset {
 time_offset 982.233
 time ""
 name TimeOffset6
 selected true
 xpos 18627
 ypos 39471
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade50
 selected true
 xpos 18627
 ypos 39928
 addUserKnob {20 User}
}
set Ne342990 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-4.739999294 11.39995575 -2.519995451}
 scaling {1 1.2 1}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card75
 selected true
 xpos 18504
 ypos 39979
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Ne342990
Card2 {
 rows 4
 columns 4
 translate {0 0 -2.359999657}
 uniform_scale 40
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card7
 selected true
 xpos 18627
 ypos 39992
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 2
 selectable false
 name MergeGeo69
 selected true
 xpos 18623
 ypos 40087
}
TransformGeo {
 inputs 3
 translate {49 35.49992371 121.3000031}
 uniform_scale 5
 name TransformGeo34
 selected true
 xpos 18623
 ypos 40243
}
Dot {
 name Dot1198
 selected true
 xpos 18657
 ypos 40665
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender13
 selected true
 xpos 18623
 ypos 40914
 addUserKnob {20 User}
}
set N29538d00 [stack 0]
push $N29538d00
DeepFromFrames {
 zmin 250
 zmax 370
 name DeepFromFrames12
 selected true
 xpos 18772
 ypos 40970
}
DeepTransform {
 translate {0 0 -135}
 name DeepTransform12
 selected true
 xpos 18772
 ypos 41033
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor12
 selected true
 xpos 18685
 ypos 41114
}
Dot {
 name Dot8
 selected true
 xpos 18719
 ypos 42073
}
push 0
NoOp {
 name MainCam1-15
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 19299
 ypos 40973
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-27
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 19307
 ypos 40441
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-8
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 19360
 ypos 39958
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {-184 -1240}
 rotate 22
 center {512 2048}
 shutteroffset centred
 name Transform76
 selected true
 xpos 19360
 ypos 39994
}
Dot {
 name Dot1199
 selected true
 xpos 19391
 ypos 40049
}
push $cut_paste_input
NoOp {
 name smokeWall-12
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 19441
 ypos 39363
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle11
 tile_color 0xffffffff
 selected true
 xpos 19441
 ypos 39399
}
Grade {
 white 0.4
 gamma 0.5
 name Grade12
 selected true
 xpos 19441
 ypos 39443
}
Dot {
 name Dot24
 selected true
 xpos 19475
 ypos 39631
}
TimeOffset {
 time_offset 70.583
 time ""
 name TimeOffset7
 selected true
 xpos 19430
 ypos 39703
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade54
 selected true
 xpos 19416
 ypos 40163
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card9
 selected true
 xpos 19416
 ypos 40301
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-149.9994812 145.9999847 -91.9994812}
 uniform_scale 10
 name TransformGeo35
 selected true
 xpos 19419
 ypos 40463
}
Dot {
 name Dot1200
 selected true
 xpos 19453
 ypos 40871
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender12
 selected true
 xpos 19419
 ypos 40978
 addUserKnob {20 User}
}
set N24681150 [stack 0]
push $N24681150
DeepFromFrames {
 zmin 250
 zmax 670
 name DeepFromFrames11
 selected true
 xpos 19568
 ypos 41034
}
DeepTransform {
 translate {0 0 145}
 name DeepTransform11
 selected true
 xpos 19568
 ypos 41097
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor11
 selected true
 xpos 19428
 ypos 41178
}
Dot {
 name Dot9
 selected true
 xpos 19462
 ypos 42047
}
push 0
NoOp {
 name MainCam1-14
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 20397
 ypos 40831
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-29
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 20407
 ypos 40250
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayB-6
 help rayB
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 20645
 ypos 39683
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayB}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {204 -1140}
 rotate 17
 scale 0.3
 center {512 2048}
 shutteroffset centred
 name Transform78
 selected true
 xpos 20645
 ypos 39748
}
Dot {
 name Dot1203
 selected true
 xpos 20679
 ypos 39797
}
push $cut_paste_input
NoOp {
 name smokeWall-11
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 20540
 ypos 39321
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle10
 tile_color 0xffffffff
 selected true
 xpos 20540
 ypos 39357
}
Grade {
 white 0.4
 gamma 0.5
 name Grade11
 selected true
 xpos 20540
 ypos 39401
}
TimeOffset {
 time_offset 590.684
 time ""
 name TimeOffset43
 selected true
 xpos 20532
 ypos 39495
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade61
 selected true
 xpos 20514
 ypos 39960
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card16
 selected true
 xpos 20517
 ypos 40093
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {26 50.99999619 119.9998245}
 uniform_scale 10
 name TransformGeo37
 selected true
 xpos 20517
 ypos 40255
}
Dot {
 name Dot1204
 selected true
 xpos 20551
 ypos 40611
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender11
 selected true
 xpos 20517
 ypos 40836
 addUserKnob {20 User}
}
set N78fb5160 [stack 0]
push $N78fb5160
DeepFromFrames {
 zmin 250
 zmax 370
 name DeepFromFrames10
 selected true
 xpos 20666
 ypos 40892
}
DeepTransform {
 translate {0 0 -25}
 name DeepTransform10
 selected true
 xpos 20666
 ypos 40955
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor10
 selected true
 xpos 20556
 ypos 41035
}
Dot {
 name Dot10
 selected true
 xpos 20590
 ypos 42021
}
push 0
NoOp {
 name MainCam1-13
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 21170
 ypos 40801
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-31
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 21116
 ypos 40252
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayD-7
 help rayD
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 21381
 ypos 39721
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayD}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {395 -940}
 rotate 17
 scale 0.7
 center {512 2048}
 shutteroffset centred
 name Transform79
 selected true
 xpos 21387
 ypos 39779
}
Dot {
 name Dot1205
 selected true
 xpos 21421
 ypos 39829
}
push $cut_paste_input
NoOp {
 name smokeWall-10
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 21262
 ypos 39379
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle9
 tile_color 0xffffffff
 selected true
 xpos 21262
 ypos 39415
}
Grade {
 white 0.4
 gamma 0.5
 name Grade10
 selected true
 xpos 21262
 ypos 39459
}
TimeOffset {
 time_offset 773.072
 time ""
 name TimeOffset44
 selected true
 xpos 21262
 ypos 39535
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade64
 selected true
 xpos 21255
 ypos 40002
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card17
 selected true
 xpos 21255
 ypos 40135
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-334 104 120}
 uniform_scale 10
 name TransformGeo38
 selected true
 xpos 21250
 ypos 40295
}
Dot {
 name Dot1206
 selected true
 xpos 21284
 ypos 40625
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender10
 selected true
 xpos 21290
 ypos 40806
 addUserKnob {20 User}
}
set N24e925a0 [stack 0]
push $N24e925a0
DeepFromFrames {
 zmin 250
 zmax 370
 name DeepFromFrames9
 selected true
 xpos 21439
 ypos 40862
}
DeepTransform {
 translate {0 0 220}
 name DeepTransform9
 selected true
 xpos 21439
 ypos 40925
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor9
 selected true
 xpos 21349
 ypos 41007
}
Dot {
 name Dot12
 selected true
 xpos 21383
 ypos 41995
}
push 0
NoOp {
 name MainCam1-12
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 22187
 ypos 40840
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-75
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 22166
 ypos 40318
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayA-14
 help rayA
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 22436
 ypos 39767
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayA}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {-104 -1240}
 rotate 15
 center {512 2048}
 shutteroffset centred
 name Transform80
 selected true
 xpos 22436
 ypos 39830
}
Dot {
 name Dot1207
 selected true
 xpos 22470
 ypos 39879
}
push $cut_paste_input
NoOp {
 name smokeWall-9
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 22294
 ypos 39288
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle8
 tile_color 0xffffffff
 selected true
 xpos 22294
 ypos 39324
}
Grade {
 white 0.4
 gamma 0.5
 name Grade9
 selected true
 xpos 22294
 ypos 39368
}
TimeOffset {
 time_offset 163.705
 time ""
 name TimeOffset45
 selected true
 xpos 22311
 ypos 39580
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade66
 selected true
 xpos 22290
 ypos 40048
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card22
 selected true
 xpos 22307
 ypos 40179
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-199.9999847 71.99998474 96}
 uniform_scale 10
 name TransformGeo39
 selected true
 xpos 22307
 ypos 40340
}
Dot {
 name Dot1208
 selected true
 xpos 22341
 ypos 40644
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender9
 selected true
 xpos 22307
 ypos 40845
 addUserKnob {20 User}
}
set N5bffc500 [stack 0]
push $N5bffc500
DeepFromFrames {
 zmin 250
 zmax 370
 name DeepFromFrames8
 selected true
 xpos 22456
 ypos 40901
}
DeepTransform {
 translate {0 0 190}
 name DeepTransform8
 selected true
 xpos 22456
 ypos 40964
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor8
 selected true
 xpos 22349
 ypos 41047
}
Dot {
 name Dot13
 selected true
 xpos 22383
 ypos 41969
}
push 0
NoOp {
 name MainCam1-11
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 23024
 ypos 40832
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-76
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 23027
 ypos 40414
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-9
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 23046
 ypos 39988
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {284 -1240}
 rotate 24
 center {512 2048}
 shutteroffset centred
 name Transform81
 selected true
 xpos 23046
 ypos 40048
}
Dot {
 name Dot1209
 selected true
 xpos 23080
 ypos 40108
}
push $cut_paste_input
NoOp {
 name smokeWall-8
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 23116
 ypos 39377
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle7
 tile_color 0xffffffff
 selected true
 xpos 23116
 ypos 39413
}
Grade {
 white 0.4
 gamma 0.5
 name Grade8
 selected true
 xpos 23116
 ypos 39457
}
TimeOffset {
 time_offset 276.809
 time ""
 name TimeOffset46
 selected true
 xpos 23144
 ypos 39666
}
Grade {
 white 0.5
 name Grade67
 selected true
 xpos 23144
 ypos 39882
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade69
 selected true
 xpos 23140
 ypos 40135
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card24
 selected true
 xpos 23140
 ypos 40266
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {27 141.9996796 59}
 uniform_scale 10
 name TransformGeo40
 selected true
 xpos 23137
 ypos 40419
}
Dot {
 name Dot1210
 selected true
 xpos 23174
 ypos 40616
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender8
 selected true
 xpos 23144
 ypos 40837
 addUserKnob {20 User}
}
set N2ae79530 [stack 0]
push $N2ae79530
DeepFromFrames {
 zmin 250
 zmax 370
 name DeepFromFrames7
 selected true
 xpos 23293
 ypos 40893
}
DeepTransform {
 translate {0 0 40}
 name DeepTransform7
 selected true
 xpos 23293
 ypos 40956
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor7
 selected true
 xpos 23144
 ypos 41036
}
Dot {
 name Dot14
 selected true
 xpos 23178
 ypos 41943
}
push 0
NoOp {
 name MainCam1-10
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 23894
 ypos 40827
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-77
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 23901
 ypos 40535
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-12
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 23949
 ypos 39953
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {284 -1240}
 rotate 24
 scale {0.6 1}
 center {512 2048}
 shutteroffset centred
 name Transform87
 selected true
 xpos 23949
 ypos 40011
}
Dot {
 name Dot1223
 selected true
 xpos 23983
 ypos 40073
}
push $cut_paste_input
NoOp {
 name smokeWall-7
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 24003
 ypos 39385
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle6
 tile_color 0xffffffff
 selected true
 xpos 24003
 ypos 39421
}
Grade {
 white 0.4
 gamma 0.5
 name Grade7
 selected true
 xpos 24003
 ypos 39465
}
Dot {
 name Dot11
 selected true
 xpos 24037
 ypos 39653
}
Dot {
 name Dot1001
 selected true
 xpos 24044
 ypos 39735
}
set Ndfc3a50 [stack 0]
TimeOffset {
 time_offset 276.809
 time ""
 name TimeOffset8
 selected true
 xpos 23825
 ypos 39909
}
Grade {
 white 0.5
 name Grade6
 selected true
 xpos 23825
 ypos 40125
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade130
 selected true
 xpos 23893
 ypos 40295
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 translate {-0.5 -6.439963818 0}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card76
 selected true
 xpos 23918
 ypos 40392
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push 0
NoOp {
 name rayB-7
 help rayB
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 24109
 ypos 39940
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayB}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {284 -1240}
 rotate 24
 scale {0.7 1}
 center {512 2048}
 shutteroffset centred
 name Transform82
 selected true
 xpos 24114
 ypos 40004
}
Dot {
 name Dot1211
 selected true
 xpos 24148
 ypos 40103
}
push $Ndfc3a50
TimeOffset {
 time_offset 605.262
 time ""
 name TimeOffset47
 selected true
 xpos 24026
 ypos 39783
}
Grade {
 white 0.5
 name Grade70
 selected true
 xpos 24022
 ypos 39999
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade71
 selected true
 xpos 24014
 ypos 40254
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 translate {-3.749999762 1 0}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card25
 selected true
 xpos 24014
 ypos 40339
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 2
 selectable false
 name MergeGeo70
 selected true
 xpos 24014
 ypos 40462
}
TransformGeo {
 inputs 3
 translate {-49 142 0}
 uniform_scale 10
 name TransformGeo41
 selected true
 xpos 24014
 ypos 40540
}
Dot {
 name Dot1212
 selected true
 xpos 24048
 ypos 40707
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender6
 selected true
 xpos 24014
 ypos 40832
 addUserKnob {20 User}
}
set N3578c000 [stack 0]
push $N3578c000
DeepFromFrames {
 zmin 300
 zmax 340
 name DeepFromFrames6
 selected true
 xpos 24163
 ypos 40888
}
DeepTransform {
 translate {0 0 60}
 name DeepTransform6
 selected true
 xpos 24163
 ypos 40951
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor6
 selected true
 xpos 24049
 ypos 41030
}
Dot {
 name Dot15
 selected true
 xpos 24083
 ypos 41917
}
push 0
NoOp {
 name MainCam1-9
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 24680
 ypos 40806
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-78
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 24729
 ypos 40398
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-10
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 24977
 ypos 39816
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {354 -1240}
 rotate 20
 scale {0.4 0.5}
 center {512 2048}
 shutteroffset centred
 name Transform83
 selected true
 xpos 24977
 ypos 39884
}
Dot {
 name Dot1213
 selected true
 xpos 25011
 ypos 39936
}
push $cut_paste_input
NoOp {
 name smokeWall-6
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 24861
 ypos 39474
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle5
 tile_color 0xffffffff
 selected true
 xpos 24861
 ypos 39510
}
Grade {
 white 0.4
 gamma 0.5
 name Grade5
 selected true
 xpos 24861
 ypos 39554
}
TimeOffset {
 time_offset 746.722
 time ""
 name TimeOffset48
 selected true
 xpos 24850
 ypos 39643
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade72
 selected true
 xpos 24842
 ypos 40115
 addUserKnob {20 User}
}
Dot {
 name Dot1222
 selected true
 xpos 24876
 ypos 40157
}
set Ne85b970 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-2.20000005 5.94999743 -2.200000048}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card39
 selected true
 xpos 24746
 ypos 40222
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Ne85b970
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card26
 selected true
 xpos 24842
 ypos 40224
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 2
 selectable false
 name MergeGeo67
 selected true
 xpos 24839
 ypos 40343
}
TransformGeo {
 inputs 3
 translate {-172.0000153 98 72}
 uniform_scale 10
 name TransformGeo42
 selected true
 xpos 24839
 ypos 40403
}
Dot {
 name Dot1214
 selected true
 xpos 24873
 ypos 40541
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 100
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender5
 selected true
 xpos 24813
 ypos 40811
 addUserKnob {20 User}
}
set N29eefa40 [stack 0]
push $N29eefa40
DeepFromFrames {
 zmin 300
 zmax 500
 name DeepFromFrames5
 selected true
 xpos 24949
 ypos 40867
}
DeepTransform {
 translate {0 0 80}
 name DeepTransform5
 selected true
 xpos 24949
 ypos 40930
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor5
 selected true
 xpos 24835
 ypos 41024
}
Dot {
 name Dot16
 selected true
 xpos 24869
 ypos 41891
}
push 0
NoOp {
 name MainCam1-3
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 25555
 ypos 40829
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-79
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 25544
 ypos 40524
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayD-8
 help rayD
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 25839
 ypos 39970
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayD}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {265 -1076}
 rotate 25
 scale {1 0.6600000262}
 center {512 2048}
 shutteroffset centred
 name Transform84
 selected true
 xpos 25839
 ypos 40016
}
Dot {
 name Dot1215
 selected true
 xpos 25873
 ypos 40069
}
push $cut_paste_input
NoOp {
 name smokeWall-5
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 25718
 ypos 39432
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle4
 tile_color 0xffffffff
 selected true
 xpos 25718
 ypos 39468
}
Grade {
 white 0.4
 gamma 0.5
 name Grade4
 selected true
 xpos 25718
 ypos 39512
}
Dot {
 name Dot6
 selected true
 xpos 25752
 ypos 39700
}
TimeOffset {
 time_offset 205.495
 time ""
 name TimeOffset49
 selected true
 xpos 25718
 ypos 39775
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade75
 selected true
 xpos 25710
 ypos 40247
 addUserKnob {20 User}
}
set Ne91a7f0 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-3.61009407 7.818212986 0}
 rotate {0 0 -2}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card78
 selected true
 xpos 25601
 ypos 40320
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Ne91a7f0
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card27
 selected true
 xpos 25710
 ypos 40331
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 2
 selectable false
 name MergeGeo71
 selected true
 xpos 25710
 ypos 40454
}
TransformGeo {
 inputs 3
 translate {-283 202 -18}
 uniform_scale 10
 name TransformGeo43
 selected true
 xpos 25701
 ypos 40529
}
Dot {
 name Dot1216
 selected true
 xpos 25735
 ypos 40641
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 80
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender4
 selected true
 xpos 25692
 ypos 40819
 addUserKnob {20 User}
}
set N1dcd3530 [stack 0]
push $N1dcd3530
DeepFromFrames {
 zmin 300
 zmax 500
 name DeepFromFrames4
 selected true
 xpos 25828
 ypos 40875
}
DeepTransform {
 translate {0 0 80}
 name DeepTransform4
 selected true
 xpos 25828
 ypos 40938
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor4
 selected true
 xpos 25707
 ypos 41047
}
Dot {
 name Dot17
 selected true
 xpos 25741
 ypos 41865
}
push 0
NoOp {
 name MainCam1-2
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 26314
 ypos 40803
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-80
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 26325
 ypos 40357
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayC-11
 help rayC
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 26546
 ypos 39848
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayC}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {584 -1240}
 rotate 23
 center {512 2048}
 shutteroffset centred
 name Transform85
 selected true
 xpos 26546
 ypos 39910
}
Dot {
 name Dot1217
 selected true
 xpos 26580
 ypos 39965
}
push $cut_paste_input
NoOp {
 name smokeWall-4
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 26451
 ypos 39304
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle3
 tile_color 0xffffffff
 selected true
 xpos 26451
 ypos 39340
}
Grade {
 white 0.4
 gamma 0.5
 name Grade3
 selected true
 xpos 26451
 ypos 39384
}
Dot {
 name Dot4
 selected true
 xpos 26485
 ypos 39572
}
TimeOffset {
 time_offset 255.435
 time ""
 name TimeOffset50
 selected true
 xpos 26458
 ypos 39677
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade77
 selected true
 xpos 26440
 ypos 40150
 addUserKnob {20 User}
}
Card2 {
 rows 4
 columns 4
 translate {0 4.550000191 0}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card28
 selected true
 xpos 26440
 ypos 40219
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
TransformGeo {
 inputs 3
 translate {-307.9989929 122.9999924 68}
 uniform_scale 10
 name TransformGeo44
 selected true
 xpos 26450
 ypos 40418
}
Dot {
 name Dot1218
 selected true
 xpos 26484
 ypos 40523
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 80
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender3
 selected true
 xpos 26451
 ypos 40793
 addUserKnob {20 User}
}
set N3ab44fd0 [stack 0]
push $N3ab44fd0
DeepFromFrames {
 zmin 300
 zmax 500
 name DeepFromFrames3
 selected true
 xpos 26587
 ypos 40849
}
DeepTransform {
 translate {0 0 100}
 name DeepTransform3
 selected true
 xpos 26587
 ypos 40912
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor3
 selected true
 xpos 26420
 ypos 41045
}
Dot {
 name Dot18
 selected true
 xpos 26454
 ypos 41839
}
push 0
NoOp {
 name MainCam1-1
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 27137
 ypos 40824
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
NoOp {
 name MainCam1-81
 help MainCam1
 tile_color 0x2d0000ff
 note_font_size 20
 selected true
 xpos 27176
 ypos 40280
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T MainCam1}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push 0
push 0
NoOp {
 name rayD-9
 help rayD
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 27407
 ypos 39685
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T rayD}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Transform {
 translate {248 -1336}
 rotate 16.72278595
 scale {0.7059999704 0.3880000114}
 center {512 2048}
 shutteroffset centred
 name Transform86
 selected true
 xpos 27407
 ypos 39766
}
Dot {
 name Dot1219
 selected true
 xpos 27441
 ypos 39817
}
push $cut_paste_input
NoOp {
 name smokeWall-3
 help smokeWall
 tile_color 0xfa0
 note_font_size 20
 selected true
 xpos 27295
 ypos 39322
 hide_input true
 addUserKnob {20 User}
 addUserKnob {26 connect l "connected to :" T smokeWall}
 addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
 addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
 addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
 addUserKnob {6 showsource -STARTLINE +HIDDEN}
 addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle2
 tile_color 0xffffffff
 selected true
 xpos 27295
 ypos 39358
}
Grade {
 white 0.4
 gamma 0.5
 name Grade2
 selected true
 xpos 27295
 ypos 39402
}
TimeOffset {
 time_offset 668.517
 time ""
 name TimeOffset51
 selected true
 xpos 27273
 ypos 39542
}
Grade {
 inputs 1+1
 white {{Grade45.white}}
 name Grade80
 selected true
 xpos 27276
 ypos 39901
 addUserKnob {20 User}
}
Dot {
 name Dot1221
 selected true
 xpos 27310
 ypos 40002
}
set Nea9a0c0 [stack 0]
Card2 {
 rows 4
 columns 4
 translate {-2.20000005 7.949997425 -2.200000048}
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card38
 selected true
 xpos 27139
 ypos 40068
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
push $Nea9a0c0
Card2 {
 rows 4
 columns 4
 uniform_scale 30
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card29
 selected true
 xpos 27276
 ypos 40059
 addUserKnob {20 User}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
 addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
 addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
}
MergeGeo {
 inputs 2
 selectable false
 name MergeGeo66
 selected true
 xpos 27274
 ypos 40177
}
TransformGeo {
 inputs 3
 translate {-347 131.9997101 40}
 uniform_scale 10
 name TransformGeo45
 selected true
 xpos 27274
 ypos 40326
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 overscan 80
 shutteroffset centred
 motion_vectors_type distance
 name ScanlineRender1
 selected true
 xpos 27274
 ypos 40814
 addUserKnob {20 User}
}
set N2a1182a0 [stack 0]
push $N2a1182a0
DeepFromFrames {
 zmin 300
 zmax 500
 name DeepFromFrames2
 selected true
 xpos 27410
 ypos 40870
}
DeepTransform {
 translate {0 0 300}
 name DeepTransform1
 selected true
 xpos 27410
 ypos 40933
}
DeepRecolor {
 inputs 2
 channels rgba
 targetInputAlpha true
 name DeepRecolor2
 selected true
 xpos 27243
 ypos 41136
}
DeepMerge {
 inputs 2
 name DeepMerge1
 selected true
 xpos 27243
 ypos 41835
}
DeepMerge {
 inputs 2
 name DeepMerge2
 selected true
 xpos 27243
 ypos 41861
}
DeepMerge {
 inputs 2
 name DeepMerge5
 selected true
 xpos 27243
 ypos 41887
}
DeepMerge {
 inputs 2
 name DeepMerge6
 selected true
 xpos 27243
 ypos 41913
}
DeepMerge {
 inputs 2
 name DeepMerge9
 selected true
 xpos 27243
 ypos 41939
}
DeepMerge {
 inputs 2
 name DeepMerge10
 selected true
 xpos 27243
 ypos 41965
}
DeepMerge {
 inputs 2
 name DeepMerge11
 selected true
 xpos 27243
 ypos 41991
}
DeepMerge {
 inputs 2
 name DeepMerge12
 selected true
 xpos 27243
 ypos 42017
}
DeepMerge {
 inputs 2
 name DeepMerge13
 selected true
 xpos 27243
 ypos 42043
}
DeepMerge {
 inputs 2
 name DeepMerge14
 selected true
 xpos 27243
 ypos 42069
}
DeepMerge {
 inputs 2
 name DeepMerge15
 selected true
 xpos 27243
 ypos 42095
}
DeepMerge {
 inputs 2
 name DeepMerge16
 selected true
 xpos 27243
 ypos 42121
}
DeepMerge {
 inputs 2
 name DeepMerge17
 selected true
 xpos 27243
 ypos 42147
}
DeepMerge {
 inputs 2
 name DeepMerge18
 selected true
 xpos 27243
 ypos 42173
}
DeepMerge {
 inputs 2
 name DeepMerge19
 selected true
 xpos 27243
 ypos 42199
}
DeepMerge {
 inputs 2
 name DeepMerge20
 selected true
 xpos 27243
 ypos 42251
}
DeepMerge {
 inputs 2
 operation holdout
 name DeepMerge36
 selected true
 xpos 27243
 ypos 42450
}
DeepToImage {
 name DeepToImage1
 selected true
 xpos 27243
 ypos 42553
}
