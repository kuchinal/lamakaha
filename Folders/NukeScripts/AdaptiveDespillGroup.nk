set cut_paste_input [stack 0]
version 9.0 v8
push 0
push 0
push $cut_paste_input
Group {
 inputs 3
 name AdaptDespill1
 tile_color 0x3b9b00ff
 note_font "Verdana Bold Bold"
 selected true
 xpos 50
 ypos -97
 addUserKnob {20 despillMadness}
 addUserKnob {6 Despill l "Show despill only" +STARTLINE}
 Despill true
 addUserKnob {41 screenType l "screen type" T DespilMadness.screenType}
 addUserKnob {41 algorithm l "despill algorithm" T DespilMadness.algorithm}
 addUserKnob {41 LimitPercentage l "fine tune" T DespilMadness.LimitPercentage}
 addUserKnob {26 ""}
 addUserKnob {26 text_2 l "" +STARTLINE}
 addUserKnob {26 spacer l " "}
 addUserKnob {41 sourceLuma l "restore source luminance" T DespilMadness.sourceLuma}
 addUserKnob {41 saturation T DespilMadness.saturation}
 addUserKnob {41 gamma T DespilMadness.gamma}
 addUserKnob {41 offset T DespilMadness.offset}
 addUserKnob {26 ""}
 addUserKnob {41 spillMatteOut l "output spill matte in alpha" T DespilMadness.spillMatteOut}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannel l mask T DespilMadness.maskChannel}
 addUserKnob {41 invmsk l invert T DespilMadness.invmsk}
 addUserKnob {41 which l mix T DespilMadness.which}
 addUserKnob {20 Grades}
 addUserKnob {41 whitepoint l PickA T Grade3.whitepoint}
 addUserKnob {41 add l PickB T Grade4.add}
}
 Input {
  inputs 0
  name FG
  xpos -47
  ypos -314
 }
 Dot {
  name Dot2
  label fg
  note_font_size 30
  xpos -13
  ypos -263
 }
 Dot {
  name Dot8
  xpos -13
  ypos -185
 }
set N884a2800 [stack 0]
 Group {
  name DespilMadness
  note_font "Bitstream Vera Sans"
  xpos -47
  ypos -98
  mapsize {0.15 0.15}
  addUserKnob {20 DespillMadness l "Despill Settings"}
  addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
  addUserKnob {41 algorithm l "despill algorithm" T GizmoControl.algorithm}
  addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
  addUserKnob {26 ""}
  addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
  addUserKnob {26 spacer l " " T " "}
  addUserKnob {6 sourceLuma l "restore source luminance" t "Restores luminance of original image." +STARTLINE}
  addUserKnob {41 saturation T CC_SpillMap.saturation}
  addUserKnob {41 gamma T CC_SpillMap.gamma}
  addUserKnob {41 offset T CC_SpillMap.offset}
  addUserKnob {26 ""}
  addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannel l mask T KeymixMask.maskChannel}
  addUserKnob {6 invmsk l invert -STARTLINE}
  addUserKnob {41 which l mix T mix.which}
 }
  Input {
   inputs 0
   name img
   xpos 262
   ypos -342
  }
  Dot {
   name Dot6
   xpos 296
   ypos -186
  }
set N884a2000 [stack 0]
  Dot {
   name Dot2
   xpos 296
   ypos -71
  }
set N872c3800 [stack 0]
  Dot {
   name Dot3
   xpos 626
   ypos -71
  }
set N872c3c00 [stack 0]
  Expression {
   expr2 b>g*LimitPercentage?g*LimitPercentage:b
   expr3 b-g*LimitPercentage
   name GreenLimitsBlue1
   xpos 728
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N872c3c00
  Expression {
   expr2 b>r*LimitPercentage?r*LimitPercentage:b
   expr3 b-r*LimitPercentage
   name RedLimitsBlue
   xpos 592
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N872c3c00
  Expression {
   expr2 b>(g+2*r)/2*LimitPercentage?(g+2*r)/2*LimitPercentage:b
   expr3 b-(2*r+g)*LimitPercentage/2
   name DoubleRedAve2
   xpos 1125
   ypos 43
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N872c3c00
  Expression {
   expr2 b>(2*g+r)/2*LimitPercentage?(2*g+r)/2*LimitPercentage:b
   expr3 b-(r+2*g)*LimitPercentage/2
   name DoubleGreenAve
   xpos 998
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage}}
  }
push $N872c3c00
  Expression {
   expr2 b>(g+r)/2*LimitPercentage?(g+r)/2*LimitPercentage:b
   expr3 b-(r+g)*LimitPercentage/2
   name RedAndGreenLimitBlue
   xpos 862
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
  Switch {
   inputs 5
   which {{GizmoControl.algorithm i}}
   name SwitchBlue
   xpos 728
   ypos 190
  }
  Dot {
   name Dot5
   xpos 762
   ypos 370
  }
push $N872c3800
  Dot {
   name Dot1
   xpos 164
   ypos -71
  }
set N71cbec00 [stack 0]
  Expression {
   expr1 g>b*LimitPercentage?b*LimitPercentage:g
   expr3 g-b*LimitPercentage
   name BlueLimitsGreen
   xpos -15
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N71cbec00
  Expression {
   expr1 g>r*LimitPercentage?r*LimitPercentage:g
   expr3 g-r*LimitPercentage
   name RedLimitsGreen
   xpos -160
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage 0.94
  }
push $N71cbec00
  Expression {
   expr1 g>(b+2*r)/3*LimitPercentage?(b+2*r)/3*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name DoubleRedAve
   xpos 370
   ypos 42
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N71cbec00
  Expression {
   expr1 g>(2*b+r)/3*LimitPercentage?(2*b+r)/3*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name DoubleBlueAve
   xpos 257
   ypos 42
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N71cbec00
  Expression {
   expr1 g>(b+r)/2*LimitPercentage?(b+r)/2*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name RedAveBlueLimitsGreen
   xpos 130
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
  Switch {
   inputs 5
   which {{GizmoControl.algorithm i}}
   name SwitchGreen
   xpos -15
   ypos 199
  }
  Dot {
   name Dot4
   xpos 19
   ypos 370
  }
  Switch {
   inputs 2
   which {{GizmoControl.screenType i}}
   name SwitchMain
   xpos 257
   ypos 366
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 257
   ypos 408
  }
  ColorCorrect {
   maskChannelInput rgba.alpha
   name CC_SpillMap
   note_font Verdana
   xpos 257
   ypos 468
  }
set N51407000 [stack 0]
  Dot {
   name Dot9
   xpos 440
   ypos 478
  }
  Dot {
   name Dot10
   xpos 440
   ypos 1389
  }
  Input {
   inputs 0
   name mask
   xpos -696
   ypos -348
   number 1
  }
  Expression {
   channel0 {-rgba.red -rgba.green -rgba.blue none}
   expr0 0
   channel1 {-rgba.red -rgba.green -rgba.blue none}
   expr1 0
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   expr2 0
   channel3 {rgba.alpha none none rgba.alpha}
   expr3 a==0?0:a
   name AlphaFix1
   label "To avid Gizmo being in state of\nerror without something plugged in input."
   xpos -696
   ypos 861
  }
set N51406000 [stack 0]
push $N51406000
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name CopyMask
   xpos -296
   ypos 867
  }
  Invert {
   name Invert1
   xpos -296
   ypos 943
   disable {{parent.invmsk i}}
  }
push $N884a2000
  Dot {
   name Dot7
   xpos -345
   ypos -186
  }
  Dot {
   name Dot8
   xpos -345
   ypos 551
  }
  Expression {
   channel0 {-rgba.red -rgba.green -rgba.blue none}
   expr0 0
   channel1 {-rgba.red -rgba.green -rgba.blue none}
   expr1 0
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   expr2 0
   channel3 {rgba.alpha none none rgba.alpha}
   expr3 a==0?0:a
   name AlphaFix
   label "To avid Gizmo being in state of\nerror without something plugged in input."
   xpos -27
   ypos 534
  }
set N65530800 [stack 0]
  Dot {
   name Dot11
   xpos -113
   ypos 614
  }
  Dot {
   name Dot12
   xpos -113
   ypos 818
  }
set N9e7b7c00 [stack 0]
push $N65530800
push $N65530800
push $N51407000
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   from3 rgba.alpha
   to3 rgba.alpha
   name CopyAlpha
   xpos 257
   ypos 534
  }
set N9e7b7800 [stack 0]
  Merge2 {
   inputs 2
   operation minus
   name Merge3
   xpos -27
   ypos 672
  }
  Clamp {
   name Clamp2
   xpos -27
   ypos 698
  }
  Saturation {
   saturation 0
   name Saturation2
   xpos -27
   ypos 736
  }
push $N9e7b7800
  Merge2 {
   inputs 2
   operation plus
   name RestoreLuma
   xpos 257
   ypos 736
   disable {{!parent.sourceLuma i}}
  }
  Keymix {
   inputs 3
   maskChannel -rgba.alpha
   name KeymixMask
   xpos 257
   ypos 943
  }
push $N9e7b7c00
  Dot {
   name Dot13
   xpos -113
   ypos 1087
  }
  Dissolve {
   inputs 2
   which 1
   name mix
   xpos 257
   ypos 1077
  }
  Switch {
   inputs 2
   which {{GizmoControl.spillMatteOut i}}
   name SwitchSpillMap
   xpos 257
   ypos 1385
  }
  Output {
   name Output1
   xpos 257
   ypos 1485
  }
  NoOp {
   inputs 0
   name GizmoControl
   selected true
   xpos 875
   ypos 414
   addUserKnob {20 User}
   addUserKnob {26 version l v1.0}
   addUserKnob {4 screenType l "screen type" M {green blue}}
   addUserKnob {4 algorithm l "despill algorithm" M {average "double green/blue average" "double red average" "red limit" "green/blue limit" ""}}
   addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
  }
 end_group
 Dot {
  name Dot5
  xpos -13
  ypos -65
 }
set N872f2c00 [stack 0]
 Dot {
  name Dot9
  xpos -386
  ypos -65
 }
 Dot {
  name Dot10
  xpos -386
  ypos 391
 }
 Input {
  inputs 0
  name ALPHA
  xpos 352
  ypos -312
  number 1
 }
 Dot {
  name Dot3
  label key
  note_font_size 30
  xpos 386
  ypos -264
 }
push $N872f2c00
push $N884a2800
 Dot {
  name Dot4
  xpos 265
  ypos -185
 }
 Merge2 {
  inputs 2
  operation from
  bbox B
  name Merge1
  xpos 231
  ypos -69
 }
set N872f2400 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  tile_color 0x3d3f8e00
  xpos 140
  ypos 8
 }
push $N872f2400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  tile_color 0x3f633800
  xpos 231
  ypos 4
 }
 Switch {
  inputs 2
  which {{DespilMadness.screenType}}
  name Switch1
  xpos 231
  ypos 54
 }
set N9f4f9800 [stack 0]
 Grade {
  whitepoint {{parent.Grade3.whitepoint} {parent.Grade3.whitepoint} {parent.Grade3.whitepoint} {parent.Grade3.whitepoint}}
  name Grade1
  xpos 231
  ypos 147
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge2
  xpos 352
  ypos 147
 }
 Dot {
  name Dot6
  xpos 386
  ypos 202
 }
 Input {
  inputs 0
  name BG
  xpos 495
  ypos -309
  number 2
 }
 Dot {
  name Dot1
  label bg
  note_font_size 30
  xpos 529
  ypos -270
 }
 Grade {
  add {{parent.Grade4.add} {parent.Grade4.add} {parent.Grade4.add} {parent.Grade4.add}}
  reverse true
  black_clamp false
  name Grade2
  xpos 495
  ypos 147
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos 496
  ypos 198
 }
 Dot {
  name Dot7
  xpos 529
  ypos 329
 }
push $N872f2c00
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos -47
  ypos 325
 }
 Switch {
  inputs 2
  which {{parent.Despill}}
  name Switch2
  selected true
  xpos -47
  ypos 387
 }
 Output {
  name Output1
  xpos -47
  ypos 425
 }
push $N9f4f9800
 Grade {
  whitepoint {0.6883299351 0.6883299351 0.6883299351 0.6883299351}
  name Grade3
  xpos 110
  ypos 125
 }
push $N872f2c00
 Grade {
  add {0.01758000441 0.008262605406 0 1}
  name Grade4
  xpos -130
  ypos -6
 }
end_group
