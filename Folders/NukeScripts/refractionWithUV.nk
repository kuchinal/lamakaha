#! C:/Program Files/Nuke7.0v8/Nuke7.0.exe -nx
version 7.0 v8
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="0" w="2560" h="1570" screen="0">
        <splitter orientation="1">
            <split size="1302"/>
            <splitter orientation="2">
                <split size="1338"/>
                <dock id="" hideTitles="1" activePageId="Viewer.2">
                    <page id="Viewer.1"/>
                    <page id="Viewer.2"/>
                    <page id="Viewer.3"/>
                </dock>
                <split size="164"/>
                <splitter orientation="1">
                    <split size="649"/>
                    <dock id="" activePageId="Script Editor.1">
                        <page id="Curve Editor.1"/>
                        <page id="DopeSheet.1"/>
                        <page id="Script Editor.1"/>
                    </dock>
                    <split size="649"/>
                    <splitter orientation="2">
                        <split size="143"/>
                        <dock id="" hideTitles="1" activePageId="com.ohufx.MassivePanel">
                            <page id="com.ohufx.MassivePanel"/>
                        </dock>
                        <split size="17"/>
                        <dock id="" hideTitles="1" activePageId="Progress.1">
                            <page id="Progress.1"/>
                        </dock>
                    </splitter>
                </splitter>
            </splitter>
            <split size="1238"/>
            <splitter orientation="2">
                <split size="692"/>
                <dock id="" hideTitles="1" activePageId="Properties.1">
                    <page id="Properties.1"/>
                </dock>
                <split size="810"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="DAG.2"/>
                </dock>
            </splitter>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name C:/Users/lamakaha/.nuke/user/GeneralSetups/refractionWithUV.nk
 frame 100
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 addUserKnob {20 User}
 addUserKnob {1 viewer_process l "viewer process"}
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x447a3801
 label "normals out"
 note_font "Helvetica bold Bold"
 note_font_size 30
 xpos -4392
 ypos 2807
 bdwidth 217
 bdheight 65
}
Read {
 inputs 0
 file K:/____BKP/C/Normals_reflection.nk
 cacheLocal always
 origset true
 on_error checkerboard
 auto_alpha true
 name Read1
 xpos -214
 ypos 132
 postage_stamp false
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard1
 xpos -237
 ypos 494
 postage_stamp false
}
Read {
 inputs 0
 file H:/Photos/__Renders/cabaliero.jpg
 cacheLocal always
 format "636 955 0 0 636 955 1 "
 origset true
 auto_alpha true
 name Read2
 xpos -112
 ypos 580
 postage_stamp false
}
Reformat {
 pbb true
 name Reformat1
 xpos -112
 ypos 616
}
set N1c44e200 [stack 0]
Merge2 {
 name Merge1
 xpos -382
 ypos 1649
}
NoOp {
 inputs 0
 name Review
 autolabel "\"reviews\""
 tile_color 0xff0000ff
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_size 17
 xpos -171
 ypos 380
 hide_input true
 addUserKnob {20 User l "To do"}
 addUserKnob {22 set t "Paste your \"to do\" list into 'label' field, than press this button, every line will be put in corresponding field\nIf there are some unfinished tasks they will be put at top of the tasks list" T "n = nuke.thisNode()\ntext = n\['label'].value()\n\n################################################\nallknobs = n.knobs()\nfor knob in allknobs:\n    if \"T\" in knob:\n        y = n\[knob].value()\n        if \"DONE\" not in y:\n            text =  y+\"\\n\"+ text\n            n\['label'].setValue(text)\n            text = n\['label'].value()\nfor knob in allknobs:\n    if \"T\" in knob:\n        n\[knob].setEnabled(False)\n        n\[knob].setValue(\"DONE\")\n    if \"P\" in knob:\n        n\[knob].setLabel('<font color=\"Black\">&#9786;')\n################################################\nlines = text.split(\"\\n\") # splitted lines \ncount = text.count(\"\\n\")+2 # number of lines\nlineNumber = 1\ncountNow = 1\nwhile countNow<count:\n    name = \"T\"+ str(lineNumber)       #basic name\n    nameP = \"P\"+ str(lineNumber)       #basic name\n    done = n\[name].value()\n\n    line =lines\[int(countNow)-1] #exact line to paste\n    if line != \"\":\n       n\[name].setValue(line)\n       n\[name].setEnabled(True)\n       n\[nameP].setLabel('<font color=\"Red\">&#9760;')\n\n    countNow = countNow + 1                  #increment for count\n    lineNumber = lineNumber+1 #increment for lines \nn\['label'].setValue(\"\")       " +STARTLINE}
 addUserKnob {22 refresh l INVISIBLE -STARTLINE +INVISIBLE T "if nuke.ask(\"You made it!!!! or just sick of it?\"):\n   m = nuke.thisNode()\n   x = m.xpos()\n   y= m.ypos()\n   nuke.delete(m)\n   nuke.nodePaste('H:/.nuke/GeneralSetups/Reviews.nk')\n   new = nuke.toNode(\"Reviews\")\n   new.setXYpos(x,y) \n   nuke.show(new)\n\n"}
 addUserKnob {22 Hide l Unhide t "This button will  Hide/Unhide completed tasks" -STARTLINE T "n = nuke.thisNode()\nallknobs = n.knobs()\nlab = nuke.thisKnob().label()\nif lab == \"Hide\":\n    for knob in allknobs:\n        if \"T\" in knob:\n            y = n\[knob].value()\n            if \"DONE\" in y:\n                n\[knob].setVisible(False)\n                fix = knob.replace(\"T\",\"P\")\n                n\[fix].setVisible(False)\n                nuke.thisKnob().setLabel(\"Unhide\")\nelse:\n    n = nuke.thisNode()\n    allknobs = n.knobs()\n    for knob in allknobs:\n           n\[knob].setVisible(True)\n    nuke.thisKnob().setLabel(\"Hide\")"}
 addUserKnob {22 P1 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T1'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T1 l "" -STARTLINE +DISABLED +HIDDEN}
 T1 "DONE "
 addUserKnob {22 P2 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T2'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T2 l "" -STARTLINE +DISABLED +HIDDEN}
 T2 "DONE "
 addUserKnob {22 P3 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T3'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T3 l "" -STARTLINE +DISABLED +HIDDEN}
 T3 "DONE "
 addUserKnob {22 P4 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T4'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T4 l "" -STARTLINE +DISABLED +HIDDEN}
 T4 DONE
 addUserKnob {22 P5 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T5'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T5 l "" -STARTLINE +DISABLED +HIDDEN}
 T5 DONE
 addUserKnob {22 P6 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T6'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T6 l "" -STARTLINE +DISABLED +HIDDEN}
 T6 DONE
 addUserKnob {22 P7 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T7'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T7 l "" -STARTLINE +DISABLED +HIDDEN}
 T7 DONE
 addUserKnob {22 P8 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T8'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T8 l "" -STARTLINE +DISABLED +HIDDEN}
 T8 DONE
 addUserKnob {22 P9 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T9'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T9 l "" -STARTLINE +DISABLED +HIDDEN}
 T9 DONE
 addUserKnob {22 P10 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T10'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T10 l "" -STARTLINE +DISABLED +HIDDEN}
 T10 DONE
 addUserKnob {22 P11 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T11'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T11 l "" -STARTLINE +DISABLED +HIDDEN}
 T11 DONE
 addUserKnob {22 P12 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T12'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T12 l "" -STARTLINE +DISABLED +HIDDEN}
 T12 DONE
 addUserKnob {22 P13 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T13'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T13 l "" -STARTLINE +DISABLED +HIDDEN}
 T13 DONE
 addUserKnob {22 P14 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T14'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T14 l "" -STARTLINE +DISABLED +HIDDEN}
 T14 DONE
 addUserKnob {22 P15 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T15'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T15 l "" -STARTLINE +DISABLED +HIDDEN}
 T15 DONE
 addUserKnob {22 P16 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T16'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T16 l "" -STARTLINE +DISABLED +HIDDEN}
 T16 DONE
 addUserKnob {22 P17 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T17'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T17 l "" -STARTLINE +DISABLED +HIDDEN}
 T17 DONE
 addUserKnob {22 P18 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T18'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T18 l "" -STARTLINE +DISABLED +HIDDEN}
 T18 DONE
 addUserKnob {22 P19 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T19'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T19 l "" -STARTLINE +DISABLED +HIDDEN}
 T19 DONE
 addUserKnob {22 P20 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T20'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T20 l "" -STARTLINE +DISABLED +HIDDEN}
 T20 DONE
 addUserKnob {22 P21 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T21'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T21 l "" -STARTLINE +DISABLED +HIDDEN}
 T21 DONE
 addUserKnob {22 P22 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T22'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T22 l "" -STARTLINE +DISABLED +HIDDEN}
 T22 DONE
 addUserKnob {22 P23 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T23'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T23 l "" -STARTLINE +DISABLED +HIDDEN}
 T23 DONE
 addUserKnob {22 P24 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T24'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T24 l "" -STARTLINE +DISABLED +HIDDEN}
 T24 DONE
 addUserKnob {22 P25 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T25'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T25 l "" -STARTLINE +DISABLED +HIDDEN}
 T25 DONE
 addUserKnob {22 P26 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T26'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T26 l "" -STARTLINE +DISABLED +HIDDEN}
 T26 DONE
 addUserKnob {22 P27 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T27'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T27 l "" -STARTLINE +DISABLED +HIDDEN}
 T27 DONE
 addUserKnob {22 P28 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T28'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T28 l "" -STARTLINE +DISABLED +HIDDEN}
 T28 DONE
 addUserKnob {22 P29 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T29'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T29 l "" -STARTLINE +DISABLED +HIDDEN}
 T29 DONE
 addUserKnob {22 P30 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T30'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T30 l "" -STARTLINE +DISABLED +HIDDEN}
 T30 DONE
 addUserKnob {22 P31 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T31'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T31 l "" -STARTLINE +DISABLED +HIDDEN}
 T31 DONE
 addUserKnob {22 P32 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T32'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T32 l "" -STARTLINE +DISABLED +HIDDEN}
 T32 DONE
 addUserKnob {22 P33 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T33'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T33 l "" -STARTLINE +DISABLED +HIDDEN}
 T33 DONE
 addUserKnob {22 P34 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T34'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T34 l "" -STARTLINE +DISABLED +HIDDEN}
 T34 DONE
 addUserKnob {22 P35 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T35'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T35 l "" -STARTLINE +DISABLED +HIDDEN}
 T35 DONE
 addUserKnob {22 P36 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T36'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T36 l "" -STARTLINE +DISABLED +HIDDEN}
 T36 DONE
 addUserKnob {22 P37 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T37'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T37 l "" -STARTLINE +DISABLED +HIDDEN}
 T37 DONE
 addUserKnob {22 P38 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T38'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T38 l "" -STARTLINE +DISABLED +HIDDEN}
 T38 DONE
 addUserKnob {22 P39 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T39'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T39 l "" -STARTLINE +DISABLED +HIDDEN}
 T39 DONE
 addUserKnob {22 P40 l "<font color=\"Black\">&#9786;" +HIDDEN T "node = nuke.thisNode() \nline ='T40'\nt = node\[line].value()\nif \"DONE\" in t:\n   node\[line].setEnabled(True)\n   t = t.replace(\"DONE \",\"\")\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Red\">&#9786;')\nelse:\n   node\[line].setEnabled(False)\n   t = \"DONE \"+t\n   node\[line].setValue(t)\n   nuke.thisKnob().setLabel('<font color=\"Black\">&#9786;')" +STARTLINE}
 addUserKnob {1 T40 l "" -STARTLINE +DISABLED +HIDDEN}
 T40 DONE
}
PostageStamp {
 name Review1
 help Review
 tile_color 0xfa0
 note_font_size 20
 xpos -150
 ypos 302
 hide_input true
 addUserKnob {20 User}
 addUserKnob {22 showsourse l "show source" -STARTLINE T "a = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
 addUserKnob {22 jumptosource l "jump to source" -STARTLINE T "a = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\nxC = dep.xpos() + dep.screenWidth()/2\nyC = dep.ypos() + dep.screenHeight()/2\nnuke.zoom( 3, \[ xC, yC ])\n"}
 addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
}
Camera2 {
 inputs 0
 translate {0 0 5.578000069}
 focal 30
 name Camera1
 xpos -574
 ypos 422
}
Noise {
 inputs 0
 center {960 540}
 name Noise1
 xpos -643
 ypos 368
}
Constant {
 inputs 0
 channels rgb
 color 1
 name Constant1
 xpos -491
 ypos 266
 postage_stamp false
}
Sphere {
 rows 300
 columns 300
 rotate {0 180 0}
 name Sphere1
 xpos -491
 ypos 321
}
DisplaceGeo {
 inputs 2
 scale 1
 name DisplaceGeo1
 xpos -493
 ypos 368
 disable true
}
push 0
ScanlineRender {
 inputs 3
 motion_vectors_type distance
 output_shader_vectors true
 N_channel rgb
 name ScanlineRender1
 xpos -491
 ypos 443
}
Invert {
 channels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
 name Invert1
 xpos -491
 ypos 467
 disable true
}
Grade {
 white 12
 black_clamp false
 maskChannelInput rgba.blue
 name Grade2
 xpos -491
 ypos 501
 disable true
}
Premult {
 name Premult2
 xpos -491
 ypos 537
}
FrameHold {
 name FrameHold1
 xpos -491
 ypos 561
}
Transform {
 translate {{curve x1 34 x30 565} {curve x1 -56 x30 -2}}
 scale 0.8
 center {960 540}
 name Transform1
 xpos -491
 ypos 597
 cached true
}
Remove {
 operation keep
 channels rgba
 name Remove1
 xpos -491
 ypos 621
}
Dot {
 name Dot1
 xpos -457
 ypos 672
}
set N1c513e00 [stack 0]
push $N1c44e200
add_layer {refr refr.r refr.g refr.b refr.a}
Copy {
 inputs 2
 from0 rgba.red
 to0 refr.r
 from1 rgba.green
 to1 refr.g
 from2 rgba.blue
 to2 refr.b
 from3 rgba.alpha
 to3 refr.a
 name Copy1
 xpos -332
 ypos 631
}
set N1c514170 [stack 0]
Dot {
 name Dot2
 xpos -369
 ypos 919
}
push $N1c514170
IDistort {
 channels rgb
 uv refr
 uv_scale 20
 blur refr.b
 blur_scale 100
 name IDistort1
 xpos -432
 ypos 800
}
push $N1c514170
IDistort {
 channels rgb
 uv refr
 uv_scale 20
 blur refr.b
 blur_scale 100
 name IDistort2
 xpos -322
 ypos 800
}
push $N1c514170
IDistort {
 channels rgb
 uv refr
 uv_scale 20
 blur refr.b
 blur_scale 100
 name IDistort3
 xpos -232
 ypos 800
}
ShuffleCopy {
 inputs 2
 red red
 name ShuffleCopy1
 xpos -232
 ypos 859
}
ShuffleCopy {
 inputs 2
 green green
 name ShuffleCopy2
 xpos -232
 ypos 883
}
Copy {
 inputs 2
 from0 refr.a
 to0 rgba.alpha
 name Copy2
 xpos -238
 ypos 910
}
Unpremult {
 name Unpremult1
 xpos -232
 ypos 979
}
Grade {
 channels {-refr.r -refr.g refr.b -refr.a}
 blackpoint 0.28
 multiply 0.155
 name Grade1
 xpos -232
 ypos 1003
}
Grade {
 add 0.44
 maskChannelInput refr.b
 name Grade3
 xpos -232
 ypos 1051
}
Grade {
 gamma 0.81
 maskChannelInput rgba.alpha
 name Grade4
 xpos -232
 ypos 1103
}
Premult {
 name Premult1
 xpos -232
 ypos 1139
}
Blur {
 inputs 0
 channels rgba
 name Blur2
 xpos -324
 ypos 1181
}
Roto {
 inputs 0
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44800000 x44428000}
    {a}
    {curvegroup Bezier1 576 bezier
     {{cc
       {f 8192}
       {p
        {xc37e0000 xc2280000}
        {x445a8000 x44608000}
        {x437e0000 x42280000}
        {xc2380000 x42fc0000}
        {x44c50000 x44730000}
        {x42380000 xc2fc0000}
        {x42b80000 x41600000}
        {x44a3c000 x43e10000}
        {xc2b80000 xc1600000}
        {x43360000 xc30c0000}
        {x44718000 x44038000}
        {xc3360000 x430c0000}}}
      {cc
       {f 8192}
       {p
        {xc37e0000 xc2280000}
        {}
        {x437e0000 x42280000}
        {xc2380000 x42fc0000}
        {}
        {x42380000 xc2fc0000}
        {x42b80000 x41600000}
        {}
        {xc2b80000 xc1600000}
        {x43360000 xc30c0000}
        {}
        {xc3360000 x430c0000}}}}
     {t x4493b000 x4431e000}
     {a str 1 spx x44800000 spy x44428000 sb 1 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 motionblur_shutter_offset_type centred
 source_black_outside true
 createNewTrack {{-1} "-1\t(none)\t-1" "1000\tNew Track Layer\t1000"}
 name Roto1
 xpos 69
 ypos 1374
 hide_input true
}
set N1c6263c0 [stack 0]
Blur {
 channels rgba
 size 76
 name Blur1
 xpos 72
 ypos 1431
}
push 0
Group {
 inputs 2
 name Glass1
 xpos 81
 ypos 1484
 addUserKnob {20 "" l Glass}
 addUserKnob {4 Displacement t "please select alpha if you have only alpha mask, select normals if you have normals, shuffle refraction filter or fresnel to blue channel to have additional controls" M {alpha normals "" ""}}
 addUserKnob {7 displace l Displace R 0 20}
 displace 11.3
 addUserKnob {7 abberation l Abberation}
 addUserKnob {26 "" l Defocus}
 addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
 addUserKnob {41 size T ZBlur1.size}
 addUserKnob {41 max_size l maximum T ZBlur1.max_size}
 addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
}
 Input {
  inputs 0
  name img
  xpos -289
  ypos 81
 }
set N1c626aa0 [stack 0]
 Dot {
  name Dot1
  xpos -255
  ypos 634
 }
 Input {
  inputs 0
  name normals
  xpos -397
  ypos -195
  number 2
 }
 Shuffle {
  in2 rgba
  black blue2
  white alpha2
  out forward
  out2 depth
  name Shuffle2
  label green
  xpos -397
  ypos -161
 }
 Dot {
  name Dot9
  xpos -363
  ypos -37
 }
 Input {
  inputs 0
  name control
  xpos -64
  ypos -388
  number 1
 }
set N1c627bd0 [stack 0]
push $N1c627bd0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -64
  ypos -354
 }
set N1c627f40 [stack 0]
 Dot {
  name Dot2
  xpos 94
  ypos -343
 }
set N1c6282b0 [stack 0]
 Transform {
  translate {0 -1}
  center {320 240}
  name down
  xpos 60
  ypos -140
 }
push $N1c627f40
 Dot {
  name Dot3
  xpos -122
  ypos -343
 }
 Dot {
  name Dot4
  xpos -207
  ypos -343
 }
 Transform {
  translate {0 1}
  center {320 240}
  name up
  xpos -241
  ypos -180
 }
push $N1c6282b0
 Dot {
  name Dot5
  xpos 176
  ypos -343
 }
 Transform {
  translate {1 0}
  center {320 240}
  name right
  xpos 142
  ypos -221
 }
push $N1c627f40
 Shuffle {
  in alpha
  green black
  blue black
  out rgb
  name Shuffle1
  xpos -64
  ypos -311
 }
 Transform {
  translate {-1 0}
  center {320 240}
  name left
  xpos -64
  ypos -285
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.green
  name Copy2
  xpos -64
  ypos -228
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.blue
  name Copy3
  xpos -64
  ypos -187
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -64
  ypos -147
 }
 Expression {
  temp_name0 l
  temp_expr0 red
  temp_name1 r
  temp_expr1 green
  temp_name2 u
  temp_expr2 blue
  temp_name3 d
  temp_expr3 alpha
  channel0 {forward.u -forward.v -backward.u none}
  expr0 (l-r)*width
  channel1 {-forward.u forward.v -backward.u none}
  expr1 (d-u)*width
  channel2 depth
  expr2 (abs(l-r)+abs(d-u))*width/2
  name Expression1
  xpos -64
  ypos -95
 }
set N1c770b20 [stack 0]
 Switch {
  inputs 2
  which {{Displacement}}
  name Switch2
  xpos -64
  ypos -40
 }
 Dot {
  name Dot8
  xpos -30
  ypos 1
 }
set N1c770e90 [stack 0]
 Dot {
  name Dot6
  xpos 89
  ypos 1
 }
 Dot {
  name Dot7
  xpos 89
  ypos 193
 }
push $N1c770e90
push $N1c626aa0
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels forward
  name Copy1
  xpos -64
  ypos 69
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy8
  xpos -64
  ypos 181
 }
 ZBlur {
  channels rgba
  math -linear
  size 10
  shape 1
  name ZBlur1
  xpos -65
  ypos 240
  disable {{!parent.useDef}}
 }
 Dot {
  name Dot10
  xpos -30
  ypos 268
 }
set N1c772330 [stack 0]
 IDistort {
  channels {rgba.red rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort4
  xpos 98
  ypos 491
 }
push $N1c772330
 IDistort {
  channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1+parent.abberation/10)}}
  name IDistort3
  xpos 66
  ypos 314
 }
push $N1c772330
 IDistort {
  channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1-parent.abberation/10)}}
  name IDistort1
  xpos -188
  ypos 309
 }
push $N1c772330
 IDistort {
  channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort2
  xpos -64
  ypos 311
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy9
  xpos -64
  ypos 372
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy10
  xpos -64
  ypos 408
 }
 Switch {
  inputs 2
  which {{parent.abberation==0}}
  name Switch1
  xpos -64
  ypos 491
  addUserKnob {20 "" l Weta}
  addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy5
  xpos -64
  ypos 616
 }
 Output {
  name Output1
  xpos -59
  ypos 747
 }
push $N1c770b20
 Viewer {
  channels forward
  input_process false
  name Viewer1
  selected true
  xpos -496
  ypos 97
  hide_input true
 }
end_group
push $N1c513e00
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle2
 label alpha
 xpos -498
 ypos 861
 disable true
}
push $N1c513e00
Shuffle {
 red blue
 green blue
 alpha blue
 name Shuffle1
 label blue
 xpos -786
 ypos 1254
}
push $N1c44e200
Group {
 inputs 2
 name Group1
 xpos -692
 ypos 1459
 addUserKnob {20 "" l Glass}
 addUserKnob {7 displace l Displace R 0 20}
 displace 0.75
 addUserKnob {7 abberation l Abberation}
 abberation 0.068
 addUserKnob {26 "" l Defocus}
 addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
 addUserKnob {41 size T ZBlur1.size}
 addUserKnob {41 max_size l maximum T ZBlur1.max_size}
 addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
}
 Input {
  inputs 0
  name img
  xpos -289
  ypos 81
 }
set N1cabd150 [stack 0]
 Dot {
  name Dot1
  xpos -255
  ypos 634
 }
 Input {
  inputs 0
  name control
  xpos -64
  ypos -388
  number 1
 }
set N1cabd830 [stack 0]
push $N1cabd830
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -64
  ypos -354
 }
set N1cabdba0 [stack 0]
 Dot {
  name Dot2
  xpos 94
  ypos -343
 }
set N1cabdf10 [stack 0]
 Transform {
  translate {0 -1}
  center {320 240}
  name down
  xpos 60
  ypos -140
 }
push $N1cabdba0
 Dot {
  name Dot3
  xpos -122
  ypos -343
 }
 Dot {
  name Dot4
  xpos -207
  ypos -343
 }
 Transform {
  translate {0 1}
  center {320 240}
  name up
  xpos -241
  ypos -180
 }
push $N1cabdf10
 Dot {
  name Dot5
  xpos 176
  ypos -343
 }
 Transform {
  translate {1 0}
  center {320 240}
  name right
  xpos 142
  ypos -221
 }
push $N1cabdba0
 Shuffle {
  in alpha
  green black
  blue black
  out rgb
  name Shuffle1
  xpos -64
  ypos -311
 }
 Transform {
  translate {-1 0}
  center {320 240}
  name left
  xpos -64
  ypos -285
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.green
  name Copy2
  xpos -64
  ypos -228
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.blue
  name Copy3
  xpos -64
  ypos -187
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -64
  ypos -147
 }
 Expression {
  temp_name0 l
  temp_expr0 red
  temp_name1 r
  temp_expr1 green
  temp_name2 u
  temp_expr2 blue
  temp_name3 d
  temp_expr3 alpha
  channel0 {forward.u -forward.v -backward.u none}
  expr0 (l-r)*width
  channel1 {-forward.u forward.v -backward.u none}
  expr1 (d-u)*width
  channel2 depth
  expr2 (abs(l-r)+abs(d-u))*width/2
  name Expression1
  selected true
  xpos -64
  ypos -3
 }
set N1caedfa0 [stack 0]
 Dot {
  name Dot6
  xpos 89
  ypos 1
 }
 Dot {
  name Dot7
  xpos 89
  ypos 193
 }
push $N1caedfa0
push $N1cabd150
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels forward
  name Copy1
  xpos -64
  ypos 67
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy8
  xpos -64
  ypos 175
 }
 ZBlur {
  channels rgba
  math -linear
  shape 1
  name ZBlur1
  xpos -64
  ypos 229
  disable {{!parent.useDef i}}
 }
set N1caef0d0 [stack 0]
 IDistort {
  channels {rgba.red rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace i}}
  name IDistort4
  xpos 98
  ypos 491
 }
push $N1caef0d0
 IDistort {
  channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1+parent.abberation/10)}}
  name IDistort3
  xpos 66
  ypos 314
 }
push $N1caef0d0
 IDistort {
  channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1-parent.abberation/10)}}
  name IDistort1
  xpos -188
  ypos 309
 }
push $N1caef0d0
 IDistort {
  channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace i}}
  name IDistort2
  xpos -64
  ypos 311
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy9
  xpos -64
  ypos 372
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy10
  xpos -64
  ypos 412
 }
 Switch {
  inputs 2
  which {{parent.abberation==0}}
  name Switch1
  xpos -64
  ypos 491
  addUserKnob {20 "" l Weta}
  addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy5
  xpos -64
  ypos 616
 }
 Output {
  name Output1
  xpos -59
  ypos 747
 }
end_group
push $N1c513e00
push $N1c44e200
Group {
 inputs 2
 name Glass
 xpos -540
 ypos 1414
 addUserKnob {20 "" l Glass}
 addUserKnob {4 Displacement t "please select red if you have only red channel mask, select normals if you have normals, shuffle refraction filter or fresnel to blue channel to have additional controls, it will expect to have alpha in both cases" M {"red channel (keep alpha for alpha)" normals "" "" "" ""}}
 Displacement normals
 addUserKnob {7 displace l Displace R 0 20}
 displace 8.6
 addUserKnob {7 abberation l Abberation}
 addUserKnob {6 premultiply +STARTLINE}
 addUserKnob {20 defocus n 1}
 defocus 0
 addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
 addUserKnob {41 size T ZBlur1.size}
 addUserKnob {41 max_size l maximum T ZBlur1.max_size}
 addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 glasscolor l "glass color" n 1}
 glasscolor 0
 addUserKnob {41 multiply T Grade4.multiply}
 addUserKnob {41 add l offset T Grade4.add}
 addUserKnob {41 gamma T Grade4.gamma}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 fresnel n 1}
 fresnel 0
 addUserKnob {7 whitepoint R 0 2}
 whitepoint 1
 addUserKnob {7 blackpoint -STARTLINE R -1 1}
 addUserKnob {7 add_1 l add -STARTLINE}
 addUserKnob {7 blur}
 addUserKnob {18 color}
 color {0 0 0}
 addUserKnob {20 endGroup n -1}
}
 Input {
  inputs 0
  name control
  xpos -64
  ypos -563
  number 1
 }
 Dot {
  name Dot11
  xpos -30
  ypos -510
 }
set N25e01410 [stack 0]
 Dot {
  name Dot12
  xpos 356
  ypos -510
 }
 Dot {
  name Dot13
  xpos 356
  ypos 719
 }
push $N25e01410
 Dot {
  name Dot14
  xpos -363
  ypos -510
 }
 Shuffle {
  in2 rgba
  black blue2
  white alpha2
  out forward
  out2 depth
  name Shuffle2
  label green
  xpos -397
  ypos -407
 }
 Grade {
  channels forward
  multiply 8
  name Grade5
  xpos -397
  ypos -371
 }
 Dot {
  name Dot9
  xpos -363
  ypos -20
 }
push $N25e01410
 Blur {
  channels rgb
  name Blur2
  xpos -64
  ypos -445
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle3
  label red
  xpos -64
  ypos -421
 }
set N25e02f90 [stack 0]
push $N25e02f90
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -64
  ypos -354
 }
set N25e03300 [stack 0]
 Dot {
  name Dot2
  xpos 94
  ypos -343
 }
set N25e03670 [stack 0]
 Transform {
  translate {0 -1}
  center {320 240}
  name down
  xpos 60
  ypos -140
 }
push $N25e03300
 Dot {
  name Dot3
  xpos -122
  ypos -343
 }
 Dot {
  name Dot4
  xpos -207
  ypos -343
 }
 Transform {
  translate {0 1}
  center {320 240}
  name up
  xpos -241
  ypos -180
 }
push $N25e03670
 Dot {
  name Dot5
  xpos 176
  ypos -343
 }
 Transform {
  translate {1 0}
  center {320 240}
  name right
  xpos 142
  ypos -221
 }
push $N25e03300
 Shuffle {
  in alpha
  green black
  blue black
  out rgb
  name Shuffle1
  xpos -64
  ypos -311
 }
 Transform {
  translate {-1 0}
  center {320 240}
  name left
  xpos -64
  ypos -285
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.green
  name Copy2
  xpos -64
  ypos -227
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.blue
  name Copy3
  xpos -64
  ypos -187
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -64
  ypos -147
 }
 Expression {
  temp_name0 l
  temp_expr0 red
  temp_name1 r
  temp_expr1 green
  temp_name2 u
  temp_expr2 blue
  temp_name3 d
  temp_expr3 alpha
  channel0 {forward.u -forward.v -backward.u none}
  expr0 (l-r)*width
  channel1 {-forward.u forward.v -backward.u none}
  expr1 (d-u)*width
  channel2 depth
  expr2 (abs(l-r)+abs(d-u))*width/2
  name Expression1
  xpos -64
  ypos -111
 }
 Grade {
  channels forward
  multiply 0.01
  name Grade2
  xpos -64
  ypos -87
 }
 Switch {
  inputs 2
  which {{Displacement}}
  name Switch2
  xpos -64
  ypos -23
 }
 Dot {
  name Dot8
  xpos -30
  ypos 1
 }
set N25ee4020 [stack 0]
 Dot {
  name Dot6
  xpos 234
  ypos 1
 }
 Dot {
  name Dot7
  xpos 234
  ypos 193
 }
set N25ee4700 [stack 0]
 Dot {
  name Dot1
  xpos 234
  ypos 631
 }
push $N25ee4700
push $N25ee4020
 Input {
  inputs 0
  name image
  xpos -236
  ypos 81
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels forward
  name Copy1
  xpos -64
  ypos 69
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy8
  xpos -64
  ypos 178
 }
 ZBlur {
  channels rgba
  math -linear
  size 10
  shape 1
  name ZBlur1
  xpos -65
  ypos 240
  disable {{!parent.useDef}}
 }
 Dot {
  name Dot10
  xpos -30
  ypos 268
 }
set N25f65dc0 [stack 0]
 IDistort {
  channels {rgba.red rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort4
  xpos 98
  ypos 491
 }
push $N25f65dc0
 IDistort {
  channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1+parent.abberation/10)}}
  name IDistort3
  xpos 66
  ypos 314
 }
push $N25f65dc0
 IDistort {
  channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1-parent.abberation/10)}}
  name IDistort1
  xpos -188
  ypos 309
 }
push $N25f65dc0
 IDistort {
  channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort2
  xpos -64
  ypos 311
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy9
  xpos -64
  ypos 372
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy10
  xpos -64
  ypos 408
 }
 Switch {
  inputs 2
  which {{parent.abberation==0}}
  name Switch1
  xpos -64
  ypos 491
  addUserKnob {20 "" l Weta}
  addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy5
  xpos -64
  ypos 616
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy7
  xpos -62
  ypos 710
 }
 Grade {
  channels depth
  blackpoint {{parent.blackpoint}}
  whitepoint {{parent.whitepoint}}
  add {{parent.add_1}}
  name Grade1
  xpos -62
  ypos 834
 }
 Clamp {
  channels depth
  name Clamp1
  xpos -62
  ypos 878
 }
 Blur {
  channels depth
  size {{parent.blur}}
  name Blur1
  xpos -62
  ypos 927
 }
 Grade {
  add {{parent.color}}
  maskChannelInput depth.Z
  name Grade3
  xpos -62
  ypos 977
 }
 Grade {
  maskChannelInput rgba.alpha
  name Grade4
  xpos -62
  ypos 1029
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos -62
  ypos 1136
 }
 Premult {
  name Premult2
  xpos -62
  ypos 1223
  disable {{!parent.premultiply}}
 }
 Output {
  name Output1
  xpos -62
  ypos 1383
 }
end_group
push $N1c513e00
push $N1c44e200
Transform {
 translate {652 -480}
 scale {-1 -1}
 center {1068 600}
 black_outside false
 name Transform2
 xpos -70
 ypos 990
 disable true
}
Group {
 inputs 2
 name Glass2
 tile_color 0x70272fff
 note_font "Verdana Bold Bold Bold"
 note_font_size 14
 note_font_color 0xffffffff
 xpos -70
 ypos 1068
 addUserKnob {20 "" l Glass}
 addUserKnob {4 Displacement l control t "please select red if you have only red channel mask, select normals if you have normals, shuffle refraction filter or fresnel to blue channel to have additional controls, it will expect to have alpha in both cases" M {"red channel" normals "" "" "" "" "" ""}}
 Displacement normals
 addUserKnob {7 blur_1 l "blur ctrl" R 0 100}
 addUserKnob {7 displace l Displace R 0 20}
 displace 5
 addUserKnob {7 abberation l Abberation}
 addUserKnob {6 premultiply +STARTLINE}
 premultiply true
 addUserKnob {20 defocus n 1}
 defocus 0
 addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
 addUserKnob {41 size T ZBlur1.size}
 addUserKnob {41 max_size l maximum T ZBlur1.max_size}
 addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 glasscolor l "glass color" n 1}
 glasscolor 0
 addUserKnob {41 multiply T Grade4.multiply}
 addUserKnob {41 add l offset T Grade4.add}
 addUserKnob {41 gamma T Grade4.gamma}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 fresnel n 1}
 addUserKnob {7 whitepoint R 0 2}
 whitepoint 1
 addUserKnob {7 blackpoint -STARTLINE R -1 1}
 addUserKnob {7 add_1 l add -STARTLINE}
 addUserKnob {7 blur}
 addUserKnob {18 color}
 color {0 0 0}
 addUserKnob {20 endGroup n -1}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x447a3801
  label "normals out"
  note_font "Helvetica bold Bold Bold"
  note_font_size 30
  xpos -2727
  ypos 2948
  bdwidth 217
  bdheight 65
 }
 Input {
  inputs 0
  name control
  xpos -64
  ypos -563
  number 1
 }
 Dot {
  name Dot11
  xpos -30
  ypos -510
 }
set N26027f40 [stack 0]
 Dot {
  name Dot14
  xpos -363
  ypos -510
 }
set N260282b0 [stack 0]
 Shuffle {
  in2 rgba
  black blue2
  white alpha2
  out forward
  out2 depth
  name Shuffle2
  label green
  xpos -397
  ypos -407
 }
 Grade {
  channels forward
  multiply 8
  black_clamp false
  name Grade5
  xpos -397
  ypos -371
 }
 Dot {
  name Dot9
  xpos -363
  ypos -48
 }
push $N26027f40
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle3
  label red
  xpos -64
  ypos -421
 }
set N26029070 [stack 0]
push $N26029070
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -64
  ypos -354
 }
set N260293e0 [stack 0]
 Dot {
  name Dot2
  xpos 94
  ypos -343
 }
set N26029750 [stack 0]
 Transform {
  translate {0 -1}
  center {320 240}
  name down
  xpos 60
  ypos -140
 }
push $N260293e0
 Dot {
  name Dot3
  xpos -122
  ypos -343
 }
 Dot {
  name Dot4
  xpos -207
  ypos -343
 }
 Transform {
  translate {0 1}
  center {320 240}
  name up
  xpos -241
  ypos -180
 }
push $N26029750
 Dot {
  name Dot5
  xpos 176
  ypos -343
 }
 Transform {
  translate {1 0}
  center {320 240}
  name right
  xpos 142
  ypos -221
 }
push $N260293e0
 Shuffle {
  in alpha
  green black
  blue black
  out rgb
  name Shuffle1
  xpos -64
  ypos -311
 }
 Transform {
  translate {-1 0}
  center {320 240}
  name left
  xpos -64
  ypos -285
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.green
  name Copy2
  xpos -64
  ypos -227
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.blue
  name Copy3
  xpos -64
  ypos -187
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -64
  ypos -147
 }
 Expression {
  temp_name0 l
  temp_expr0 red
  temp_name1 r
  temp_expr1 green
  temp_name2 u
  temp_expr2 blue
  temp_name3 d
  temp_expr3 alpha
  channel0 {forward.u -forward.v -backward.u none}
  expr0 (l-r)*width
  channel1 {-forward.u forward.v -backward.u none}
  expr1 (d-u)*width
  channel2 depth
  expr2 (abs(l-r)+abs(d-u))*width/2
  name Expression1
  xpos -64
  ypos -111
 }
 Blur {
  channels forward
  size {{parent.blur_1}}
  name Blur3
  xpos -64
  ypos -87
 }
 Switch {
  inputs 2
  which {{Displacement}}
  name Switch2
  xpos -64
  ypos -51
 }
 Dot {
  name Dot8
  xpos -30
  ypos 1
 }
set N26101130 [stack 0]
 Dot {
  name Dot6
  xpos 234
  ypos 1
 }
 Dot {
  name Dot7
  xpos 234
  ypos 193
 }
set N26101810 [stack 0]
push $N26101130
 Input {
  inputs 0
  name image
  xpos -236
  ypos 81
 }
set N26101b80 [stack 0]
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels forward
  name Copy1
  xpos -64
  ypos 69
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy8
  xpos -64
  ypos 178
 }
set N26102260 [stack 0]
 ZBlur {
  channels rgba
  math -linear
  size 10
  shape 1
  name ZBlur1
  xpos -65
  ypos 240
  disable {{!parent.useDef}}
 }
 Dot {
  name Dot10
  xpos -30
  ypos 268
 }
set N26102940 [stack 0]
 IDistort {
  channels {rgba.red rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort4
  xpos 98
  ypos 491
 }
push $N26102940
 IDistort {
  channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1+parent.abberation/10)}}
  name IDistort3
  xpos 66
  ypos 314
 }
push $N26102940
 IDistort {
  channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace/(1-parent.abberation/10)}}
  name IDistort1
  xpos -188
  ypos 309
 }
push $N26102940
 IDistort {
  channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  uv forward
  uv_scale {{parent.displace}}
  name IDistort2
  xpos -64
  ypos 311
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy9
  xpos -64
  ypos 372
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy10
  xpos -64
  ypos 408
 }
 Switch {
  inputs 2
  which {{parent.abberation==0}}
  name Switch1
  xpos -64
  ypos 491
  addUserKnob {20 "" l Weta}
  addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
 }
set N26241aa0 [stack 0]
 Dot {
  name Dot15
  xpos -93
  ypos 540
 }
 Camera2 {
  inputs 0
  translate {-6.199998856 4.359999657 -13.02000046}
  rotate {-12.65400028 -150.1829987 0}
  name Camera1
  xpos -2930
  ypos 2818
 }
set N2623ddb0 [stack 0]
push $N2623ddb0
 Constant {
  inputs 0
  color 1
  format "512 512 0 0 512 512 1 square_512"
  name Constant1
  xpos -2786
  ypos 2555
 }
set N2623e120 [stack 0]
 Sphere {
  translate {-0.6299999952 2.167999983 -1.419999957}
  name Sphere1
  xpos -2676
  ypos 2682
 }
push $N2623e120
 Sphere {
  translate {3.234999895 1.559999943 -0.09000000358}
  name Sphere2
  xpos -2786
  ypos 2682
 }
push $N2623e120
 Sphere {
  translate {-0.9649999738 -0.4050000012 0.5}
  name Sphere3
  xpos -2896
  ypos 2682
 }
 Scene {
  inputs 4
  name Scene1
  xpos -2776
  ypos 2771
 }
 Constant {
  inputs 0
  channels rgb
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant12
  xpos -1547
  ypos 2898
 }
set N2623f250 [stack 0]
 ScanlineRender {
  inputs 3
  samples 10
  motion_vectors_type velocity
  output_shader_vectors true
  N_channel rgb
  name ScanlineRender1
  xpos -2786
  ypos 2921
 }
 Dot {
  name Dot17
  xpos -2752
  ypos 3038
 }
set N2623f930 [stack 0]
 Dot {
  name Dot18
  xpos -3391
  ypos 3037
 }
 Dot {
  name Dot19
  xpos -3391
  ypos 4545
 }
push $N2623f930
 Unpremult {
  name Unpremult1
  xpos -2786
  ypos 3090
 }
 Dot {
  name Dot20
  xpos -2752
  ypos 3151
 }
set N262406f0 [stack 0]
 Dot {
  name Dot21
  xpos -3230
  ypos 3150
 }
 Dot {
  name Dot22
  xpos -3230
  ypos 4122
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0.2 0}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant10
  xpos -3120
  ypos 3992
 }
 Group {
  inputs 2
  name Dot_product1
  xpos -3120
  ypos 4118
  addUserKnob {20 User}
  addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
  knob_normalizeA true
  addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
  knob_normalizeB true
  addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
 }
  Input {
   inputs 0
   name VEC_A
   xpos -517
   ypos 184
  }
  Group {
   name Normalize_Vector_A
   xpos -517
   ypos 223
   disable {{"1 - parent.knob_normalizeA" i}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    xpos -532
    ypos -357
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  Input {
   inputs 0
   name VEC_B
   xpos -345
   ypos 183
   number 1
  }
  Group {
   name Normalize_Vector
   xpos -345
   ypos 225
   disable {{"1 - parent.knob_normalizeB"}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    selected true
    xpos -532
    ypos -343
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  MergeExpression {
   inputs 2
   temp_name0 result
   temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
   expr0 result
   expr1 result
   expr2 result
   expr3 knob_dotA>0.5?result:Ba
   name DOT_PRODUCT
   xpos -441
   ypos 294
   addUserKnob {20 "" l User}
  }
set N262ef300 [stack 0]
  Output {
   name Output1
   xpos -441
   ypos 341
  }
push $N262ef300
  Viewer {
   viewerProcess None
   input_process false
   name Viewer1
   selected true
   xpos -40
   ypos -10
   hide_input true
  }
 end_group
 Grade {
  multiply {0.9819999933 1 0.985075295 1}
  name Grade7
  xpos -3120
  ypos 4144
 }
 Dot {
  name Dot23
  xpos -3086
  ypos 4230
 }
 Constant {
  inputs 0
  channels rgb
  color {1 1 1 1}
  name Constant11
  xpos -2799
  ypos 4124
 }
 Grade {
  multiply 0.225
  name Grade8
  xpos -2799
  ypos 4200
 }
 Merge2 {
  inputs 2
  operation plus
  name LIGHT
  xpos -2799
  ypos 4226
 }
 Dot {
  name Dot24
  xpos -2765
  ypos 4359
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 1 0}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant9
  xpos -2405
  ypos 3403
 }
push $N262406f0
 Dot {
  name Dot25
  xpos -2624
  ypos 3150
 }
set N26357700 [stack 0]
 Group {
  name RotationMatrix
  help "Use this for rotating xyz vector data such as P and N."
  xpos -2658
  ypos 3505
  addUserKnob {20 RotationMatrix}
  addUserKnob {41 in l "vector in" T Shuffle1.in}
  addUserKnob {41 out l output T ShuffleCopy1.out}
  addUserKnob {13 rot l rotation t "Link to say axis' or camera's rotate"}
  rot {{parent.Camera1.rotate.x} {parent.Camera1.rotate.y} {parent.Camera1.rotate.z}}
  addUserKnob {4 zchannel l "z channel" t "reverse z is used for example if translating world normals to\ncam normals based on a linked camera rotation" M {reverse "don't reverse"}}
  zchannel "don't reverse"
 }
  Input {
   inputs 0
   name Input
   xpos -304
   ypos -79
  }
set N26357a70 [stack 0]
  Shuffle {
   in rgb
   out rgb
   name Shuffle1
   xpos -189
   ypos -22
  }
  ColorMatrix {
   matrix {
       {{cos(radians(yrot))} 0 {-sin(radians(yrot))}}
       {0 1 0}
       {{sin(radians(yrot))} 0 {cos(radians(yrot))}}
     }
   name ColorMatrix14
   label yrot
   xpos -189
   ypos 42
   addUserKnob {20 "" l User}
   addUserKnob {7 yrot l "y rotation" R -90 90}
   yrot {{parent.rot.y}}
  }
  ColorMatrix {
   matrix {
       {1 0 0}
       {0 {cos(radians(xrot)) i} {sin(radians(xrot)) i}}
       {0 {-sin(radians(xrot)) i} {cos(radians(xrot)) i}}
     }
   name ColorMatrix15
   label "xrot\n"
   xpos -189
   ypos 80
   addUserKnob {20 "" l User}
   addUserKnob {7 xrot l "x rotation" R -90 90}
   xrot {{parent.rot.x i}}
  }
  ColorMatrix {
   matrix {
       {{cos(radians(zrot)) i} {sin(radians(zrot)) i} 0}
       {{-sin(radians(zrot)) i} {cos(radians(zrot)) i} 0}
       {0 0 1}
     }
   name ColorMatrix13
   label "zrot\n"
   selected true
   xpos -189
   ypos 118
   addUserKnob {20 "" l User}
   addUserKnob {7 zrot l "z rotation" R -90 90}
   zrot {{parent.rot.z i}}
  }
set N26358830 [stack 0]
  Multiply {
   channels {-rgba.red -rgba.green rgba.blue}
   value -1
   name Multiply4
   label "reverse Z"
   xpos -189
   ypos 201
   disable {{parent.zchannel x1 0}}
  }
push $N26357a70
  ShuffleCopy {
   inputs 2
   in rgb
   red red
   green green
   blue blue
   out rgb
   name ShuffleCopy1
   xpos -304
   ypos 292
  }
  Output {
   name Output1
   xpos -304
   ypos 399
  }
push $N26358830
  Viewer {
   viewerProcess None
   input_process false
   name Viewer1
   xpos 70
   ypos -10
   hide_input true
  }
 end_group
set N1c70d8e0 [stack 0]
 Group {
  inputs 2
  name Dot_product
  xpos -2405
  ypos 3504
  addUserKnob {20 User}
  addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
  knob_normalizeA true
  addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
  knob_normalizeB true
  addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
 }
  Input {
   inputs 0
   name VEC_A
   xpos -516
   ypos 182
  }
  Group {
   name Normalize_Vector_A
   xpos -516
   ypos 219
   disable {{"1 - parent.knob_normalizeA" i}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    xpos -532
    ypos -357
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  Input {
   inputs 0
   name VEC_B
   xpos -345
   ypos 182
   number 1
  }
  Group {
   name Normalize_Vector
   xpos -345
   ypos 222
   disable {{"1 - parent.knob_normalizeB"}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    selected true
    xpos -532
    ypos -343
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  MergeExpression {
   inputs 2
   temp_name0 result
   temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
   expr0 result
   expr1 result
   expr2 result
   expr3 knob_dotA>0.5?result:Ba
   name DOT_PRODUCT
   xpos -449
   ypos 293
   addUserKnob {20 "" l User}
  }
set N264756a0 [stack 0]
  Output {
   name Output1
   xpos -441
   ypos 341
  }
push $N264756a0
  Viewer {
   viewerProcess None
   input_process false
   name Viewer1
   selected true
   xpos -40
   ypos -10
   hide_input true
  }
 end_group
 Group {
  name Frenel
  xpos -2405
  ypos 3607
  addUserKnob {20 User}
  addUserKnob {7 ior l IOR R 0 5}
  ior {{parent.Refract_Vector1.knob_refF i}}
 }
  Input {
   inputs 0
   name Input1
   xpos 460
   ypos -318
  }
  Expression {
   temp_name0 IOR
   temp_expr0 "1.0 / parent.ior"
   temp_name1 _FF
   temp_expr1 "( IOR - 1.0 ) * ( IOR - 1.0 )"
   temp_name2 _F
   temp_expr2 "_FF + (  4 * IOR * pow( 1 - r, 5) )"
   temp_name3 F
   temp_expr3 "_F / ( ( IOR + 1 ) * ( IOR + 1 ) )"
   expr0 F
   expr1 F
   expr2 F
   name Expression1
   xpos 460
   ypos -256
  }
  Output {
   name Output1
   xpos 460
   ypos -178
  }
 end_group
set N1c70e8a0 [stack 0]
 Invert {
  name Invert1
  xpos -2405
  ypos 3832
 }
 Dot {
  name Dot26
  xpos -2371
  ypos 3939
 }
push $N262406f0
 Constant {
  inputs 0
  channels rgb
  color {0 0 -1 0}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant2
  label "Blue = -1\n"
  note_font "Verdana Bold Bold Bold"
  note_font_size 30
  xpos -2273
  ypos 3170
 }
set N264e53e0 [stack 0]
 Group {
  inputs 2
  name Refract_Vector1
  xpos -2851
  ypos 3231
  addUserKnob {20 User}
  addUserKnob {7 knob_refT l "refractive index from" R 0 10}
  knob_refT 1
  addUserKnob {7 knob_refF l "refractive index from" R 0 10}
  knob_refF 2
 }
  Input {
   inputs 0
   name I_VEC
   xpos -518
   ypos 334
  }
  Dot {
   name Dot1
   xpos -484
   ypos 489
  }
  Input {
   inputs 0
   name N_VEC
   xpos -352
   ypos 334
   number 1
  }
  MergeExpression {
   inputs 2
   temp_name0 IdotN
   temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
   temp_name1 bb
   temp_expr1 "(IdotN >=0)? (parent.knob_refT / parent.knob_refF) : (parent.knob_refF / parent.knob_refT)"
   temp_name2 D2
   temp_expr2 "1 - bb * bb *(1 - IdotN * IdotN)"
   temp_name3 aa
   temp_expr3 "(IdotN > 0 ) ? bb * IdotN - sqrt(D2) : bb * IdotN + sqrt(D2)"
   expr0 "(D2 > 0 ) ? Ar * bb - Br * aa : 0"
   expr1 "(D2 > 0 ) ? Ag * bb - Bg * aa : 0"
   expr2 "(D2 > 0 ) ? Ab * bb - Bb * aa : 0"
   expr3 "(D2 > 0 ) ? 1: 0"
   name refract_expression
   label "\n\n\n"
   selected true
   xpos -352
   ypos 483
  }
  Output {
   name Output1
   xpos -352
   ypos 692
  }
 end_group
set N1c70ec90 [stack 0]
push 0
 Group {
  inputs 2
  name Vector_to_st2
  xpos -2786
  ypos 3705
  addUserKnob {20 User}
  addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
  knob_flipST true
  addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
  knob_invertS true
  addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
  knob_invertT true
  addUserKnob {6 knob_premult l premult +STARTLINE}
  knob_premult true
 }
  Input {
   inputs 0
   name VEC_IN
   xpos -268
   ypos -587
   number 1
  }
  Expression {
   temp_name0 s
   temp_expr0 "acos(g) / 3.1415"
   temp_name1 t
   temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
   temp_name2 ss
   temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
   temp_name3 tt
   temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
   expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
   expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
   expr2 0
   name Expression1
   selected true
   xpos -268
   ypos -513
  }
  Output {
   name Output1
   xpos -268
   ypos -387
  }
 end_group
set N1c70f080 [stack 0]
push $N1c70f080
 Constant {
  inputs 0
  channels rgb
  color {0.7260011435 1 0.03687983751 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant8
  xpos -2011
  ypos 3097
  cached true
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0.4032304883 0.3298953772 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant7
  xpos -1910
  ypos 3093
  cached true
 }
 Constant {
  inputs 0
  channels rgb
  color {0.2976078391 1 0.8990035057 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant6
  xpos -1819
  ypos 3093
  cached true
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0.05593001842 0.3156177998 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant4
  xpos -1730
  ypos 3095
  cached true
 }
 Constant {
  inputs 0
  channels rgb
  color {0.4597997069 0.3792209029 1 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant5
  xpos -1639
  ypos 3091
  cached true
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0.8285713196 0.3530935645 1}
  format "640 480 0 0 640 480 1 PC_Video"
  name Constant3
  xpos -2110
  ypos 3098
 }
 SphericalTransform {
  inputs 6
  input Cube
  out_ry {{frame*10 i}}
  fix true
  name SphericalTransform1
  xpos -1872
  ypos 3351
 }
set N2650e880 [stack 0]
 STMap {
  inputs 2
  channels rgb
  uv rgb
  name STMap2
  xpos -2183
  ypos 3705
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy11
  xpos -2183
  ypos 3791
 }
 Premult {
  name Premult1
  xpos -2183
  ypos 3851
 }
 Merge2 {
  inputs 2
  operation multiply
  name REFRACT
  xpos -2183
  ypos 3935
 }
 Dot {
  name Dot27
  xpos -2149
  ypos 4002
 }
push $N1c70e8a0
push $N26357700
 Dot {
  name Dot28
  xpos -2481
  ypos 3150
 }
 Dot {
  name Dot29
  xpos -2481
  ypos 3324
 }
push $N264e53e0
 Group {
  inputs 2
  name Reflect_Vector
  xpos -2273
  ypos 3320
  addUserKnob {20 User}
  addUserKnob {6 knob_normalize l "normalize output" +STARTLINE}
  knob_normalize true
  addUserKnob {6 knob_useAA l "anti alias result" +STARTLINE}
  knob_useAA true
 }
  Input {
   inputs 0
   name N_VEC
   xpos -352
   ypos 264
   number 1
  }
set N26604660 [stack 0]
push $N26604660
  Input {
   inputs 0
   name I_VEC
   xpos -518
   ypos 179
  }
set N266049d0 [stack 0]
  Group {
   inputs 2
   name Dot_product
   xpos -518
   ypos 264
   addUserKnob {20 User}
   addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
   addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
   addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
  }
   Input {
    inputs 0
    name VEC_A
    xpos -517
    ypos 184
   }
   Group {
    name Normalize_Vector_A
    xpos -517
    ypos 223
    disable {{"1 - parent.knob_normalizeA"}}
    addUserKnob {20 User}
    addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
    know_rescale 1
   }
    Input {
     inputs 0
     name Input1
     xpos -532
     ypos -411
    }
    Expression {
     temp_name0 length
     temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
     temp_name1 scale
     temp_expr1 parent.know_rescale
     expr0 "(Br / length) * scale"
     expr1 "(Bg / length) * scale"
     expr2 "(Bb / length) * scale"
     name NORMALIZE_RGB
     selected true
     xpos -532
     ypos -343
    }
    Output {
     name Output1
     xpos -532
     ypos -271
    }
   end_group
   Input {
    inputs 0
    name VEC_B
    xpos -345
    ypos 183
    number 1
   }
   Group {
    name Normalize_Vector
    xpos -345
    ypos 223
    disable {{"1 - parent.knob_normalizeB"}}
    addUserKnob {20 User}
    addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
    know_rescale 1
   }
    Input {
     inputs 0
     name Input1
     xpos -532
     ypos -411
    }
    Expression {
     temp_name0 length
     temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
     temp_name1 scale
     temp_expr1 parent.know_rescale
     expr0 "(Br / length) * scale"
     expr1 "(Bg / length) * scale"
     expr2 "(Bb / length) * scale"
     name NORMALIZE_RGB
     selected true
     xpos -532
     ypos -343
    }
    Output {
     name Output1
     xpos -532
     ypos -271
    }
   end_group
   MergeExpression {
    inputs 2
    temp_name0 result
    temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
    expr0 result
    expr1 result
    expr2 result
    expr3 knob_dotA>0.5?result:Ba
    name DOT_PRODUCT
    selected true
    xpos -441
    ypos 291
    addUserKnob {20 "" l User}
   }
   Output {
    name Output1
    xpos -441
    ypos 341
   }
  end_group
  Multiply {
   channels rgb
   value 2
   name TIMES_2
   xpos -518
   ypos 304
  }
  Dot {
   name Dot2
   xpos -484
   ypos 386
  }
set N26607310 [stack 0]
  Merge2 {
   inputs 2
   operation multiply
   Achannels rgb
   Bchannels rgb
   name Multiply
   xpos -352
   ypos 380
  }
set N26607680 [stack 0]
  Viewer {
   name Viewer1
   xpos -187
   ypos 370
  }
push $N26607310
  Dot {
   name Dot5
   xpos -484
   ypos 616
  }
push $N26607680
push $N266049d0
  Dot {
   name Dot3
   xpos -212
   ypos 185
  }
  Dot {
   name Dot4
   xpos -218
   ypos 498
  }
  Merge2 {
   inputs 2
   operation minus
   Achannels rgb
   Bchannels rgb
   name Merge3
   xpos -352
   ypos 492
  }
  Group {
   name NORMALIZE
   xpos -352
   ypos 528
   disable {{1-parent.knob_normalize}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    selected true
    xpos -532
    ypos -343
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  Matrix {
   channels rgb
   matrix {
       {1 2 1}
       {2 4 2}
       {1 2 1}
     }
   normalize true
   name AA
   selected true
   xpos -352
   ypos 563
   disable {{1-parent.knob_useAA}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -352
   ypos 602
  }
  Premult {
   name Premult2
   xpos -352
   ypos 649
  }
  Output {
   name Output1
   xpos -352
   ypos 692
  }
 end_group
push 0
 Group {
  inputs 2
  name Vector_to_st1
  xpos -2273
  ypos 3374
  addUserKnob {20 User}
  addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
  knob_flipST true
  addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
  knob_invertS true
  addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
  knob_invertT true
  addUserKnob {6 knob_premult l premult +STARTLINE}
  knob_premult true
 }
  Input {
   inputs 0
   name VEC_IN
   xpos -268
   ypos -587
   number 1
  }
  Expression {
   temp_name0 s
   temp_expr0 "acos(g) / 3.1415"
   temp_name1 t
   temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
   temp_name2 ss
   temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
   temp_name3 tt
   temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
   expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
   expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
   expr2 0
   name Expression1
   xpos -268
   ypos -513
  }
  Output {
   name Output1
   xpos -268
   ypos -387
  }
 end_group
 Dot {
  name Dot30
  xpos -2239
  ypos 3440
 }
push $N2650e880
 STMap {
  inputs 2
  channels rgba
  uv rgb
  name STMap3
  xpos -1872
  ypos 3436
 }
 Merge2 {
  inputs 2
  operation multiply
  name REFLECT
  xpos -1872
  ypos 3607
 }
 Dot {
  name Dot31
  xpos -1838
  ypos 3730
 }
push $N2623f250
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge3
  label "Reflections \n"
  note_font_size 20
  xpos -1547
  ypos 3711
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  label "Refractions \n"
  note_font_size 20
  xpos -1544
  ypos 3983
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  label "Light \n"
  note_font_size 20
  xpos -1544
  ypos 4340
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy12
  xpos -1544
  ypos 4535
 }
 Premult {
  name Premult3
  xpos -1544
  ypos 4644
 }
 Dot {
  name Dot32
  xpos -1510
  ypos 4733
 }
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos -1209
  ypos 4560
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge4
  xpos -1209
  ypos 4729
 }
push $N1c70ec90
push $N1c70d8e0
 Viewer {
  inputs 2
  viewerProcess None
  input_process false
  name Viewer2
  xpos -2039
  ypos 4235
  hide_input true
 }
push $N26102260
 Dot {
  name Dot16
  xpos -213
  ypos 494
 }
 Shuffle {
  in forward
  name Shuffle4
  xpos -238
  ypos 531
 }
 Grade {
  add 100
  name Grade2
  xpos -238
  ypos 555
 }
 Grade {
  multiply 0.01
  name Grade6
  xpos -238
  ypos 579
 }
 Expression {
  inputs 0
  channel0 rgba
  expr0 -r
  channel1 rgba
  expr1 -g
  name Expression2
  xpos -375
  ypos 389
 }
 Constant {
  inputs 0
  color 1
  name Constant13
  xpos -697
  ypos 787
  postage_stamp false
 }
 Viewer {
  input_process false
  name Viewer3
  xpos -674
  ypos 859
  hide_input true
 }
push $N260282b0
 Dot {
  name Dot33
  xpos -513
  ypos 182
 }
set N267e5170 [stack 0]
push $N267e5170
 Grade {
  multiply 0
  add {0 0 1 0}
  black_clamp false
  name Grade9
  xpos -683
  ypos 463
 }
 Group {
  inputs 2
  name Refract_Vector2
  xpos -613
  ypos 546
  addUserKnob {20 User}
  addUserKnob {7 knob_refT l "refractive index from" R 0 10}
  knob_refT 1
  addUserKnob {7 knob_refF l "refractive index from" R 0 10}
  knob_refF 1
 }
  Input {
   inputs 0
   name I_VEC
   xpos -518
   ypos 334
  }
  Dot {
   name Dot1
   xpos -484
   ypos 489
  }
  Input {
   inputs 0
   name N_VEC
   xpos -352
   ypos 334
   number 1
  }
  MergeExpression {
   inputs 2
   temp_name0 IdotN
   temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
   temp_name1 bb
   temp_expr1 "(IdotN >=0)? (parent.knob_refT / parent.knob_refF) : (parent.knob_refF / parent.knob_refT)"
   temp_name2 D2
   temp_expr2 "1 - bb * bb *(1 - IdotN * IdotN)"
   temp_name3 aa
   temp_expr3 "(IdotN > 0 ) ? bb * IdotN - sqrt(D2) : bb * IdotN + sqrt(D2)"
   expr0 "(D2 > 0 ) ? Ar * bb - Br * aa : 0"
   expr1 "(D2 > 0 ) ? Ag * bb - Bg * aa : 0"
   expr2 "(D2 > 0 ) ? Ab * bb - Bb * aa : 0"
   expr3 "(D2 > 0 ) ? 1: 0"
   name refract_expression
   label "\n\n\n"
   selected true
   xpos -352
   ypos 483
  }
  Output {
   name Output1
   xpos -352
   ypos 692
  }
 end_group
push $N26027f40
 Dot {
  name Dot12
  xpos 356
  ypos -510
 }
 Dot {
  name Dot13
  xpos 356
  ypos 719
 }
push $N26101810
 Dot {
  name Dot1
  xpos 234
  ypos 631
 }
push $N26241aa0
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy5
  xpos -64
  ypos 616
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy7
  xpos -62
  ypos 710
 }
 Grade {
  channels depth
  blackpoint {{parent.blackpoint}}
  whitepoint {{parent.whitepoint}}
  add {{parent.add_1}}
  black_clamp false
  name Grade1
  xpos -62
  ypos 834
 }
 Clamp {
  channels depth
  name Clamp1
  xpos -62
  ypos 878
 }
 Blur {
  channels depth
  size {{parent.blur}}
  name Blur1
  xpos -62
  ypos 927
 }
 Grade {
  add {{parent.color}}
  maskChannelInput depth.Z
  name Grade3
  xpos -62
  ypos 977
 }
 Grade {
  maskChannelInput rgba.alpha
  name Grade4
  xpos -62
  ypos 1029
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos -62
  ypos 1136
 }
 Premult {
  name Premult2
  xpos -62
  ypos 1223
  disable {{!parent.premultiply}}
 }
set N267e8f50 [stack 0]
push $N267e8f50
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  label alpha
  xpos 46
  ypos 1253
 }
push $N267e5170
 Expression {
  expr0 -(r+1)/2+1
  expr1 -(g+1)/2+1
  name Expression3
  xpos -493
  ypos 452
 }
set N267e9630 [stack 0]
 Grade {
  black_clamp false
  name Grade10
  xpos -461
  ypos 532
 }
 ColorLookup {
  lut {master {curve L x-0.1281703711 0 x0.5 0.5 x0.9949640036 1}
    red {}
    green {}
    blue {}
    alpha {}}
  name ColorLookup1
  xpos -431
  ypos 596
 }
push $N26101b80
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos 144
  ypos 1201
 }
set N267ea080 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge5
  xpos 144
  ypos 1282
 }
set N267ea3f0 [stack 0]
 Merge2 {
  inputs 2
  operation plus
  mix 0.726
  name Merge6
  xpos 144
  ypos 1363
 }
push $N267e9630
push 0
 Group {
  inputs 2
  name Vector_to_st3
  xpos -370
  ypos 503
  addUserKnob {20 User}
  addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
  knob_flipST true
  addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
  knob_invertS true
  addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
  knob_invertT true
  addUserKnob {6 knob_premult l premult +STARTLINE}
 }
  Input {
   inputs 0
   name VEC_IN
   xpos -268
   ypos -587
   number 1
  }
  Expression {
   temp_name0 s
   temp_expr0 "acos(g) / 3.1415"
   temp_name1 t
   temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
   temp_name2 ss
   temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
   temp_name3 tt
   temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
   expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
   expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
   expr2 0
   name Expression1
   selected true
   xpos -268
   ypos -513
  }
  Output {
   name Output1
   xpos -268
   ypos -387
  }
 end_group
push $N267ea3f0
 Output {
  name Output1
  xpos -107
  ypos 1396
 }
 Group {
  inputs 0
  name Mask_3D
  tile_color 0x5d00ff
  label "\n\n"
  note_font "Verdana Bold Bold Bold Bold"
  note_font_size 14
  note_font_color 0xffff00ff
  xpos -400
  ypos 693
  mapsize {0.15 0.15}
  addUserKnob {20 User}
  addUserKnob {18 pos l Position t "Select the colour that corresponds to the position you want."}
  pos {1 1 1}
  addUserKnob {13 rad l Radius}
  rad {1 1 1}
  addUserKnob {7 uniform_scale l "Uniform scale" R 1 10}
  uniform_scale 1
  addUserKnob {7 Gain R 0 3}
  Gain 1
  addUserKnob {7 fall l "Falloff Exponent" R 1 10}
  fall 5
  addUserKnob {7 gain l Hardness}
  gain 0.5
  addUserKnob {6 InvertMask l "Invert Mask" +STARTLINE}
 }
  Input {
   inputs 0
   name pPass
   xpos 80
   ypos 442
  }
  Expression {
   temp_name0 distR
   temp_expr0 (Br-parent.pos.r)/rad.x/uniform_scale
   temp_name1 distG
   temp_expr1 (Bg-parent.pos.g)/rad.y/uniform_scale
   temp_name2 distB
   temp_expr2 (Bb-parent.pos.b)/rad.z/uniform_scale
   temp_name3 len
   temp_expr3 sqrt((distR*distR)+(distG*distG)+(distB*distB))
   channel0 rgba
   expr0 pow(1-len,fall)
   channel1 none
   channel2 none
   channel3 none
   maskChannelInput -rgba.alpha
   name __POSITION_KEY__
   xpos 80
   ypos 512
  }
  Clamp {
   channels rgba
   name Clamp1
   xpos 80
   ypos 538
  }
set N269e3510 [stack 0]
  Viewer {
   viewerProcess None
   name Viewer1
   xpos 840
   ypos -10
   hide_input true
  }
  Input {
   inputs 0
   name mask
   xpos -29
   ypos 630
   number 1
  }
  Invert {
   name Invert1
   xpos -29
   ypos 674
   disable {{!InvertMask i}}
  }
  Dot {
   name Dot2
   xpos 5
   ypos 742
  }
push $N269e3510
  Group {
   name Perlin_gain
   help "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."
   tile_color 0xcc9d6d00
   selected true
   xpos 80
   ypos 572
   addUserKnob {20 "" l User}
   addUserKnob {7 realGain l "Perlin Gain function" t "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."}
   realGain {{parent.gain i x23 0.69}}
  }
   Input {
    inputs 0
    name Input1
    selected true
    xpos 130
    ypos -89
   }
   Expression {
    temp_name0 gain
    temp_expr0 parent.realGain
    temp_name1 lum
    temp_expr1 "0.2125*Br + 0.7154*Bg + 0.0721*Bb"
    temp_name2 val
    temp_expr2 .5*((lum<.5)?((1-gain)>0?pow(2*lum,log(1-gain)/log(0.5)):0):2-((1-gain)>0?pow(2-2*lum,log(1-gain)/log(0.5)):0))
    expr0 r>1?r:r*(val/(lum+0.00001))
    expr1 g>1?g:g*(val/(lum+0.00001))
    expr2 b>1?b:b*(val/(lum+0.00001))
    name KPGain
    tile_color 0xd47f3b00
    label "TRUE GAIN\nFUNCTION"
    xpos 130
    ypos -24
    addUserKnob {20 "" l User}
   }
   Output {
    name Output1
    xpos 130
    ypos 98
   }
  end_group
  Grade {
   channels rgba
   multiply {{Gain i}}
   black_clamp false
   name Grade1
   xpos 80
   ypos 598
  }
  Clamp {
   channels rgba
   name Clamp2
   xpos 80
   ypos 624
  }
  Merge2 {
   inputs 2
   operation mask
   name Merge2
   xpos 80
   ypos 738
   disable {{"!\[exists parent.input1]" i}}
  }
  Output {
   name Output1
   xpos 80
   ypos 832
  }
 end_group
 Group {
  inputs 0
  name Perlin_gain
  help "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."
  tile_color 0xcc9d6d00
  xpos -640
  ypos 592
  addUserKnob {20 "" l User}
  addUserKnob {7 realGain l "Perlin Gain function" t "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."}
  realGain 0.734
 }
  Input {
   inputs 0
   name Input1
   selected true
   xpos 130
   ypos -89
  }
  Expression {
   temp_name0 gain
   temp_expr0 parent.realGain
   temp_name1 lum
   temp_expr1 "0.2125*Br + 0.7154*Bg + 0.0721*Bb"
   temp_name2 val
   temp_expr2 .5*((lum<.5)?((1-gain)>0?pow(2*lum,log(1-gain)/log(0.5)):0):2-((1-gain)>0?pow(2-2*lum,log(1-gain)/log(0.5)):0))
   expr0 r>1?r:r*(val/(lum+0.00001))
   expr1 g>1?g:g*(val/(lum+0.00001))
   expr2 b>1?b:b*(val/(lum+0.00001))
   name KPGain
   tile_color 0xd47f3b00
   label "TRUE GAIN\nFUNCTION"
   xpos 130
   ypos -24
   addUserKnob {20 "" l User}
  }
  Output {
   name Output1
   xpos 130
   ypos 98
  }
 end_group
push $N267ea080
 Viewer {
  freezeGuiWhenPlayBack true
  input_process false
  name Viewer1
  xpos 180
  ypos -9
  hide_input true
 }
end_group
push $N1c44e200
Merge2 {
 inputs 2
 name Merge2
 xpos 106
 ypos 1162
}
Viewer {
 frame 100
 frame_range 1-100
 frame_range_lock true
 input_process false
 name Viewer2
 xpos -248
 ypos 304
 hide_input true
}
Expression {
 inputs 0
 name Expression1
 xpos -1219
 ypos 690
}
Noise {
 inputs 0
 center {1024 778}
 name Noise2
 xpos -1285
 ypos 766
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard2
 xpos -1169
 ypos 761
 postage_stamp false
}
MergeExpression {
 inputs 2
 name MergeExpression1
 xpos -1213
 ypos 841
}
Noise {
 inputs 0
 center {1024 778}
 name Noise3
 xpos -1705
 ypos 944
}
Roto {
 inputs 0
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44800000 x44428000}
    {a}
    {curvegroup Ellipse3 576 bezier
     {{cc
       {f 8192}
       {p
        {xc27abcc0}
        {x444da000 x43f30000}
        {x427abcc0}
        {0 xc27abcc0}
        {x446a0000 x4415e000}
        {0 x427abcc0}
        {x427abcc0}
        {x444da000 x44324000}
        {xc27abcc0}
        {0 x427abcc0}
        {x44314000 x4415e000}
        {0 xc27abcc0}}}
      {cc
       {f 8192}
       {p
        {xc27abcc0}
        {}
        {x427abcc0}
        {0 xc27abcc0}
        {}
        {0 x427abcc0}
        {x427abcc0}
        {}
        {xc27abcc0}
        {0 x427abcc0}
        {}
        {0 xc27abcc0}}}}
     {t x444da000 x4415e000}
     {a str 1 spx x44800000 spy x44428000 sb 1 tt x40e00000}}
    {curvegroup Ellipse2 512 bezier
     {{cc
       {f 8192}
       {p
        {xc2776c70}
        {x442e0000 x43270000}
        {x42776c70}
        {0 xc2776c70}
        {x444a0000 x438b8000}
        {0 x42776c70}
        {x42776c70}
        {x442e0000 x43c38000}
        {xc2776c70}
        {0 x42776c70}
        {x44120000 x438b8000}
        {0 xc2776c70}}}
      {cc
       {f 8192}
       {p
        {xc2776c70}
        {}
        {x42776c70}
        {0 xc2776c70}
        {}
        {0 x42776c70}
        {x42776c70}
        {}
        {xc2776c70}
        {0 x42776c70}
        {}
        {0 xc2776c70}}}}
     {t x442e0000 x438b8000}
     {a str 1 spx x44800000 spy x44428000 sb 1 tt x40e00000}}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {p
        {xc25e04b8}
        {x43974000 x4421c000}
        {x425e04b8}
        {0 xc25e04c0}
        {x43c98000 x443ae000}
        {0 x425e04c0}
        {x425e04b8}
        {x43974000 x44540000}
        {xc25e04b8}
        {0 x425e04c0}
        {x434a0000 x443ae000}
        {0 xc25e04c0}}}
      {cc
       {f 8192}
       {p
        {xc25e04b8}
        {}
        {x425e04b8}
        {0 xc25e04c0}
        {}
        {0 x425e04c0}
        {x425e04b8}
        {}
        {xc25e04b8}
        {0 x425e04c0}
        {}
        {0 xc25e04c0}}}}
     {t x43974000 x443ae000}
     {a str 1 spx x44800000 spy x44428000 sb 1 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 778}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 motionblur_shutter_offset_type centred
 source_black_outside true
 createNewTrack {{-1} "-1\t(none)\t-1" "1000\tNew Track Layer\t1000"}
 name Roto2
 xpos -1686
 ypos 959
 hide_input true
}
Read {
 inputs 0
 file F:/Downloads/Dragon/Dragon/dragon.obj
 cacheLocal always
 origset true
 on_error checkerboard
 auto_alpha true
 name Read4
 xpos -1205
 ypos 1139
 postage_stamp false
}
Constant {
 inputs 0
 color 1
 name Constant2
 xpos -1945
 ypos 688
 postage_stamp false
}
set N27b507b0 [stack 0]
ReadGeo2 {
 file F:/Downloads/Dragon/Dragon/dragon.obj
 name ReadGeo1
 xpos -2303
 ypos 713
}
TransformGeo {
 translate {0 -0.7399999499 3.234642776e-008}
 rotate {-90.0000025 0 -147.7960319}
 uniform_scale 0.2
 name TransformGeo1
 xpos -2303
 ypos 784
}
push $N27b507b0
Sphere {
 rows 20
 columns 20
 translate {-1.600000024 -2.049999952 0}
 name Sphere4
 xpos -2046
 ypos 771
}
set N27b50440 [stack 0]
DisplaceGeo {
 name DisplaceGeo2
 xpos -1868
 ypos 878
}
push $N27b50440
push $N27b507b0
Sphere {
 rows 100
 columns 100
 translate {1.950000048 1.870000005 0}
 name Sphere2
 xpos -1945
 ypos 768
}
push $N27b507b0
Sphere {
 rows 100
 columns 100
 name Sphere3
 xpos -1822
 ypos 766
}
MergeGeo {
 inputs 3
 name MergeGeo1
 xpos -1754
 ypos 825
}
Camera2 {
 inputs 0
 translate {-6.199998856 4.359999657 -13.02000046}
 rotate {-12.65400028 -150.1829987 0}
 name Camera3
 xpos -4595
 ypos 2677
}
set N6f269cd0 [stack 0]
push $N6f269cd0
Constant {
 inputs 0
 color 1
 format "512 512 0 0 512 512 1 square_512"
 name Constant3
 xpos -4451
 ypos 2414
}
set N28ac60d0 [stack 0]
Sphere {
 translate {-0.6299999952 2.167999983 -1.419999957}
 name Sphere5
 xpos -4341
 ypos 2541
}
push $N28ac60d0
Sphere {
 translate {3.234999895 1.559999943 -0.09000000358}
 name Sphere6
 xpos -4451
 ypos 2541
}
push $N28ac60d0
Sphere {
 translate {-0.9649999738 -0.4050000012 0.5}
 name Sphere7
 xpos -4561
 ypos 2541
}
Scene {
 inputs 4
 name Scene1
 xpos -4441
 ypos 2630
}
Constant {
 inputs 0
 channels rgb
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant12
 xpos -3212
 ypos 2757
}
set N28ac7200 [stack 0]
ScanlineRender {
 inputs 3
 samples 10
 motion_vectors_type velocity
 output_shader_vectors true
 N_channel rgb
 name ScanlineRender3
 xpos -4451
 ypos 2780
}
Dot {
 name Dot13
 xpos -4417
 ypos 2897
}
set N28ac78e0 [stack 0]
Dot {
 name Dot6
 xpos -5056
 ypos 2896
}
Dot {
 name Dot7
 xpos -5056
 ypos 4404
}
push $N28ac78e0
Unpremult {
 name Unpremult2
 xpos -4451
 ypos 2949
}
Dot {
 name Dot11
 xpos -4417
 ypos 3010
}
set Ncefbe2a0 [stack 0]
Dot {
 name Dot12
 xpos -4895
 ypos 3009
}
Dot {
 name Dot4
 xpos -4895
 ypos 3981
}
Constant {
 inputs 0
 channels rgb
 color {0 1 0.2 0}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant10
 xpos -4785
 ypos 3851
}
Group {
 inputs 2
 name Dot_product1
 xpos -4785
 ypos 3977
 addUserKnob {20 User}
 addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
 knob_normalizeA true
 addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
 knob_normalizeB true
 addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
}
 Input {
  inputs 0
  name VEC_A
  xpos -517
  ypos 184
 }
 Group {
  name Normalize_Vector_A
  xpos -517
  ypos 223
  disable {{"1 - parent.knob_normalizeA" i}}
  addUserKnob {20 User}
  addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
  know_rescale 1
 }
  Input {
   inputs 0
   name Input1
   xpos -532
   ypos -411
  }
  Expression {
   temp_name0 length
   temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
   temp_name1 scale
   temp_expr1 parent.know_rescale
   expr0 "(Br / length) * scale"
   expr1 "(Bg / length) * scale"
   expr2 "(Bb / length) * scale"
   name NORMALIZE_RGB
   xpos -532
   ypos -357
  }
  Output {
   name Output1
   xpos -532
   ypos -271
  }
 end_group
 Input {
  inputs 0
  name VEC_B
  xpos -345
  ypos 183
  number 1
 }
 Group {
  name Normalize_Vector
  xpos -345
  ypos 225
  disable {{"1 - parent.knob_normalizeB"}}
  addUserKnob {20 User}
  addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
  know_rescale 1
 }
  Input {
   inputs 0
   name Input1
   xpos -532
   ypos -411
  }
  Expression {
   temp_name0 length
   temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
   temp_name1 scale
   temp_expr1 parent.know_rescale
   expr0 "(Br / length) * scale"
   expr1 "(Bg / length) * scale"
   expr2 "(Bb / length) * scale"
   name NORMALIZE_RGB
   selected true
   xpos -532
   ypos -343
  }
  Output {
   name Output1
   xpos -532
   ypos -271
  }
 end_group
 MergeExpression {
  inputs 2
  temp_name0 result
  temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
  expr0 result
  expr1 result
  expr2 result
  expr3 knob_dotA>0.5?result:Ba
  name DOT_PRODUCT
  xpos -441
  ypos 294
  addUserKnob {20 "" l User}
 }
set Ncefc0be0 [stack 0]
 Output {
  name Output1
  xpos -441
  ypos 341
 }
push $Ncefc0be0
 Viewer {
  viewerProcess None
  input_process false
  name Viewer1
  selected true
  xpos -40
  ypos -10
  hide_input true
 }
end_group
Grade {
 multiply {0.9819999933 1 0.985075295 1}
 name Grade5
 xpos -4785
 ypos 4003
}
Dot {
 name Dot8
 xpos -4751
 ypos 4089
}
Constant {
 inputs 0
 channels rgb
 color {1 1 1 1}
 name Constant11
 xpos -4464
 ypos 3983
}
Grade {
 multiply 0.225
 name Grade7
 xpos -4464
 ypos 4059
}
Merge2 {
 inputs 2
 operation plus
 name LIGHT
 xpos -4464
 ypos 4085
}
Dot {
 name Dot9
 xpos -4430
 ypos 4218
}
Constant {
 inputs 0
 channels rgb
 color {0 0 1 0}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant9
 xpos -4070
 ypos 3262
}
push $Ncefbe2a0
Dot {
 name Dot16
 xpos -4289
 ypos 3009
}
set N28f26ec0 [stack 0]
Group {
 name RotationMatrix
 help "Use this for rotating xyz vector data such as P and N."
 xpos -4323
 ypos 3364
 addUserKnob {20 RotationMatrix}
 addUserKnob {41 in l "vector in" T Shuffle1.in}
 addUserKnob {41 out l output T ShuffleCopy1.out}
 addUserKnob {13 rot l rotation t "Link to say axis' or camera's rotate"}
 rot {{parent.Camera3.rotate.x} {parent.Camera3.rotate.y} {parent.Camera3.rotate.z}}
 addUserKnob {4 zchannel l "z channel" t "reverse z is used for example if translating world normals to\ncam normals based on a linked camera rotation" M {reverse "don't reverse"}}
 zchannel "don't reverse"
}
 Input {
  inputs 0
  name Input
  xpos -304
  ypos -79
 }
set N28f27230 [stack 0]
 Shuffle {
  in rgb
  out rgb
  name Shuffle1
  xpos -189
  ypos -22
 }
 ColorMatrix {
  matrix {
      {{cos(radians(yrot))} 0 {-sin(radians(yrot))}}
      {0 1 0}
      {{sin(radians(yrot))} 0 {cos(radians(yrot))}}
    }
  name ColorMatrix14
  label yrot
  xpos -189
  ypos 42
  addUserKnob {20 "" l User}
  addUserKnob {7 yrot l "y rotation" R -90 90}
  yrot {{parent.rot.y}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(xrot)) i} {sin(radians(xrot)) i}}
      {0 {-sin(radians(xrot)) i} {cos(radians(xrot)) i}}
    }
  name ColorMatrix15
  label "xrot\n"
  xpos -189
  ypos 80
  addUserKnob {20 "" l User}
  addUserKnob {7 xrot l "x rotation" R -90 90}
  xrot {{parent.rot.x i}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(zrot)) i} {sin(radians(zrot)) i} 0}
      {{-sin(radians(zrot)) i} {cos(radians(zrot)) i} 0}
      {0 0 1}
    }
  name ColorMatrix13
  label "zrot\n"
  selected true
  xpos -189
  ypos 118
  addUserKnob {20 "" l User}
  addUserKnob {7 zrot l "z rotation" R -90 90}
  zrot {{parent.rot.z i}}
 }
set N28f27ff0 [stack 0]
 Multiply {
  channels {-rgba.red -rgba.green rgba.blue}
  value -1
  name Multiply4
  label "reverse Z"
  xpos -189
  ypos 201
  disable {{parent.zchannel x1 0}}
 }
push $N28f27230
 ShuffleCopy {
  inputs 2
  in rgb
  red red
  green green
  blue blue
  out rgb
  name ShuffleCopy1
  xpos -304
  ypos 292
 }
 Output {
  name Output1
  xpos -304
  ypos 399
 }
push $N28f27ff0
 Viewer {
  viewerProcess None
  input_process false
  name Viewer1
  xpos 70
  ypos -10
  hide_input true
 }
end_group
set N6f393680 [stack 0]
Group {
 inputs 2
 name Dot_product
 xpos -4070
 ypos 3363
 addUserKnob {20 User}
 addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
 knob_normalizeA true
 addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
 knob_normalizeB true
 addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
}
 Input {
  inputs 0
  name VEC_A
  xpos -516
  ypos 182
 }
 Group {
  name Normalize_Vector_A
  xpos -516
  ypos 219
  disable {{"1 - parent.knob_normalizeA" i}}
  addUserKnob {20 User}
  addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
  know_rescale 1
 }
  Input {
   inputs 0
   name Input1
   xpos -532
   ypos -411
  }
  Expression {
   temp_name0 length
   temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
   temp_name1 scale
   temp_expr1 parent.know_rescale
   expr0 "(Br / length) * scale"
   expr1 "(Bg / length) * scale"
   expr2 "(Bb / length) * scale"
   name NORMALIZE_RGB
   xpos -532
   ypos -357
  }
  Output {
   name Output1
   xpos -532
   ypos -271
  }
 end_group
 Input {
  inputs 0
  name VEC_B
  xpos -345
  ypos 182
  number 1
 }
 Group {
  name Normalize_Vector
  xpos -345
  ypos 222
  disable {{"1 - parent.knob_normalizeB"}}
  addUserKnob {20 User}
  addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
  know_rescale 1
 }
  Input {
   inputs 0
   name Input1
   xpos -532
   ypos -411
  }
  Expression {
   temp_name0 length
   temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
   temp_name1 scale
   temp_expr1 parent.know_rescale
   expr0 "(Br / length) * scale"
   expr1 "(Bg / length) * scale"
   expr2 "(Bb / length) * scale"
   name NORMALIZE_RGB
   selected true
   xpos -532
   ypos -343
  }
  Output {
   name Output1
   xpos -532
   ypos -271
  }
 end_group
 MergeExpression {
  inputs 2
  temp_name0 result
  temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
  expr0 result
  expr1 result
  expr2 result
  expr3 knob_dotA>0.5?result:Ba
  name DOT_PRODUCT
  xpos -449
  ypos 293
  addUserKnob {20 "" l User}
 }
set N294f02f0 [stack 0]
 Output {
  name Output1
  xpos -441
  ypos 341
 }
push $N294f02f0
 Viewer {
  viewerProcess None
  input_process false
  name Viewer1
  selected true
  xpos -40
  ypos -10
  hide_input true
 }
end_group
Group {
 name Frenel
 xpos -4070
 ypos 3466
 addUserKnob {20 User}
 addUserKnob {7 ior l IOR R 0 5}
 ior {{parent.Refract_Vector1.knob_refF i}}
}
 Input {
  inputs 0
  name Input1
  xpos 460
  ypos -318
 }
 Expression {
  temp_name0 IOR
  temp_expr0 "1.0 / parent.ior"
  temp_name1 _FF
  temp_expr1 "( IOR - 1.0 ) * ( IOR - 1.0 )"
  temp_name2 _F
  temp_expr2 "_FF + (  4 * IOR * pow( 1 - r, 5) )"
  temp_name3 F
  temp_expr3 "_F / ( ( IOR + 1 ) * ( IOR + 1 ) )"
  expr0 F
  expr1 F
  expr2 F
  name Expression1
  xpos 460
  ypos -256
 }
 Output {
  name Output1
  xpos 460
  ypos -178
 }
end_group
set N6f394640 [stack 0]
Invert {
 name Invert3
 xpos -4070
 ypos 3691
}
Dot {
 name Dot10
 xpos -4036
 ypos 3798
}
push $Ncefbe2a0
Constant {
 inputs 0
 channels rgb
 color {0 0 -1 0}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant4
 label "Blue = -1\n"
 note_font "Verdana Bold Bold"
 note_font_size 30
 xpos -3938
 ypos 3029
}
set N294f1b00 [stack 0]
Group {
 inputs 2
 name Refract_Vector1
 xpos -4545
 ypos 3094
 addUserKnob {20 User}
 addUserKnob {7 knob_refT l "refractive index from" R 0 10}
 knob_refT 1
 addUserKnob {7 knob_refF l "refractive index from" R 0 10}
 knob_refF 2
}
 Input {
  inputs 0
  name I_VEC
  xpos -518
  ypos 334
 }
 Dot {
  name Dot1
  xpos -484
  ypos 489
 }
 Input {
  inputs 0
  name N_VEC
  xpos -352
  ypos 334
  number 1
 }
 MergeExpression {
  inputs 2
  temp_name0 IdotN
  temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
  temp_name1 bb
  temp_expr1 "(IdotN >=0)? (parent.knob_refT / parent.knob_refF) : (parent.knob_refF / parent.knob_refT)"
  temp_name2 D2
  temp_expr2 "1 - bb * bb *(1 - IdotN * IdotN)"
  temp_name3 aa
  temp_expr3 "(IdotN > 0 ) ? bb * IdotN - sqrt(D2) : bb * IdotN + sqrt(D2)"
  expr0 "(D2 > 0 ) ? Ar * bb - Br * aa : 0"
  expr1 "(D2 > 0 ) ? Ag * bb - Bg * aa : 0"
  expr2 "(D2 > 0 ) ? Ab * bb - Bb * aa : 0"
  expr3 "(D2 > 0 ) ? 1: 0"
  name refract_expression
  label "\n\n\n"
  selected true
  xpos -352
  ypos 483
 }
 Output {
  name Output1
  xpos -352
  ypos 692
 }
end_group
set N6f394a30 [stack 0]
push 0
Group {
 inputs 2
 name Vector_to_st2
 xpos -4458
 ypos 3491
 addUserKnob {20 User}
 addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
 knob_flipST true
 addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
 knob_invertS true
 addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
 knob_invertT true
 addUserKnob {6 knob_premult l premult +STARTLINE}
 knob_premult true
}
 Input {
  inputs 0
  name VEC_IN
  xpos -268
  ypos -587
  number 1
 }
 Expression {
  temp_name0 s
  temp_expr0 "acos(g) / 3.1415"
  temp_name1 t
  temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
  temp_name2 ss
  temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
  temp_name3 tt
  temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
  expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
  expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
  expr2 0
  name Expression1
  selected true
  xpos -268
  ypos -513
 }
 Output {
  name Output1
  xpos -268
  ypos -387
 }
end_group
set N6f394e20 [stack 0]
push $N6f394e20
Constant {
 inputs 0
 channels rgb
 color {0.7260011435 1 0.03687983751 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant8
 xpos -3676
 ypos 2956
 cached true
}
Constant {
 inputs 0
 channels rgb
 color {1 0.4032304883 0.3298953772 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant7
 xpos -3575
 ypos 2952
 cached true
}
Constant {
 inputs 0
 channels rgb
 color {0.2976078391 1 0.8990035057 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant6
 xpos -3484
 ypos 2952
 cached true
}
Constant {
 inputs 0
 channels rgb
 color {1 0.05593001842 0.3156177998 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant5
 xpos -3395
 ypos 2954
 cached true
}
Constant {
 inputs 0
 channels rgb
 color {0.4597997069 0.3792209029 1 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant13
 xpos -3304
 ypos 2950
 cached true
}
Constant {
 inputs 0
 channels rgb
 color {1 0.8285713196 0.3530935645 1}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant14
 xpos -3775
 ypos 2957
}
SphericalTransform {
 inputs 6
 input Cube
 out_ry {{frame*10 i}}
 fix true
 name SphericalTransform1
 xpos -3537
 ypos 3210
}
set N7f0d47b0 [stack 0]
STMap {
 inputs 2
 channels rgb
 uv rgb
 name STMap2
 xpos -3848
 ypos 3564
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy4
 xpos -3848
 ypos 3650
}
Premult {
 name Premult4
 xpos -3848
 ypos 3710
}
Merge2 {
 inputs 2
 operation multiply
 name REFRACT
 xpos -3848
 ypos 3794
}
Dot {
 name Dot14
 xpos -3814
 ypos 3861
}
push $N6f394640
push $N28f26ec0
Dot {
 name Dot15
 xpos -4146
 ypos 3009
}
Dot {
 name Dot17
 xpos -4146
 ypos 3183
}
push $N294f1b00
Group {
 inputs 2
 name Reflect_Vector
 xpos -3938
 ypos 3179
 addUserKnob {20 User}
 addUserKnob {6 knob_normalize l "normalize output" +STARTLINE}
 knob_normalize true
 addUserKnob {6 knob_useAA l "anti alias result" +STARTLINE}
 knob_useAA true
}
 Input {
  inputs 0
  name N_VEC
  xpos -352
  ypos 264
  number 1
 }
set N7f0d6330 [stack 0]
push $N7f0d6330
 Input {
  inputs 0
  name I_VEC
  xpos -518
  ypos 179
 }
set N7f0d66a0 [stack 0]
 Group {
  inputs 2
  name Dot_product
  xpos -518
  ypos 264
  addUserKnob {20 User}
  addUserKnob {6 knob_normalizeA l "normalize A Vector" +STARTLINE}
  addUserKnob {6 knob_normalizeB l "normalize B Vector" +STARTLINE}
  addUserKnob {6 knob_dotA l "dot alpha as well" +STARTLINE}
 }
  Input {
   inputs 0
   name VEC_A
   xpos -517
   ypos 184
  }
  Group {
   name Normalize_Vector_A
   xpos -517
   ypos 223
   disable {{"1 - parent.knob_normalizeA"}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    selected true
    xpos -532
    ypos -343
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  Input {
   inputs 0
   name VEC_B
   xpos -345
   ypos 183
   number 1
  }
  Group {
   name Normalize_Vector
   xpos -345
   ypos 223
   disable {{"1 - parent.knob_normalizeB"}}
   addUserKnob {20 User}
   addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
   know_rescale 1
  }
   Input {
    inputs 0
    name Input1
    xpos -532
    ypos -411
   }
   Expression {
    temp_name0 length
    temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
    temp_name1 scale
    temp_expr1 parent.know_rescale
    expr0 "(Br / length) * scale"
    expr1 "(Bg / length) * scale"
    expr2 "(Bb / length) * scale"
    name NORMALIZE_RGB
    selected true
    xpos -532
    ypos -343
   }
   Output {
    name Output1
    xpos -532
    ypos -271
   }
  end_group
  MergeExpression {
   inputs 2
   temp_name0 result
   temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
   expr0 result
   expr1 result
   expr2 result
   expr3 knob_dotA>0.5?result:Ba
   name DOT_PRODUCT
   selected true
   xpos -441
   ypos 291
   addUserKnob {20 "" l User}
  }
  Output {
   name Output1
   xpos -441
   ypos 341
  }
 end_group
 Multiply {
  channels rgb
  value 2
  name TIMES_2
  xpos -518
  ypos 304
 }
 Dot {
  name Dot2
  xpos -484
  ypos 386
 }
set N7f022680 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  Achannels rgb
  Bchannels rgb
  name Multiply
  xpos -352
  ypos 380
 }
set N7f0229f0 [stack 0]
 Viewer {
  name Viewer1
  xpos -187
  ypos 370
 }
push $N7f022680
 Dot {
  name Dot5
  xpos -484
  ypos 616
 }
push $N7f0229f0
push $N7f0d66a0
 Dot {
  name Dot3
  xpos -212
  ypos 185
 }
 Dot {
  name Dot4
  xpos -218
  ypos 498
 }
 Merge2 {
  inputs 2
  operation minus
  Achannels rgb
  Bchannels rgb
  name Merge3
  xpos -352
  ypos 492
 }
 Group {
  name NORMALIZE
  xpos -352
  ypos 528
  disable {{1-parent.knob_normalize}}
  addUserKnob {20 User}
  addUserKnob {7 know_rescale l scaling t "scales the output to that value" R 0 100}
  know_rescale 1
 }
  Input {
   inputs 0
   name Input1
   xpos -532
   ypos -411
  }
  Expression {
   temp_name0 length
   temp_expr0 sqrt(Br*Br+Bg*Bg+Bb*Bb)+0.00001
   temp_name1 scale
   temp_expr1 parent.know_rescale
   expr0 "(Br / length) * scale"
   expr1 "(Bg / length) * scale"
   expr2 "(Bb / length) * scale"
   name NORMALIZE_RGB
   selected true
   xpos -532
   ypos -343
  }
  Output {
   name Output1
   xpos -532
   ypos -271
  }
 end_group
 Matrix {
  channels rgb
  matrix {
      {1 2 1}
      {2 4 2}
      {1 2 1}
    }
  normalize true
  name AA
  selected true
  xpos -352
  ypos 563
  disable {{1-parent.knob_useAA}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -352
  ypos 602
 }
 Premult {
  name Premult2
  xpos -352
  ypos 649
 }
 Output {
  name Output1
  xpos -352
  ypos 692
 }
end_group
push 0
Group {
 inputs 2
 name Vector_to_st1
 xpos -3938
 ypos 3233
 addUserKnob {20 User}
 addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
 knob_flipST true
 addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
 knob_invertS true
 addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
 knob_invertT true
 addUserKnob {6 knob_premult l premult +STARTLINE}
 knob_premult true
}
 Input {
  inputs 0
  name VEC_IN
  xpos -268
  ypos -587
  number 1
 }
 Expression {
  temp_name0 s
  temp_expr0 "acos(g) / 3.1415"
  temp_name1 t
  temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
  temp_name2 ss
  temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
  temp_name3 tt
  temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
  expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
  expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
  expr2 0
  name Expression1
  xpos -268
  ypos -513
 }
 Output {
  name Output1
  xpos -268
  ypos -387
 }
end_group
Dot {
 name Dot18
 xpos -3904
 ypos 3299
}
push $N7f0d47b0
STMap {
 inputs 2
 channels rgba
 uv rgb
 name STMap1
 xpos -3537
 ypos 3295
}
Merge2 {
 inputs 2
 operation multiply
 name REFLECT
 xpos -3537
 ypos 3466
}
Dot {
 name Dot19
 xpos -3503
 ypos 3589
}
push $N28ac7200
Merge2 {
 inputs 2
 operation plus
 bbox B
 name Merge4
 label "Reflections \n"
 note_font_size 20
 xpos -3212
 ypos 3570
}
Merge2 {
 inputs 2
 operation plus
 name Merge5
 label "Refractions \n"
 note_font_size 20
 xpos -3209
 ypos 3842
}
Merge2 {
 inputs 2
 operation plus
 name Merge6
 label "Light \n"
 note_font_size 20
 xpos -3209
 ypos 4199
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy6
 xpos -3209
 ypos 4394
}
Premult {
 name Premult5
 xpos -3209
 ypos 4503
}
Dot {
 name Dot20
 xpos -3175
 ypos 4592
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard3
 xpos -2874
 ypos 4419
}
Merge2 {
 inputs 2
 bbox B
 name Merge7
 xpos -2874
 ypos 4588
}
push $N6f394a30
push $N6f393680
Viewer {
 inputs 2
 frame 1
 viewerProcess None
 input_process false
 name Viewer3
 xpos -3704
 ypos 4094
 hide_input true
}
Constant {
 inputs 0
 channels rgb
 color {0 0 -1 0}
 format "640 480 0 0 640 480 1 PC_Video"
 name Constant15
 label "Blue = -1\n"
 note_font "Verdana Bold Bold Bold"
 note_font_size 30
 xpos -3651
 ypos 2139
}
Reformat {
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Reformat4
 xpos -3651
 ypos 2267
}
Group {
 name Refract_Vector2
 xpos -4194
 ypos 2328
 addUserKnob {20 User}
 addUserKnob {7 knob_refT l "refractive index from" R 0 10}
 knob_refT 1
 addUserKnob {7 knob_refF l "refractive index from" R 0 10}
 knob_refF 2
}
 Input {
  inputs 0
  name I_VEC
  xpos -518
  ypos 334
 }
 Dot {
  name Dot1
  xpos -484
  ypos 489
 }
 Input {
  inputs 0
  name N_VEC
  xpos -352
  ypos 334
  number 1
 }
 MergeExpression {
  inputs 2
  temp_name0 IdotN
  temp_expr0 Ar*Br+Ag*Bg+Ab*Bb
  temp_name1 bb
  temp_expr1 "(IdotN >=0)? (parent.knob_refT / parent.knob_refF) : (parent.knob_refF / parent.knob_refT)"
  temp_name2 D2
  temp_expr2 "1 - bb * bb *(1 - IdotN * IdotN)"
  temp_name3 aa
  temp_expr3 "(IdotN > 0 ) ? bb * IdotN - sqrt(D2) : bb * IdotN + sqrt(D2)"
  expr0 "(D2 > 0 ) ? Ar * bb - Br * aa : 0"
  expr1 "(D2 > 0 ) ? Ag * bb - Bg * aa : 0"
  expr2 "(D2 > 0 ) ? Ab * bb - Bb * aa : 0"
  expr3 "(D2 > 0 ) ? 1: 0"
  name refract_expression
  label "\n\n\n"
  selected true
  xpos -352
  ypos 483
 }
 Output {
  name Output1
  xpos -352
  ypos 692
 }
end_group
push 0
Group {
 inputs 2
 name Vector_to_st3
 xpos -4108
 ypos 2728
 addUserKnob {20 User}
 addUserKnob {6 knob_flipST l "flip s and t" +STARTLINE}
 knob_flipST true
 addUserKnob {6 knob_invertS l "invert S" +STARTLINE}
 knob_invertS true
 addUserKnob {6 knob_invertT l "invert T" +STARTLINE}
 knob_invertT true
 addUserKnob {6 knob_premult l premult +STARTLINE}
 knob_premult true
}
 Input {
  inputs 0
  name VEC_IN
  xpos -268
  ypos -587
  number 1
 }
 Expression {
  temp_name0 s
  temp_expr0 "acos(g) / 3.1415"
  temp_name1 t
  temp_expr1 "(3.1415 + atan2(b,\nr)) / (2 * 3.1415)"
  temp_name2 ss
  temp_expr2 "(knob_invertS > 0.5 ) ? (s * -1 + 1):s"
  temp_name3 tt
  temp_expr3 "(knob_invertT > 0.5 ) ? (t * -1 + 1):t"
  expr0 "(parent.knob_flipST > 0.5 ) ? tt : ss"
  expr1 "(parent.knob_flipST > 0.5 ) ? ss: tt"
  expr2 0
  name Expression1
  selected true
  xpos -268
  ypos -513
 }
 Output {
  name Output1
  xpos -268
  ypos -387
 }
end_group
Mirror {
 inputs 0
 Horizontal true
 Vertical true
 name Mirror1
 xpos -3538
 ypos 2727
}
STMap {
 inputs 2
 channels rgb
 uv rgb
 name STMap3
 xpos -3591
 ypos 2812
}
push $N1c6263c0
push 0
Group {
 inputs 2
 name refracter
 xpos 194
 ypos 1465
 addUserKnob {20 User}
 addUserKnob {41 channels T IDistort1.channels}
 addUserKnob {7 amount R -2 2}
 amount 1.78
 addUserKnob {6 fine +STARTLINE}
 fine true
 addUserKnob {14 blurLens R 0 100}
 blurLens 26.5
 addUserKnob {6 wrap +STARTLINE}
 addUserKnob {4 lensChannel M {Red Green Blue Alpha ""}}
 lensChannel Blue
 addUserKnob {41 filter T IDistort1.filter}
 addUserKnob {26 ""}
 addUserKnob {26 t l "" +STARTLINE T "PxF_Distort 2.0 - (c) 2009 - Xavier Bourque - www.pixelfudger.com"}
}
 Input {
  inputs 0
  name lens
  xpos -214
  ypos -227
  number 1
 }
 Dot {
  name Dot4
  xpos -180
  ypos -175
 }
set N1c81ede0 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  name Shuffle4
  label alpha
  xpos -77
  ypos -38
 }
push $N1c81ede0
 Shuffle {
  red black
  green black
  blue black
  alpha blue
  name Shuffle3
  label blue
  xpos -170
  ypos -36
 }
push $N1c81ede0
 Shuffle {
  red black
  green black
  blue black
  alpha green
  name Shuffle2
  label green
  xpos -259
  ypos -38
 }
push $N1c81ede0
 Shuffle {
  red black
  green black
  blue black
  alpha red
  name Shuffle1
  label red
  xpos -352
  ypos -40
 }
 Switch {
  inputs 4
  which {{lensChannel i}}
  name Switch1
  xpos -222
  ypos 28
 }
 Dot {
  name Dot1
  xpos -188
  ypos 118
 }
set N1c81ff10 [stack 0]
push $N1c81ff10
 Position {
  translate {1 0}
  name Position1
  xpos -291
  ypos 159
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -257
  ypos 207
 }
push $N1c81ff10
push $N1c81ff10
 Position {
  translate {0 1}
  name Position2
  xpos -101
  ypos 169
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge21
  xpos -146
  ypos 207
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha2
  blue blue
  name ShuffleCopy3
  xpos -206
  ypos 247
 }
 Blur {
  size {{"blurLens * width / 2048 * 2.75" i x1 30}}
  name Blur13
  xpos -206
  ypos 271
 }
 Multiply {
  value {{"fine ? pow(blurLens,0.395) * amount * width * 3.597 / 10 : pow(blurLens,0.395) * amount * width * 3.597"}}
  name Multiply5
  xpos -206
  ypos 310
 }
set N1c9bbe10 [stack 0]
 Expression {
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "r == 0 && g == 0 ? 1 : 0"
  name Expression1
  xpos -169
  ypos 461
 }
 Input {
  inputs 0
  name img
  xpos -451
  ypos -225
 }
 Dot {
  name Dot3
  xpos -409
  ypos -140
 }
set N1c9bc860 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 242
 }
push $N1c9bbe10
push $N1c9bc860
 Mirror {
  Horizontal true
  Vertical true
  name Mirror2
  xpos -435
  ypos 113
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 3
  filter Impulse
  name Reformat2
  xpos -435
  ypos 137
  disable {{"1 - wrap" i}}
 }
 Tile {
  rows 3
  mirrorRows true
  columns 3
  mirrorCols true
  filter Impulse
  name Tile1
  xpos -435
  ypos 161
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 0.333333
  resize none
  filter Impulse
  name Reformat3
  xpos -435
  ypos 185
  disable {{"1 - wrap" i}}
 }
 Transform {
  translate {-1 -1}
  center {3072 2334}
  black_outside false
  name Transform1
  xpos -435
  ypos 219
  disable {{"1 - wrap" i}}
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  from1 rgba.green
  to1 forward.v
  name Copy1
  xpos -396
  ypos 304
 }
 IDistort {
  channels rgb
  uv forward
  blur -depth.Z
  filter Parzen
  name IDistort1
  xpos -396
  ypos 469
 }
 Remove {
  channels forward
  name Remove1
  xpos -396
  ypos 502
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -416
  ypos 668
 }
 Output {
  name Output1
  xpos -425
  ypos 739
 }
push $N1c9bbe10
 Viewer {
  name Viewer1
  xpos -572
  ypos 747
 }
end_group
Noise {
 inputs 0
 size 20
 center {1024 778}
 name Noise4
 xpos -2226
 ypos 1193
}
Camera2 {
 inputs 0
 translate {0 0 13.17500019}
 name Camera2
 xpos -2201
 ypos 1116
}
push $N27b50440
push 0
push 0
ParticleEmitter {
 inputs 3
 rate 20
 rate_variation 1
 size_variation 2
 spread 3
 translate {0 -0.7049999833 0}
 name ParticleEmitter1
 xpos -2056
 ypos 970
}
ParticleTurbulence {
 strength {2 1.1 0.1}
 scale {1 0.1 1}
 name ParticleTurbulence1
 xpos -2056
 ypos 994
}
Reformat {
 inputs 0
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Reformat3
 xpos -1868
 ypos 969
}
ScanlineRender {
 inputs 3
 samples 0
 motion_vectors_type distance
 output_shader_vectors true
 N_channel rgb
 name ScanlineRender2
 xpos -2056
 ypos 1137
}
Group {
 inputs 2
 name Itransform
 tile_color 0x81275aff
 note_font "Verdana Bold Bold Bold"
 note_font_size 12
 note_font_color 0xffffffff
 xpos -2056
 ypos 1192
 addUserKnob {20 "" l Transform}
 addUserKnob {41 matrix T Transform1.matrix}
 addUserKnob {41 translate T Transform1.translate}
 addUserKnob {41 rotate T Transform1.rotate}
 addUserKnob {41 scale T Transform1.scale}
 addUserKnob {41 skewX l "skew X" T Transform1.skewX}
 addUserKnob {41 skewY l "skew Y" T Transform1.skewY}
 addUserKnob {41 skew +INVISIBLE T Transform1.skew}
 addUserKnob {41 center T Transform1.center}
 addUserKnob {22 setCenter -STARTLINE T "n = nuke.thisGroup()\nw= n.width()\nh=n.height()\nprint w,h\nn\['center'].setValue(\[w/2,h/2])"}
 addUserKnob {41 filter T Transform1.filter}
 addUserKnob {41 clamp T Transform1.clamp}
 addUserKnob {6 crop_1 l crop -STARTLINE}
 crop_1 true
 addUserKnob {41 crop l "black outside" +INVISIBLE T Transform1.crop}
 addUserKnob {41 clip l "knob crop \$value" +INVISIBLE T Transform1.clip}
 addUserKnob {14 AdjBBox1_numpixels l "Add Pixels" R 0 100}
 AdjBBox1_numpixels 50
}
 Transform {
  inputs 0
  rotate 3.9
  center {1024 584}
  black_outside false
  name Transform1
  label "expresison link this\nto avoid st map overlay"
  xpos -72
  ypos -136
 }
 Input {
  inputs 0
  name ctrlMask
  xpos -40
  ypos -51
  number 1
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  alpha black
  name Shuffle1
  xpos -40
  ypos -24
 }
 Input {
  inputs 0
  name img
  xpos -385
  ypos -227
 }
set Ncee39610 [stack 0]
 Remove {
  name Remove1
  xpos -210
  ypos -232
 }
 AdjBBox {
  numpixels {{parent.AdjBBox1_numpixels.w} {parent.AdjBBox1_numpixels.h}}
  name AdjBBox1
  xpos -210
  ypos -196
 }
 Expression {
  expr0 x
  expr1 y
  name Expression1
  xpos -210
  ypos -140
 }
set Ncee3a060 [stack 0]
 Dot {
  name Dot2
  xpos -286
  ypos -136
 }
 Transform {
  translate {{parent.Transform1.translate.main} {parent.Transform1.translate.main}}
  rotate {{parent.Transform1.rotate.main}}
  scale {{parent.Transform1.scale.main}}
  center {{parent.Transform1.center.main} {parent.Transform1.center.main}}
  filter {{Transform1.filter}}
  clamp {{parent.Transform1.clamp.main}}
  black_outside {{parent.Transform1.black_outside.main}}
  motionblur {{parent.Transform1.motionblur.main}}
  shutter {{parent.Transform1.shutter.main}}
  shutteroffset {{Transform1.shutteroffset}}
  shuttercustomoffset {{parent.Transform1.shuttercustomoffset.main}}
  name Transform2
  selected true
  xpos -320
  ypos -72
 }
push $Ncee3a060
 Merge2 {
  inputs 2
  operation minus
  name Merge1
  xpos -210
  ypos -72
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge2
  xpos -210
  ypos -24
 }
set N24684c10 [stack 0]
 Dot {
  name Dot1
  xpos -270
  ypos -21
 }
 Dot {
  name Dot3
  xpos -270
  ypos 159
 }
push $Ncee39610
 Dot {
  name Dot4
  xpos -351
  ypos 48
 }
set N26c6b7c0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  name Copy2
  xpos -385
  ypos 144
 }
 IDistort {
  channels none
  name IDistort1
  xpos -385
  ypos 192
 }
push $N24684c10
push $N26c6b7c0
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  from1 rgba.green
  to1 forward.v
  name Copy1
  xpos -210
  ypos 33
 }
 IDistort {
  uv forward
  name IDistort2
  xpos -210
  ypos 88
 }
set Ncf1603a0 [stack 0]
 Remove {
  channels none
  name Remove2
  xpos -210
  ypos 124
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  name Copy3
  xpos -210
  ypos 192
 }
set Nce817ab0 [stack 0]
 Crop {
  box {0 0 {input.width} {input.height}}
  name Crop1
  xpos -340
  ypos 270
 }
push $Nce817ab0
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -210
  ypos 346
  disable {{!parent.crop_1}}
 }
 Output {
  name Output1
  xpos -210
  ypos 418
 }
push $Ncf1603a0
 Viewer {
  input_process false
  name Viewer1
  xpos 70
  ypos -9
  hide_input true
 }
end_group
Blur {
 channels rgba
 size 1
 name Blur3
 xpos -2056
 ypos 1218
}
Dot {
 name Dot3
 xpos -2022
 ypos 1330
}
set N27b518e0 [stack 0]
Expression {
 expr3 (abs(((r-ov.r)+(g-ov.g)*((1-b)*ov.b)))-3)*10
 name Expression3
 xpos -2071
 ypos 1427
 addUserKnob {20 User}
 addUserKnob {18 ov l overbend}
 ov {0.9 0.9 1.6}
}
Clamp {
 channels rgba
 name Clamp1
 xpos -2071
 ypos 1452
}
push $N27b518e0
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.red
 name Copy5
 xpos -1919
 ypos 1446
}
push $N27b518e0
Read {
 inputs 0
 file H:/Photos/__Renders/cabaliero.jpg
 cacheLocal always
 format "636 955 0 0 636 955 1 "
 origset true
 auto_alpha true
 name Read3
 xpos -1511
 ypos 1136
 postage_stamp false
}
Reformat {
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Reformat2
 xpos -1549
 ypos 1247
}
set N27b4aae0 [stack 0]
Copy {
 inputs 2
 from0 rgba.red
 to0 forward.u
 from1 rgba.green
 to1 forward.v
 from3 rgba.alpha
 to3 rgba.alpha
 name Copy3
 xpos -1797
 ypos 1309
}
add_layer {fresnel fresnel.red fresnel.green fresnel.blue}
Expression {
 temp_name0 X
 temp_expr0 x/10000+(1-((forward.u+1)/2))*width
 temp_name1 Y
 temp_expr1 y/10000+(1-((forward.v+1)/2))*height
 expr0 r(X*abb.r,Y)
 expr1 g(X*abb.g,Y)
 expr2 b(X*abb.b,Y)
 channel3 {fresnel.red -fresnel.green -fresnel.blue}
 expr3 1-fresnel.z
 name Expression2
 xpos -1797
 ypos 1391
 addUserKnob {20 User}
 addUserKnob {18 abb l abberation R 0 10}
 abb {1 1 1}
}
ShuffleCopy {
 inputs 2
 red blue
 green blue
 blue red
 alpha blue
 out fresnel
 name ShuffleCopy3
 xpos -1797
 ypos 1452
}
Invert {
 channels {fresnel.red fresnel.green -fresnel.blue}
 name Invert2
 xpos -1797
 ypos 1484
}
Grade {
 channels {-fresnel.red fresnel.green -fresnel.blue}
 white 2
 gamma 1.07
 name "Defocus mask"
 xpos -1797
 ypos 1562
}
Defocus {
 channels rgb
 maskChannelInput fresnel.green
 name Defocus1
 xpos -1797
 ypos 1604
}
Defocus {
 defocus 0.2
 name Defocus2
 xpos -1797
 ypos 1695
}
Grade {
 channels {fresnel.red -fresnel.green -fresnel.blue}
 multiply 1.8
 gamma 0.354
 black_clamp false
 name "fresnel ammount"
 xpos -1797
 ypos 1801
}
Grade {
 add 0.305
 black_clamp false
 maskChannelInput fresnel.red
 name Grade6
 xpos -1797
 ypos 1837
}
Grade {
 multiply 0
 black_clamp false
 maskChannelInput fresnel.blue
 name overbend
 xpos -1797
 ypos 1947
}
Crop {
 box {0 0 1024 1024}
 name Crop1
 xpos -1797
 ypos 2056
}
Premult {
 name Premult3
 xpos -1797
 ypos 2104
}
Dot {
 name Dot5
 xpos -1763
 ypos 2138
}
push $N27b4aae0
Merge2 {
 inputs 2
 name Merge3
 xpos -1549
 ypos 2134
}
Viewer {
 inputs 2
 frame 100
 freezeGuiWhenPlayBack true
 input_process false
 translate {1.220000148 -0.1420000046}
 name Viewer1
 xpos -40
 ypos -9
 hide_input true
}
