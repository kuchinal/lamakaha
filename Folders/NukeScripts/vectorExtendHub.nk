set cut_paste_input [stack 0]
version 8.0 v1
Dot {
 inputs 0
 name Dot12
 selected true
 xpos 639
 ypos -86
 hide_input true
}
Dot {
 name Dot13
 label "\n  mask C"
 note_font "Verdana Bold Bold"
 note_font_size 14
 note_font_color 0x6368ff
 selected true
 xpos 577
 ypos -86
}
Dot {
 inputs 0
 name Dot14
 selected true
 xpos 637
 ypos -133
 hide_input true
}
Dot {
 name Dot15
 label "\n    maskB"
 note_font "Verdana Bold Bold"
 note_font_size 14
 note_font_color 0x6368ff
 selected true
 xpos 572
 ypos -133
}
Dot {
 inputs 0
 name Dot16
 selected true
 xpos 633
 ypos -174
 hide_input true
}
Dot {
 name Dot17
 label "\n    mask A"
 note_font "Verdana Bold Bold"
 note_font_size 14
 note_font_color 0x6368ff
 selected true
 xpos 571
 ypos -174
}
Dot {
 inputs 0
 name Dot28
 label "\ncontrol"
 note_font "Verdana Bold"
 note_font_size 14
 note_font_color 0x6368ff
 selected true
 xpos 432
 ypos -86
}
push $cut_paste_input
Dot {
 name Dot37
 selected true
 xpos 529
 ypos -175
}
Group {
 inputs 5
 name VextendHUB
 autolabel "nuke.thisNode()\['label'].value()"
 tile_color 0x739bff
 note_font_size 12
 selected true
 xpos 495
 ypos -90
 addUserKnob {20 extendA}
 addUserKnob {6 enable +STARTLINE}
 enable true
 addUserKnob {6 fullscreen -STARTLINE}
 fullscreen true
 addUserKnob {41 premult l "input is" T VExtendEdge3.premult}
 addUserKnob {41 from0 l "control matte channel" T VExtendEdge3.from0}
 addUserKnob {41 size l "pre-erode control matte" T VExtendEdge3.size}
 addUserKnob {41 preblur l "pre-blur control matte" T VExtendEdge3.preblur}
 addUserKnob {26 ""}
 addUserKnob {41 slices l "vector blur slices" T VExtendEdge3.slices}
 addUserKnob {41 preblur_vector l "preblur vector" T VExtendEdge3.preblur_vector}
 addUserKnob {41 vector_length l "vector length" T VExtendEdge3.vector_length}
 addUserKnob {26 ""}
 addUserKnob {41 output T VExtendEdge3.output}
 addUserKnob {20 extendB}
 addUserKnob {6 enable_1 l enable +STARTLINE}
 addUserKnob {41 premult_1 l "input is" T VExtendEdge4.premult}
 addUserKnob {41 from0_1 l "control matte channel" T VExtendEdge4.from0}
 addUserKnob {41 size_1 l "pre-erode control matte" T VExtendEdge4.size}
 addUserKnob {41 preblur_1 l "pre-blur control matte" T VExtendEdge4.preblur}
 addUserKnob {26 ""}
 addUserKnob {41 slices_1 l "vector blur slices" T VExtendEdge4.slices}
 addUserKnob {41 preblur_vector_1 l "preblur vector" T VExtendEdge4.preblur_vector}
 addUserKnob {41 vector_length_1 l "vector length" T VExtendEdge4.vector_length}
 addUserKnob {26 ""}
 addUserKnob {41 output_1 l output T VExtendEdge4.output}
 addUserKnob {20 extendC}
 addUserKnob {6 enable_2 l enable +STARTLINE}
 addUserKnob {41 premult_2 l "input is" T VExtendEdge5.premult}
 addUserKnob {41 from0_2 l "control matte channel" T VExtendEdge5.from0}
 addUserKnob {41 size_2 l "pre-erode control matte" T VExtendEdge5.size}
 addUserKnob {41 preblur_2 l "pre-blur control matte" T VExtendEdge5.preblur}
 addUserKnob {26 ""}
 addUserKnob {41 slices_2 l "vector blur slices" T VExtendEdge5.slices}
 addUserKnob {41 preblur_vector_2 l "preblur vector" T VExtendEdge5.preblur_vector}
 addUserKnob {41 vector_length_2 l "vector length" T VExtendEdge5.vector_length}
 addUserKnob {26 ""}
 addUserKnob {41 output_2 l output T VExtendEdge5.output}
}
 Input {
  inputs 0
  xpos -430
  ypos 311
  number 4
 }
 Input {
  inputs 0
  xpos -1191
  ypos -114
  number 1
 }
 Expression {
  channel0 {-rgba.red -rgba.green -rgba.blue none}
  expr0 0
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr2 0
  channel3 {rgba.alpha none none rgba.alpha}
  expr3 a==0?0:a
  name AlphaFix1
  label "To avid Gizmo being in state of\nerror without something plugged in input."
  xpos -1191
  ypos -90
 }
set N42c181b0 [stack 0]
 Input {
  inputs 0
  name FG
  xpos -596
  ypos -150
 }
 Dot {
  name Dot11
  xpos -562
  ypos -46
 }
set N3f63c300 [stack 0]
 Dot {
  name Dot12
  xpos -746
  ypos -46
 }
set N3f63c670 [stack 0]
 Dot {
  name Dot15
  xpos -870
  ypos -47
 }
set N3f63c9e0 [stack 0]
 Dot {
  name Dot19
  xpos -1008
  ypos -47
 }
 Group {
  inputs 2
  name VExtendEdge5
  help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
  autolabel "nuke.thisNode()\['label'].value()"
  note_font_size 10
  xpos -1042
  ypos 74
  addUserKnob {20 User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  premult unpremultiplied
  addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
  addUserKnob {41 size l "pre-erode control matte" T FilterErode1.size}
  addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
  preblur 1
  addUserKnob {26 ""}
  addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
  slices 2
  addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
  preblur_vector 1
  addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
  vector_length 2
  addUserKnob {26 ""}
  addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
 }
  Input {
   inputs 0
   name mask
   xpos 1108
   ypos 2695
   number 2
  }
  Clamp {
   name Clamp1
   xpos 1108
   ypos 2721
  }
  Invert {
   name Invert1
   xpos 1108
   ypos 2759
  }
  Input {
   inputs 0
   name img
   xpos 840
   ypos 457
  }
  Dot {
   name Dot2
   xpos 874
   ypos 570
  }
set N3f63de80 [stack 0]
  Dot {
   name Dot22
   xpos 898
   ypos 2459
  }
set N3f63e1f0 [stack 0]
  Input {
   inputs 0
   name ctrl_matte
   xpos 1122
   ypos 453
   number 1
  }
  FilterErode {
   channels all
   size 0
   name FilterErode1
   selected true
   xpos 1122
   ypos 477
  }
push $N3f63de80
  Unpremult {
   name Unpremult11
   xpos 965
   ypos 566
   disable {{parent.premult i}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy4
   xpos 1122
   ypos 559
   disable {{"!\[exists parent.input1]" i}}
  }
  Blur {
   channels alpha
   size {{parent.preblur i}}
   name Blur12
   label "pre-blur alpha"
   xpos 1122
   ypos 648
  }
set N3f63f320 [stack 0]
push $N3f63f320
push $N3f63f320
push $N3f63f320
  Group {
   inputs 2
   name ExtendEdge
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1325
   ypos 662
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.preblur_vector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3f63f690 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fcd0e70 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fcd0e70
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fcd0e70
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fcd0e70
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fcd2310 [stack 0]
push $N3fcd2310
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3f63f690
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{vector_length i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix11
   xpos 1325
   ypos 751
  }
set N3fcd4200 [stack 0]
push $N3fcd4200
push $N3fcd4200
push $N3fcd4200
  Group {
   inputs 2
   name ExtendEdge1
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1509
   ypos 743
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fcd4570 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fcd5a10 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fcd5a10
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fcd5a10
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fcd5a10
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fcd6eb0 [stack 0]
push $N3fcd6eb0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fcd4570
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix12
   xpos 1509
   ypos 823
  }
set N3fcd8da0 [stack 0]
push $N3fcd8da0
push $N3fcd8da0
push $N3fcd8da0
  Group {
   inputs 2
   name ExtendEdge2
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1695
   ypos 823
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fcd9110 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fcda5b0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fcda5b0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fcda5b0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fcda5b0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fcdba50 [stack 0]
push $N3fcdba50
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fcd9110
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix13
   xpos 1695
   ypos 895
  }
set N3fcdd940 [stack 0]
push $N3fcdd940
push $N3fcdd940
push $N3fcdd940
  Group {
   inputs 2
   name ExtendEdge3
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1891
   ypos 895
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fcddcb0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fcdf150 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fcdf150
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fcdf150
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fcdf150
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fce05f0 [stack 0]
push $N3fce05f0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fcddcb0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix14
   xpos 1891
   ypos 967
  }
set N3fce24e0 [stack 0]
push $N3fce24e0
push $N3fce24e0
push $N3fce24e0
  Group {
   inputs 2
   name ExtendEdge4
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2077
   ypos 967
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fce2850 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fce3cf0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fce3cf0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fce3cf0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fce3cf0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fce5190 [stack 0]
push $N3fce5190
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fce2850
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix15
   xpos 2077
   ypos 1039
  }
set N3fce7080 [stack 0]
push $N3fce7080
push $N3fce7080
push $N3fce7080
  Group {
   inputs 2
   name ExtendEdge5
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2263
   ypos 1039
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fce73f0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fce8890 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fce8890
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fce8890
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fce8890
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fce9d30 [stack 0]
push $N3fce9d30
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fce73f0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix16
   xpos 2263
   ypos 1111
  }
set N3fcebc20 [stack 0]
push $N3fcebc20
push $N3fcebc20
push $N3fcebc20
  Group {
   inputs 2
   name ExtendEdge6
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2449
   ypos 1111
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N3fcebf90 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N3fced430 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N3fced430
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N3fced430
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N3fced430
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N3fcee8d0 [stack 0]
push $N3fcee8d0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N3fcebf90
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix17
   xpos 2449
   ypos 1183
  }
set N40638510 [stack 0]
push $N40638510
push $N40638510
push $N40638510
  Group {
   inputs 2
   name ExtendEdge7
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2635
   ypos 1183
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N40638880 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N40639d20 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N40639d20
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N40639d20
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N40639d20
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N4063b1c0 [stack 0]
push $N4063b1c0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N40638880
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix18
   xpos 2635
   ypos 1255
  }
set N4063d0b0 [stack 0]
push $N4063d0b0
push $N4063d0b0
push $N4063d0b0
  Group {
   inputs 2
   name ExtendEdge8
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2829
   ypos 1255
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4063d420 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N4063e8c0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N4063e8c0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N4063e8c0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N4063e8c0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N4063fd60 [stack 0]
push $N4063fd60
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4063d420
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix19
   xpos 2829
   ypos 1327
  }
set N40641c50 [stack 0]
push $N40641c50
push $N40641c50
push $N40641c50
  Group {
   inputs 2
   name ExtendEdge9
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 3023
   ypos 1327
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N40641fc0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N40643460 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N40643460
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N40643460
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N40643460
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N40644900 [stack 0]
push $N40644900
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N40641fc0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix20
   xpos 3023
   ypos 1399
  }
push $N40641c50
push $N4063d0b0
push $N40638510
push $N3fcebc20
push $N3fce7080
push $N3fce24e0
push $N3fcdd940
push $N3fcd8da0
push $N3fcd4200
push $N3f63de80
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch3
   xpos 2018
   ypos 2366
  }
set N40004810 [stack 0]
  Shuffle {
   in forward
   blue black
   alpha black
   name Shuffle1
   xpos 2116
   ypos 2425
  }
set N40646b60 [stack 0]
  Expression {
   expr0 (r+1)/2
   expr1 (g+1)/2
   name Expression1
   xpos 2116
   ypos 2476
  }
push $N40646b60
push $N40004810
  Switch {
   inputs 3
   which {{parent.output}}
   name Switch1
   xpos 2018
   ypos 2501
  }
push $N3f63e1f0
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rgb
   name Copy1
   xpos 2018
   ypos 2544
  }
  Merge2 {
   inputs 2+1
   operation copy
   name Merge1
   xpos 1369
   ypos 2765
   disable {{"!\[exists parent.input2] " i}}
  }
  Output {
   name Output1
   xpos 1369
   ypos 2837
  }
 end_group
 Dot {
  name Dot18
  xpos -1008
  ypos 317
 }
 Input {
  inputs 0
  xpos -450
  ypos 219
  number 3
 }
push $N42c181b0
push $N3f63c9e0
 Group {
  inputs 2
  name VExtendEdge4
  help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
  autolabel "nuke.thisNode()\['label'].value()"
  note_font_size 10
  xpos -904
  ypos 68
  addUserKnob {20 User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  premult unpremultiplied
  addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
  addUserKnob {41 size l "pre-erode control matte" T FilterErode1.size}
  addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
  preblur 1
  addUserKnob {26 ""}
  addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
  slices 2
  addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
  preblur_vector 1
  addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
  vector_length 2
  addUserKnob {26 ""}
  addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
 }
  Input {
   inputs 0
   name mask
   xpos 1108
   ypos 2695
   number 2
  }
  Clamp {
   name Clamp1
   xpos 1108
   ypos 2721
  }
  Invert {
   name Invert1
   xpos 1108
   ypos 2759
  }
  Input {
   inputs 0
   name img
   xpos 840
   ypos 457
  }
  Dot {
   name Dot2
   xpos 874
   ypos 570
  }
set N40649130 [stack 0]
  Dot {
   name Dot22
   xpos 898
   ypos 2459
  }
set N406494a0 [stack 0]
  Input {
   inputs 0
   name ctrl_matte
   xpos 1122
   ypos 453
   number 1
  }
  FilterErode {
   channels all
   size 0
   name FilterErode1
   selected true
   xpos 1122
   ypos 477
  }
push $N40649130
  Unpremult {
   name Unpremult11
   xpos 965
   ypos 566
   disable {{parent.premult i}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy4
   xpos 1122
   ypos 559
   disable {{"!\[exists parent.input1]" i}}
  }
  Blur {
   channels alpha
   size {{parent.preblur i}}
   name Blur12
   label "pre-blur alpha"
   xpos 1122
   ypos 648
  }
set N4064a5d0 [stack 0]
push $N4064a5d0
push $N4064a5d0
push $N4064a5d0
  Group {
   inputs 2
   name ExtendEdge
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1325
   ypos 662
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.preblur_vector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4064a940 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N4064bde0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N4064bde0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N4064bde0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N4064bde0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N4064d280 [stack 0]
push $N4064d280
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4064a940
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{vector_length i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix11
   xpos 1325
   ypos 751
  }
set N4064f170 [stack 0]
push $N4064f170
push $N4064f170
push $N4064f170
  Group {
   inputs 2
   name ExtendEdge1
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1509
   ypos 743
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4064f4e0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N40650980 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N40650980
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N40650980
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N40650980
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N40651e20 [stack 0]
push $N40651e20
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4064f4e0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix12
   xpos 1509
   ypos 823
  }
set N40653d10 [stack 0]
push $N40653d10
push $N40653d10
push $N40653d10
  Group {
   inputs 2
   name ExtendEdge2
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1695
   ypos 823
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N40654080 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N40655520 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N40655520
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N40655520
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N40655520
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N406569c0 [stack 0]
push $N406569c0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N40654080
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix13
   xpos 1695
   ypos 895
  }
set N41de11e0 [stack 0]
push $N41de11e0
push $N41de11e0
push $N41de11e0
  Group {
   inputs 2
   name ExtendEdge3
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1891
   ypos 895
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41de1550 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41de29f0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41de29f0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41de29f0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41de29f0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41de3e90 [stack 0]
push $N41de3e90
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41de1550
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix14
   xpos 1891
   ypos 967
  }
set N41de5d80 [stack 0]
push $N41de5d80
push $N41de5d80
push $N41de5d80
  Group {
   inputs 2
   name ExtendEdge4
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2077
   ypos 967
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41de60f0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41de7590 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41de7590
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41de7590
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41de7590
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41de8a30 [stack 0]
push $N41de8a30
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41de60f0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix15
   xpos 2077
   ypos 1039
  }
set N41dea920 [stack 0]
push $N41dea920
push $N41dea920
push $N41dea920
  Group {
   inputs 2
   name ExtendEdge5
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2263
   ypos 1039
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41deac90 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41dec130 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41dec130
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41dec130
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41dec130
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41ded5d0 [stack 0]
push $N41ded5d0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41deac90
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix16
   xpos 2263
   ypos 1111
  }
set N41def4c0 [stack 0]
push $N41def4c0
push $N41def4c0
push $N41def4c0
  Group {
   inputs 2
   name ExtendEdge6
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2449
   ypos 1111
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41def830 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41df0cd0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41df0cd0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41df0cd0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41df0cd0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41df2170 [stack 0]
push $N41df2170
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41def830
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix17
   xpos 2449
   ypos 1183
  }
set N41df4060 [stack 0]
push $N41df4060
push $N41df4060
push $N41df4060
  Group {
   inputs 2
   name ExtendEdge7
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2635
   ypos 1183
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41df43d0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41df5870 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41df5870
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41df5870
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41df5870
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41df6d10 [stack 0]
push $N41df6d10
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41df43d0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix18
   xpos 2635
   ypos 1255
  }
set N41df8c00 [stack 0]
push $N41df8c00
push $N41df8c00
push $N41df8c00
  Group {
   inputs 2
   name ExtendEdge8
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2829
   ypos 1255
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41df8f70 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41dfa410 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41dfa410
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41dfa410
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41dfa410
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N41dfb8b0 [stack 0]
push $N41dfb8b0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41df8f70
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix19
   xpos 2829
   ypos 1327
  }
set N41dfd7a0 [stack 0]
push $N41dfd7a0
push $N41dfd7a0
push $N41dfd7a0
  Group {
   inputs 2
   name ExtendEdge9
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 3023
   ypos 1327
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N41dfdb10 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N41dfefb0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N41dfefb0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N41dfefb0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N41dfefb0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42450790 [stack 0]
push $N42450790
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N41dfdb10
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix20
   xpos 3023
   ypos 1399
  }
push $N41dfd7a0
push $N41df8c00
push $N41df4060
push $N41def4c0
push $N41dea920
push $N41de5d80
push $N41de11e0
push $N40653d10
push $N4064f170
push $N40649130
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch3
   xpos 2018
   ypos 2366
  }
set N40007800 [stack 0]
  Shuffle {
   in forward
   blue black
   alpha black
   name Shuffle1
   xpos 2116
   ypos 2425
  }
set N424529f0 [stack 0]
  Expression {
   expr0 (r+1)/2
   expr1 (g+1)/2
   name Expression1
   xpos 2116
   ypos 2476
  }
push $N424529f0
push $N40007800
  Switch {
   inputs 3
   which {{parent.output}}
   name Switch1
   xpos 2018
   ypos 2501
  }
push $N406494a0
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rgb
   name Copy1
   xpos 2018
   ypos 2544
  }
  Merge2 {
   inputs 2+1
   operation copy
   name Merge1
   xpos 1369
   ypos 2765
   disable {{"!\[exists parent.input2] " i}}
  }
  Output {
   name Output1
   xpos 1369
   ypos 2837
  }
 end_group
 Dot {
  name Dot17
  xpos -870
  ypos 222
 }
 Input {
  inputs 0
  xpos -367
  ypos 48
  number 2
 }
set N3f63ae60 [stack 0]
 Shuffle {
  red white
  green white
  blue white
  alpha white
  name Shuffle1
  tile_color 0xffffffff
  label "White Alpha"
  xpos -484
  ypos 42
 }
push $N3f63ae60
 Merge2 {
  inputs 2
  operation copy
  name Merge1
  xpos -367
  ypos 96
  disable {{!parent.fullscreen}}
 }
 Dot {
  name Dot1
  xpos -333
  ypos 143
 }
push $N42c181b0
push $N3f63c670
 Group {
  inputs 2
  name VExtendEdge3
  help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
  autolabel "nuke.thisNode()\['label'].value()"
  note_font_size 10
  xpos -780
  ypos 67
  addUserKnob {20 User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  premult unpremultiplied
  addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
  addUserKnob {41 size l "pre-erode control matte" T FilterErode1.size}
  addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
  preblur 1
  addUserKnob {26 ""}
  addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
  slices 2
  addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
  preblur_vector 1
  addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
  vector_length 2
  addUserKnob {26 ""}
  addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
 }
  Input {
   inputs 0
   name mask
   xpos 1108
   ypos 2695
   number 2
  }
  Clamp {
   name Clamp1
   xpos 1108
   ypos 2721
  }
  Invert {
   name Invert1
   xpos 1108
   ypos 2759
  }
  Input {
   inputs 0
   name img
   xpos 840
   ypos 457
  }
  Dot {
   name Dot2
   xpos 874
   ypos 570
  }
set N42454fc0 [stack 0]
  Dot {
   name Dot22
   xpos 898
   ypos 2459
  }
set N42455330 [stack 0]
  Input {
   inputs 0
   name ctrl_matte
   xpos 1122
   ypos 453
   number 1
  }
  FilterErode {
   channels all
   size 0
   name FilterErode1
   selected true
   xpos 1122
   ypos 477
  }
push $N42454fc0
  Unpremult {
   name Unpremult11
   xpos 965
   ypos 566
   disable {{parent.premult i}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy4
   xpos 1122
   ypos 559
   disable {{"!\[exists parent.input1]" i}}
  }
  Blur {
   channels alpha
   size {{parent.preblur i}}
   name Blur12
   label "pre-blur alpha"
   xpos 1122
   ypos 648
  }
set N42456460 [stack 0]
push $N42456460
push $N42456460
push $N42456460
  Group {
   inputs 2
   name ExtendEdge
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1325
   ypos 662
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.preblur_vector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N424567d0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42457c70 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42457c70
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42457c70
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42457c70
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42459110 [stack 0]
push $N42459110
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N424567d0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{vector_length i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix11
   xpos 1325
   ypos 751
  }
set N4245b000 [stack 0]
push $N4245b000
push $N4245b000
push $N4245b000
  Group {
   inputs 2
   name ExtendEdge1
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1509
   ypos 743
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4245b370 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N4245c810 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N4245c810
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N4245c810
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N4245c810
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N4245dcb0 [stack 0]
push $N4245dcb0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4245b370
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix12
   xpos 1509
   ypos 823
  }
set N4245fba0 [stack 0]
push $N4245fba0
push $N4245fba0
push $N4245fba0
  Group {
   inputs 2
   name ExtendEdge2
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1695
   ypos 823
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4245ff10 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N424613b0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N424613b0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N424613b0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N424613b0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42462850 [stack 0]
push $N42462850
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4245ff10
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix13
   xpos 1695
   ypos 895
  }
set N42464740 [stack 0]
push $N42464740
push $N42464740
push $N42464740
  Group {
   inputs 2
   name ExtendEdge3
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1891
   ypos 895
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42464ab0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42465f50 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42465f50
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42465f50
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42465f50
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N424673f0 [stack 0]
push $N424673f0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42464ab0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix14
   xpos 1891
   ypos 967
  }
set N424692e0 [stack 0]
push $N424692e0
push $N424692e0
push $N424692e0
  Group {
   inputs 2
   name ExtendEdge4
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2077
   ypos 967
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42469650 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N4246aaf0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N4246aaf0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N4246aaf0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N4246aaf0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N4246bf90 [stack 0]
push $N4246bf90
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42469650
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix15
   xpos 2077
   ypos 1039
  }
set N4246de80 [stack 0]
push $N4246de80
push $N4246de80
push $N4246de80
  Group {
   inputs 2
   name ExtendEdge5
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2263
   ypos 1039
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N4246e1f0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N4246f690 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N4246f690
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N4246f690
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N4246f690
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42c00e70 [stack 0]
push $N42c00e70
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N4246e1f0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix16
   xpos 2263
   ypos 1111
  }
set N42c02d60 [stack 0]
push $N42c02d60
push $N42c02d60
push $N42c02d60
  Group {
   inputs 2
   name ExtendEdge6
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2449
   ypos 1111
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42c030d0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42c04570 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42c04570
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42c04570
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42c04570
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42c05a10 [stack 0]
push $N42c05a10
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42c030d0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix17
   xpos 2449
   ypos 1183
  }
set N42c07900 [stack 0]
push $N42c07900
push $N42c07900
push $N42c07900
  Group {
   inputs 2
   name ExtendEdge7
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2635
   ypos 1183
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42c07c70 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42c09110 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42c09110
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42c09110
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42c09110
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42c0a5b0 [stack 0]
push $N42c0a5b0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42c07c70
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix18
   xpos 2635
   ypos 1255
  }
set N42c0c4a0 [stack 0]
push $N42c0c4a0
push $N42c0c4a0
push $N42c0c4a0
  Group {
   inputs 2
   name ExtendEdge8
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2829
   ypos 1255
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42c0c810 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42c0dcb0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42c0dcb0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42c0dcb0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42c0dcb0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42c0f150 [stack 0]
push $N42c0f150
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42c0c810
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix19
   xpos 2829
   ypos 1327
  }
set N42c11040 [stack 0]
push $N42c11040
push $N42c11040
push $N42c11040
  Group {
   inputs 2
   name ExtendEdge9
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 3023
   ypos 1327
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N42c113b0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N42c12850 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N42c12850
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N42c12850
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N42c12850
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N42c13cf0 [stack 0]
push $N42c13cf0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N42c113b0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix20
   xpos 3023
   ypos 1399
  }
push $N42c11040
push $N42c0c4a0
push $N42c07900
push $N42c02d60
push $N4246de80
push $N424692e0
push $N42464740
push $N4245fba0
push $N4245b000
push $N42454fc0
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch3
   xpos 2018
   ypos 2366
  }
set N4000a7f0 [stack 0]
  Shuffle {
   in forward
   blue black
   alpha black
   name Shuffle1
   xpos 2116
   ypos 2425
  }
set N42c15f50 [stack 0]
  Expression {
   expr0 (r+1)/2
   expr1 (g+1)/2
   name Expression1
   xpos 2116
   ypos 2476
  }
push $N42c15f50
push $N4000a7f0
  Switch {
   inputs 3
   which {{parent.output}}
   name Switch1
   xpos 2018
   ypos 2501
  }
push $N42455330
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rgb
   name Copy1
   xpos 2018
   ypos 2544
  }
  Merge2 {
   inputs 2+1
   operation copy
   name Merge1
   xpos 1369
   ypos 2765
   disable {{"!\[exists parent.input2] " i}}
  }
  Output {
   name Output1
   xpos 1369
   ypos 2837
  }
 end_group
 Dot {
  name Dot13
  xpos -746
  ypos 143
 }
push $N3f63c300
 Merge2 {
  inputs 2+1
  operation copy
  name Merge5
  xpos -596
  ypos 140
  disable {{!parent.enable}}
 }
 Merge2 {
  inputs 2+1
  operation copy
  name Merge6
  xpos -596
  ypos 219
  disable {{!parent.enable_1}}
 }
 Merge2 {
  inputs 2+1
  operation copy
  name Merge7
  xpos -596
  ypos 315
  disable {{!parent.enable_2}}
 }
 Output {
  name Output2
  xpos -596
  ypos 413
 }
end_group
