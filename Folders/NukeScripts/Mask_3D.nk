set cut_paste_input [stack 0]
version 9.0 v7
push $cut_paste_input
Group {
name Mask_3D_01
tile_color 0x4c00ff
note_font "Bitstream Vera Sans"
selected true
xpos -6025
ypos 54408
mapsize {0.15 0.15}
addUserKnob {20 User}
addUserKnob {18 pos l Position t "Select the colour that corresponds to the position you want."}
pos {0 0 0}
addUserKnob {6 pos_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {13 rad l Radius}
rad {10 10 10}
addUserKnob {7 uniformScale R 1 10}
uniformScale 1
addUserKnob {7 fall l "Falloff Exponent" R 1 10}
fall 5
addUserKnob {7 gain l Hardness}
gain 0.9
addUserKnob {26 ""}
addUserKnob {41 blackpoint T Grade1.blackpoint}
addUserKnob {41 whitepoint T Grade1.whitepoint}
}
Input {
inputs 0
name Input1
xpos 80
ypos 469
}
Expression {
temp_name0 distR
temp_expr0 (Br-parent.pos.r)/rad.x/uniformScale
temp_name1 distG
temp_expr1 (Bg-parent.pos.g)/rad.y/uniformScale
temp_name2 distB
temp_expr2 (Bb-parent.pos.b)/rad.z/uniformScale
temp_name3 len
temp_expr3 sqrt((distR*distR)+(distG*distG)+(distB*distB))
channel0 rgba
expr0 pow(1-len,fall)
channel1 none
channel2 none
channel3 none
maskChannelInput -rgba.alpha
name __POSITION_KEY__
xpos 80
ypos 503
}
Clamp {
channels rgba
name Clamp1
xpos 80
ypos 537
}
Group {
name Perlin_gain
help "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."
tile_color 0xcc9d6d00
selected true
xpos 90
ypos 573
addUserKnob {20 "" l User}
addUserKnob {7 realGain l "Perlin Gain function" t "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."}
realGain {{parent.gain x23 0.69}}
}
Input {
inputs 0
name Input1
xpos 130
ypos -100
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
tile_color 0xffffffff
xpos 130
ypos -74
}
Expression {
temp_name0 gain
temp_expr0 parent.realGain
temp_name1 lum
temp_expr1 "0.2125*Br + 0.7154*Bg + 0.0721*Bb"
temp_name2 val
temp_expr2 .5*((lum<.5)?((1-gain)>0?pow(2*lum,log(1-gain)/log(0.5)):0):2-((1-gain)>0?pow(2-2*lum,log(1-gain)/log(0.5)):0))
expr0 r>1?r:r*(val/(lum+0.00001))
expr1 g>1?g:g*(val/(lum+0.00001))
expr2 b>1?b:b*(val/(lum+0.00001))
name KPGain
tile_color 0xd47f3b00
label "TRUE GAIN\nFUNCTION"
xpos 130
ypos -28
addUserKnob {20 "" l User}
}
Shuffle {
green red
blue red
alpha red
name Shuffle2
tile_color 0x93000000
xpos 130
ypos 22
}
Output {
name Output1
xpos 130
ypos 98
}
end_group
Grade {
channels rgba
name Grade1
label rgba
xpos 80
ypos 614
}
Clamp {
channels rgba
name Clamp2
xpos 80
ypos 802
}
Output {
name Output1
xpos 80
ypos 836
}
end_group
