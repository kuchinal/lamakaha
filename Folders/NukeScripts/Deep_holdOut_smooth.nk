set cut_paste_input [stack 0]
version 10.5 v5
DeepRead {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/deep/deep_Hela_Cape_Pass.#.exr
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
version 5
name DeepRead10
label "release_v093 Hela_Cape_Pass"
selected true
xpos -11647
ypos -21879
}
NoOp {
name Hela_Cape_Pass_D
help DeepRead10
tile_color 0xffffffff
note_font_size 20
selected true
xpos -11647
ypos -21771
addUserKnob {20 User}
addUserKnob {26 "" -STARTLINE T "you probably wondering - why this weird white node is created? \nthe reason is that it is not healthy to creat the postage from Read node\nread node can be replaced and in this case your Postages will lose theyr parent,\nthat why you should create  your beloved Black postageStamp \nfrom this white sucker - just press F8 again :)"}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
set N2f112410 [stack 0]
DeepExpression {
chans1 deep
name Hela_Cape_Pass_D-3
help Hela_Cape_Pass_D
tile_color 0x6fff
note_font_size 20
selected true
xpos -11074
ypos -21516
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T Hela_Cape_Pass_D}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
DeepRead {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/deep/deep_Hela_Suit_Pass.#.exr
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
version 5
name DeepRead5
label "release_v093 Hela_Suit_Pass"
selected true
xpos -11026
ypos -21919
}
NoOp {
name HELA_DEEP
help DeepRead4
tile_color 0xffffffff
note_font_size 20
selected true
xpos -11026
ypos -21773
addUserKnob {20 User}
addUserKnob {26 "" -STARTLINE T "you probably wondering - why this weird white node is created? \nthe reason is that it is not healthy to creat the postage from Read node\nread node can be replaced and in this case your Postages will lose theyr parent,\nthat why you should create  your beloved Black postageStamp \nfrom this white sucker - just press F8 again :)"}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
set N107c17b0 [stack 0]
DeepExpression {
chans1 deep
name HELA_DEEP-3
help HELA_DEEP
tile_color 0x6fff
note_font_size 20
selected true
xpos -10889
ypos -21519
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T HELA_DEEP}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
DeepMerge {
inputs 2
operation holdout
name DeepMerge5
selected true
xpos -10889
ypos -21376
}
DeepToImage {
name DeepToImage4
selected true
xpos -10889
ypos -21178
}
set N3a015a30 [stack 0]
Group {
name ErodeMini1
tile_color 0xe58700ff
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 12
note_font_color 0xe58700ff
selected true
xpos -11322
ypos -21057
addUserKnob {20 User}
addUserKnob {6 Invertinput l "Invert input         " +STARTLINE}
addUserKnob {41 channels -STARTLINE T FilterErode1.channels}
addUserKnob {26 ERODE}
addUserKnob {41 size l "" +STARTLINE T FilterErode1.size}
addUserKnob {41 filter -STARTLINE T FilterErode1.filter}
addUserKnob {6 miniErode l "" +STARTLINE +STARTLINE}
addUserKnob {26 MINIERODE l "MINI ERODE" -STARTLINE}
addUserKnob {7 miniErodeSize l "" -STARTLINE R 0 10}
addUserKnob {26 BLUR}
addUserKnob {41 size_1 l "" +STARTLINE T Blur1.size}
addUserKnob {26 ""}
addUserKnob {7 mix}
mix 1
addUserKnob {26 ""}
addUserKnob {6 cutIn l "use a mask as a cut in" +STARTLINE}
addUserKnob {41 size_2 l "           blur cut in" -STARTLINE T Blur2.size}
}
Input {
inputs 0
name Mask
xpos -198
ypos 103
number 1
}
Dot {
name Dot15
xpos -164
ypos 218
}
set N784c60b0 [stack 0]
Dot {
name Dot14
xpos -164
ypos 285
}
set Nbf4ac60 [stack 0]
Blur {
channels rgba
name Blur2
selected true
xpos -198
ypos 584
}
Dot {
name Dot13
xpos -164
ypos 866
}
push $Nbf4ac60
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
xpos -292
ypos 281
}
push $N784c60b0
Shuffle {
alpha white
name Shuffle2
xpos -413
ypos 214
disable {{"\[exists parent.input1] "}}
}
Switch {
inputs 2
which {{parent.cutIn}}
name Switch1
xpos -413
ypos 281
}
Dot {
name Dot8
xpos -379
ypos 353
}
set N13ee9c20 [stack 0]
Dot {
name Dot3
xpos -379
ypos 619
}
set N13e34060 [stack 0]
Dot {
name Dot9
xpos -379
ypos 702
}
push $N13e34060
push $N13ee9c20
Input {
inputs 0
name Input1
xpos -528
ypos 84
}
Dot {
name Dot10
xpos -494
ypos 110
}
set N13e1dc20 [stack 0]
Invert {
channels rgba
mix {{parent.Invertinput}}
name Invert4
xpos -528
ypos 171
}
Dot {
name Dot5
xpos -494
ypos 236
}
set N28be70a0 [stack 0]
Dot {
name Dot6
xpos -705
ypos 236
}
FilterErode {
channels rgba
size -1
name FilterErode1
xpos -739
ypos 281
}
Dot {
name Dot7
xpos -705
ypos 353
}
push $N28be70a0
Merge2 {
inputs 2+1
operation copy
name Merge1
xpos -528
ypos 349
}
Dot {
name Dot1
xpos -494
ypos 432
}
set N13e47660 [stack 0]
Dot {
name Dot4
xpos -696
ypos 432
}
Reformat {
type scale
scale 5
name Reformat11
xpos -730
ypos 468
}
FilterErode {
channels rgba
size {{parent.miniErodeSize}}
name FilterErode6
xpos -730
ypos 494
}
Reformat {
type scale
scale {{1/parent.Reformat11.scale}}
name Reformat12
xpos -730
ypos 520
}
Dot {
name Dot2
xpos -696
ypos 619
}
push $N13e47660
Merge2 {
inputs 2+1
operation copy
name Merge2
xpos -528
ypos 615
disable {{!parent.miniErode}}
}
Blur {
inputs 1+1
channels rgba
name Blur1
xpos -528
ypos 698
}
push $N13e1dc20
Dot {
name Dot11
xpos -872
ypos 110
}
Dot {
name Dot12
xpos -872
ypos 804
}
Merge2 {
inputs 2
operation copy
mix {{parent.mix}}
name mix
xpos -528
ypos 800
}
Merge2 {
inputs 2
operation mask
mix {{parent.cutIn}}
name Merge3
xpos -528
ypos 862
}
Output {
name Output1
xpos -528
ypos 943
}
end_group
push $N107c17b0
DeepExpression {
chans1 deep
name HELA_DEEP-2
help HELA_DEEP
tile_color 0x6fff
note_font_size 20
selected true
xpos -11848
ypos -21495
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T HELA_DEEP}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
push $N2f112410
DeepExpression {
chans1 deep
name Hela_Cape_Pass_D-2
help Hela_Cape_Pass_D
tile_color 0x6fff
note_font_size 20
selected true
xpos -11621
ypos -21507
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T Hela_Cape_Pass_D}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
DeepMerge {
inputs 2
operation holdout
name DeepMerge4
selected true
xpos -11613
ypos -21372
}
DeepToImage {
name DeepToImage3
selected true
xpos -11613
ypos -21174
}
set Ne643c30 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
tile_color 0xffffffff
selected true
xpos -11613
ypos -21148
}
Blur {
inputs 1+1
channels rgba
size 3
name Blur1
label "\[value size]"
selected true
xpos -11613
ypos -21063
}
Dot {
name Dot36
selected true
xpos -11579
ypos -20944
}
Group {
inputs 0
name Render_Input_CG7
onCreate "n = nuke.thisNode()\n\nif nuke.env\['NukeVersionMajor'] > 9:\n    n.knob('localizationPolicy').setVisible(True)\n    p = nuke.toNode('preferences')\n    n.knob('localizationPolicy').setValue(p.knob('LocalizationPolicyDefault').value())\n    \n    n.knob('cacheLocal').setVisible(False)\nelse:\n    n.knob('localizationPolicy').setVisible(False)\n    n.knob('cacheLocal').setVisible(True)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkname = k.name()\npublished = n.knob('published').value()\n\nif kname in \['cacheLocal', 'localizationPolicy', 'first', 'last', 'before', 'after', 'on_error']:\n    val = k.value()\n    if kname in \['first', 'last']:\n        val = int(val)\n    readnodes = nuke.allNodes('Read', n)\n    for rn in readnodes:\n        rn.knob(kname).setValue(val)\n\nelif kname == 'primary_only':\n    val = k.value()\n    cpnodes = nuke.allNodes('Copy', n)\n    for cpn in cpnodes:\n        cpn.knob('disable').setValue(val)\n        \nelif kname == 'versions':\n    version = k.value()\n    from tx.path import Path\n    from tx_compositing.layers import CGVersion\n    cgv = CGVersion(Path(n.knob('render_folder').evaluate()) / version)\n    element = n.knob('element').value()\n    if published:\n        elements = cgv.published_elements()\n    else:\n        elements = cgv.elements.keys()\n    elements.sort()\n    n.knob('element').setValues(elements)\n    if element in elements:\n        n.knob('element').setValue(element)\n    else:\n        n.knob('element').setValue(elements\[0])"
tile_color 0x72a8c3ff
label "\[value versions]\n\[value element]"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 17
note_font_color 0xffffffff
selected true
xpos -11452
ypos -21934
addUserKnob {20 tab1 l CG}
addUserKnob {1 Sequence}
Sequence "\[value TrixterShotData.sequence]"
addUserKnob {1 Shot -STARTLINE}
Shot "\[value TrixterShotData.shot]"
addUserKnob {1 render_folder l INVISIBLE +INVISIBLE}
render_folder "\[value TrixterShotData.projectpath]/seq/\[value Sequence]/\[value Shot]/rendering/images/versions"
addUserKnob {26 ""}
addUserKnob {6 published l "published only" t "show only versions with published elements" -STARTLINE}
addUserKnob {4 versions l version M {release_environment_v038 release_v021 release_v028 release_v042 release_v043 release_v044 release_v047 release_v048 release_v049 release_v071 release_v073 release_v074 release_v075 release_v077 release_v078 release_v079 release_v080 release_v081 release_v082 release_v083 release_v084 release_v085 release_v086 release_v087 release_v088 release_v089 release_v090 release_v091 release_v093}}
versions release_v093
addUserKnob {22 update_versions l update -STARTLINE T "import os\nfrom tx_compositing.layers import CGVersion\n\nn = nuke.thisNode()\npublished = n.knob('published').value()\nversions = \[]\n\nrender_folder = n.knob('render_folder').evaluate()\nfiles = os.listdir(render_folder)\nfor f in files:\n    if os.path.isdir(os.path.join(render_folder, f)):\n        if os.path.exists(os.path.join(render_folder, f, 'primary')):\n            cgv = CGVersion(os.path.join(render_folder, f))\n            if not published or cgv.has_publishes():\n                versions.append(f)\n\nversions.sort()\nn.knob('versions').setValues(versions)\nif len(versions) == 0:\n    n.knob('element').setValues(\[])\n\nelse:\n    maxversion = max(versions)\n    n.knob('versions').setValue(maxversion)\n    \n    cgv = CGVersion(os.path.join(render_folder, maxversion))\n    element = n.knob('element').value()\n    if published:\n        elements = cgv.published_elements()\n    else:\n        elements = cgv.elements.keys()\n    elements.sort()\n    n.knob('element').setValues(elements)\n    if element in elements:\n        n.knob('element').setValue(element)\n    else:\n        n.knob('element').setValue(elements\[0])"}
addUserKnob {4 element M {Hela_Cape_Pass Hela_Suit_Pass matte}}
addUserKnob {22 load_layers l "        L O A D   L A Y E R S        " T "from tx.path import Path\nfrom tx_compositing.layers import CGVersion\n\nn = nuke.thisNode()\n\nvfolder = Path(n.knob('render_folder').evaluate()) / n.knob('versions').value()\ncgv = CGVersion(vfolder)\n\nelement = n.knob('element').value()\nwith n:\n    outp = nuke.toNode('Output1')\n    nodes = nuke.allNodes()\n    nodes.pop(nodes.index(outp))\n    for node in nodes: nuke.delete(node)\n\n    ln = cgv.create_nodes(element)\n    if ln is not None:\n        outp.setInput(0, ln)\n        outp.setXYpos(ln.xpos(), ln.ypos()+100)\n    \n        readnodes = nuke.allNodes('Read')\n        for k in \['cacheLocal', 'before', 'after', 'on_error']:\n            val = n.knob(k).value()\n            for rn in readnodes:\n                rn.knob(k).setValue(val)\n    \n        cpnodes = nuke.allNodes('Copy')\n        val = n.knob('primary_only').value()\n        for cpn in cpnodes:\n            cpn.knob('disable').setValue(val)\n    \n    else:\n        rn = None\n\ncgv.create_deep_nodes(element)\n\nif rn is not None:\n    for k in \['first', 'last']:\n        n.knob(k).setValue(rn.knob(k).value())\n\n    n.knob('file').setValue(cgv.elements\[element]\['layers']\[0].seq_string().rsplit(' ', 1)\[0])\nelse:\n    n.knob('file').setValue('')" +STARTLINE}
addUserKnob {26 line1 l "" +STARTLINE}
addUserKnob {1 file l INVISIBLE +INVISIBLE}
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/primary/primary_Hela_Cape_Pass.#.exr
addUserKnob {22 create_mp l "    Create Multipart    " T "import threading\nfrom tx.path import Path\nimport mario\n\nn = nuke.thisNode()\nsequence = n.knob('Sequence').evaluate()\nshot = n.knob('Shot').evaluate()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\niname = '_'.join(\[sequence, shot, version, element])\nipath = (vfolder / '..' / '..' / 'multipart' / iname / 'output' / (iname + '.%04d.exr')).normpath()\n\nprc = mario.processors.MCGVCreateMultipartSequence(cgversion=vfolder, element=element, image=ipath)\nthreading.Thread(target=prc.submit).start()\nn.knob('file').setValue(str(ipath))" +STARTLINE}
addUserKnob {22 create_read l "    Create Readnode    " -STARTLINE T "from tx.path import Path\nimport pyseq\n\nn = nuke.thisNode()\nsequence = n.knob('Sequence').evaluate()\nshot = n.knob('Shot').evaluate()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\niname = '_'.join(\[sequence, shot, version, element])\nipath = (vfolder / '..' / '..' / 'multipart' / iname / 'output' / (iname + '.%04d.exr')).normpath()\n\nsequences = pyseq.getSequences(str(ipath).replace('%04d', '*'))\nif len(sequences) > 0:\n    seq = sequences\[0]\n    with nuke.root():\n        nuke.createNode('Read', 'file \"%s %s\"' % (ipath, seq.format('%r')))"}
addUserKnob {22 delete_element l "    Delete Element    " -STARTLINE T "import threading\nfrom tx.path import Path\nimport mario\n\nn = nuke.thisNode()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\nprc = mario.processors.MCGVDeleteElement(cgversion=vfolder, element=element)\nthreading.Thread(target=prc.submit, kwargs=\{'paused' : True\}).start()"}
addUserKnob {26 line2 l "" +STARTLINE}
addUserKnob {6 primary_only l "primary only" t "disable all other layers to increase performance" +STARTLINE}
addUserKnob {4 cacheLocal l "cache locally" +HIDDEN M {always auto never}}
cacheLocal auto
addUserKnob {4 localizationPolicy l "localization policy" M {on "auto\tfrom auto-localize path" off}}
localizationPolicy off
addUserKnob {3 first l "frame range"}
first 1001
addUserKnob {4 before l "" -STARTLINE M {hold loop bounce black}}
addUserKnob {3 last l "" -STARTLINE}
last 1122
addUserKnob {4 after l "" -STARTLINE M {hold loop bounce black}}
addUserKnob {4 on_error l "missing frames" M {error black checkerboard "nearest frame" ""}}
on_error "nearest frame"
addUserKnob {22 reload l "reload all" t "press the reload button on all read nodes in the group" -STARTLINE T "n = nuke.thisNode()\n\nreadnodes = nuke.allNodes('Read', n)\nfor rn in readnodes:\n    rn.knob('reload').execute()"}
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_asset/crypto_asset_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read31
xpos -190
ypos 4041
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CA_FixOverscan
xpos -190
ypos 4141
}
set N2f175130 [stack 0]
push $N2f175130
push $N2f175130
push $N2f175130
push $N2f175130
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_material/crypto_material_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read30
xpos -190
ypos 3541
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CM_FixOverscan
xpos -190
ypos 3641
}
set N2f1a1520 [stack 0]
push $N2f1a1520
push $N2f1a1520
push $N2f1a1520
push $N2f1a1520
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_object/crypto_object_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read29
xpos -190
ypos 3041
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CO_FixOverscan
xpos -190
ypos 3141
}
set N2f1cd710 [stack 0]
push $N2f1cd710
push $N2f1cd710
push $N2f1cd710
push $N2f1cd710
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_9/id_9_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read28
xpos -190
ypos 2641
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_8/id_8_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read27
xpos -190
ypos 2541
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_7/id_7_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read26
xpos -190
ypos 2441
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_6/id_6_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read25
xpos -190
ypos 2341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_5/id_5_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read24
xpos -190
ypos 2241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_4/id_4_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read23
xpos -190
ypos 2141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_3/id_3_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read22
xpos -190
ypos 2041
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_2/id_2_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read21
xpos -190
ypos 1941
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_1/id_1_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read20
xpos -190
ypos 1841
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/Z/Z_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read18
xpos -190
ypos 1641
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/sss/sss_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read15
xpos -190
ypos 1341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/emission/emission_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read14
xpos -190
ypos 1241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/refraction/refraction_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read13
xpos -190
ypos 1141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/skin_sheen/skin_sheen_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read12
xpos -190
ypos 1041
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/skin_specular/skin_specular_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read11
xpos -190
ypos 941
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_specular_2/indirect_specular_2_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read10
xpos -190
ypos 841
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_specular_2/direct_specular_2_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read9
xpos -190
ypos 741
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/specular_color_2/specular_color_2_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read8
xpos -190
ypos 641
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_specular/indirect_specular_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read7
xpos -190
ypos 541
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_specular/direct_specular_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read6
xpos -190
ypos 441
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/specular_color/specular_color_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read5
xpos -190
ypos 341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_diffuse/indirect_diffuse_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read4
xpos -190
ypos 241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_diffuse/direct_diffuse_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read3
xpos -190
ypos 141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/diffuse_color/diffuse_color_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read2
xpos -190
ypos 41
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/primary/primary_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read1
xpos -190
ypos -59
postage_stamp false
}
set N2f499910 [stack 0]
push $N2f499910
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
from3 rgba.alpha
to3 rgba.alpha
bbox B
name Copy1
xpos -40
ypos 16
}
add_layer {diffuse_color diffuse_color.red diffuse_color.green diffuse_color.blue}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_color.red
from1 rgba.green
to1 diffuse_color.green
from2 rgba.blue
to2 diffuse_color.blue
bbox B
name Copy2
xpos -40
ypos 116
}
add_layer {diffuse_direct diffuse_direct.red diffuse_direct.green diffuse_direct.blue}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_direct.red
from1 rgba.green
to1 diffuse_direct.green
from2 rgba.blue
to2 diffuse_direct.blue
bbox B
name Copy3
xpos -40
ypos 216
}
add_layer {diffuse_indirect diffuse_indirect.red diffuse_indirect.green diffuse_indirect.blue}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_indirect.red
from1 rgba.green
to1 diffuse_indirect.green
from2 rgba.blue
to2 diffuse_indirect.blue
bbox B
name Copy4
xpos -40
ypos 316
}
add_layer {specular_color specular_color.red specular_color.green specular_color.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_color.red
from1 rgba.green
to1 specular_color.green
from2 rgba.blue
to2 specular_color.blue
bbox B
name Copy5
xpos -40
ypos 416
}
add_layer {specular_direct specular_direct.red specular_direct.green specular_direct.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_direct.red
from1 rgba.green
to1 specular_direct.green
from2 rgba.blue
to2 specular_direct.blue
bbox B
name Copy6
xpos -40
ypos 516
}
add_layer {specular_indirect specular_indirect.red specular_indirect.green specular_indirect.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_indirect.red
from1 rgba.green
to1 specular_indirect.green
from2 rgba.blue
to2 specular_indirect.blue
bbox B
name Copy7
xpos -40
ypos 616
}
add_layer {specular_color_2 specular_color_2.red specular_color_2.green specular_color_2.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_color_2.red
from1 rgba.green
to1 specular_color_2.green
from2 rgba.blue
to2 specular_color_2.blue
bbox B
name Copy8
xpos -40
ypos 716
}
add_layer {specular_direct2 specular_direct2.red specular_direct2.green specular_direct2.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_direct2.red
from1 rgba.green
to1 specular_direct2.green
from2 rgba.blue
to2 specular_direct2.blue
bbox B
name Copy9
xpos -40
ypos 816
}
add_layer {specular_indirect2 specular_indirect2.red specular_indirect2.green specular_indirect2.blue}
Copy {
inputs 2
from0 rgba.red
to0 specular_indirect2.red
from1 rgba.green
to1 specular_indirect2.green
from2 rgba.blue
to2 specular_indirect2.blue
bbox B
name Copy10
xpos -40
ypos 916
}
add_layer {skin_specular skin_specular.red skin_specular.green skin_specular.blue}
Copy {
inputs 2
from0 rgba.red
to0 skin_specular.red
from1 rgba.green
to1 skin_specular.green
from2 rgba.blue
to2 skin_specular.blue
bbox B
name Copy11
xpos -40
ypos 1016
}
add_layer {skin_sheen skin_sheen.red skin_sheen.green skin_sheen.blue}
Copy {
inputs 2
from0 rgba.red
to0 skin_sheen.red
from1 rgba.green
to1 skin_sheen.green
from2 rgba.blue
to2 skin_sheen.blue
bbox B
name Copy12
xpos -40
ypos 1116
}
add_layer {refraction refraction.red refraction.green refraction.blue refraction.alpha}
Copy {
inputs 2
from0 rgba.red
to0 refraction.red
from1 rgba.green
to1 refraction.green
from2 rgba.blue
to2 refraction.blue
bbox B
name Copy13
xpos -40
ypos 1216
}
add_layer {emission emission.red emission.green emission.blue emission.alpha}
Copy {
inputs 2
from0 rgba.red
to0 emission.red
from1 rgba.green
to1 emission.green
from2 rgba.blue
to2 emission.blue
bbox B
name Copy14
xpos -40
ypos 1316
}
add_layer {subsurface subsurface.red subsurface.green subsurface.blue}
Copy {
inputs 2
from0 rgba.red
to0 subsurface.red
from1 rgba.green
to1 subsurface.green
from2 rgba.blue
to2 subsurface.blue
bbox B
name Copy15
xpos -40
ypos 1416
}
set N2f5769c0 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/P/P_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read16
xpos -190
ypos 1441
postage_stamp false
}
Unpremult {
channels all
name Unpremult1
xpos -190
ypos 1467
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge1
xpos -190
ypos 1492
}
push $N2f5769c0
add_layer {P P.red P.green P.blue P.alpha none P.blue P.alpha}
Copy {
inputs 2
from0 rgba.red
to0 P.red
from1 rgba.green
to1 P.green
from2 rgba.blue
to2 P.blue
bbox B
name Copy16
xpos -40
ypos 1516
}
set N2f5b8f60 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/N/N_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read17
xpos -190
ypos 1541
postage_stamp false
}
Unpremult {
channels all
name Unpremult2
xpos -190
ypos 1567
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge2
xpos -190
ypos 1592
}
push $N2f5b8f60
add_layer {N N.red N.green N.blue N.alpha N.x N.y N.z N.r N.g N.b}
Copy {
inputs 2
from0 rgba.red
to0 N.red
from1 rgba.green
to1 N.green
from2 rgba.blue
to2 N.blue
bbox B
name Copy17
xpos -40
ypos 1616
}
Copy {
inputs 2
from0 rgba.red
to0 depth.Z
bbox B
name Copy18
xpos -40
ypos 1716
}
set N2f609480 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/pref/pref_Hela_Cape_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read19
xpos -190
ypos 1741
postage_stamp false
}
Unpremult {
channels all
name Unpremult3
xpos -190
ypos 1767
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge3
xpos -190
ypos 1792
}
push $N2f609480
add_layer {pref pref.red pref.green pref.blue}
Copy {
inputs 2
from0 rgba.red
to0 pref.red
from1 rgba.green
to1 pref.green
from2 rgba.blue
to2 pref.blue
bbox B
name Copy19
xpos -40
ypos 1816
}
add_layer {id_1 id_1.red id_1.green id_1.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_1.red
from1 rgba.green
to1 id_1.green
from2 rgba.blue
to2 id_1.blue
bbox B
name Copy20
xpos -40
ypos 1916
}
add_layer {id_2 id_2.red id_2.green id_2.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_2.red
from1 rgba.green
to1 id_2.green
from2 rgba.blue
to2 id_2.blue
bbox B
name Copy21
xpos -40
ypos 2016
}
add_layer {id_3 id_3.red id_3.green id_3.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_3.red
from1 rgba.green
to1 id_3.green
from2 rgba.blue
to2 id_3.blue
bbox B
name Copy22
xpos -40
ypos 2116
}
add_layer {id_4 id_4.red id_4.green id_4.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_4.red
from1 rgba.green
to1 id_4.green
from2 rgba.blue
to2 id_4.blue
bbox B
name Copy23
xpos -40
ypos 2216
}
add_layer {id_5 id_5.red id_5.green id_5.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_5.red
from1 rgba.green
to1 id_5.green
from2 rgba.blue
to2 id_5.blue
bbox B
name Copy24
xpos -40
ypos 2316
}
add_layer {id_6 id_6.red id_6.green id_6.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_6.red
from1 rgba.green
to1 id_6.green
from2 rgba.blue
to2 id_6.blue
bbox B
name Copy25
xpos -40
ypos 2416
}
add_layer {id_7 id_7.red id_7.green id_7.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_7.red
from1 rgba.green
to1 id_7.green
from2 rgba.blue
to2 id_7.blue
bbox B
name Copy26
xpos -40
ypos 2516
}
add_layer {id_8 id_8.red id_8.green id_8.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_8.red
from1 rgba.green
to1 id_8.green
from2 rgba.blue
to2 id_8.blue
bbox B
name Copy27
xpos -40
ypos 2616
}
add_layer {id_9 id_9.red id_9.green id_9.blue}
Copy {
inputs 2
from0 rgba.red
to0 id_9.red
from1 rgba.green
to1 id_9.green
from2 rgba.blue
to2 id_9.blue
bbox B
name Copy28
xpos -40
ypos 2716
}
add_layer {crypto_object crypto_object.red crypto_object.green crypto_object.blue}
add_layer {crypto_object00 crypto_object00.red crypto_object00.green crypto_object00.blue crypto_object00.alpha}
Copy {
inputs 2
from0 crypto_object.red
to0 crypto_object.red
from1 crypto_object.green
to1 crypto_object.green
from2 crypto_object.blue
to2 crypto_object.blue
from3 crypto_object00.alpha
to3 crypto_object00.alpha
bbox B
name Copy29
xpos -40
ypos 2816
}
add_layer {crypto_object01 crypto_object01.red crypto_object01.green crypto_object01.blue crypto_object01.alpha}
Copy {
inputs 2
from0 crypto_object00.blue
to0 crypto_object00.blue
from1 crypto_object00.green
to1 crypto_object00.green
from2 crypto_object00.red
to2 crypto_object00.red
from3 crypto_object01.alpha
to3 crypto_object01.alpha
bbox B
name Copy30
xpos -40
ypos 2916
}
add_layer {crypto_object02 crypto_object02.red crypto_object02.green crypto_object02.blue crypto_object02.alpha}
Copy {
inputs 2
from0 crypto_object01.blue
to0 crypto_object01.blue
from1 crypto_object01.green
to1 crypto_object01.green
from2 crypto_object01.red
to2 crypto_object01.red
from3 crypto_object02.alpha
to3 crypto_object02.alpha
bbox B
name Copy31
xpos -40
ypos 3016
}
Copy {
inputs 2
from0 crypto_object02.blue
to0 crypto_object02.blue
from1 crypto_object02.green
to1 crypto_object02.green
from2 crypto_object02.red
to2 crypto_object02.red
bbox B
name Copy32
xpos -40
ypos 3116
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData1
xpos -40
ypos 3216
}
add_layer {crypto_material crypto_material.red crypto_material.green crypto_material.blue}
add_layer {crypto_material00 crypto_material00.red crypto_material00.green crypto_material00.blue crypto_material00.alpha}
Copy {
inputs 2
from0 crypto_material.red
to0 crypto_material.red
from1 crypto_material.green
to1 crypto_material.green
from2 crypto_material.blue
to2 crypto_material.blue
from3 crypto_material00.alpha
to3 crypto_material00.alpha
bbox B
name Copy33
xpos -40
ypos 3316
}
add_layer {crypto_material01 crypto_material01.red crypto_material01.green crypto_material01.blue crypto_material01.alpha}
Copy {
inputs 2
from0 crypto_material00.blue
to0 crypto_material00.blue
from1 crypto_material00.green
to1 crypto_material00.green
from2 crypto_material00.red
to2 crypto_material00.red
from3 crypto_material01.alpha
to3 crypto_material01.alpha
bbox B
name Copy34
xpos -40
ypos 3416
}
add_layer {crypto_material02 crypto_material02.red crypto_material02.green crypto_material02.blue crypto_material02.alpha}
Copy {
inputs 2
from0 crypto_material01.blue
to0 crypto_material01.blue
from1 crypto_material01.green
to1 crypto_material01.green
from2 crypto_material01.red
to2 crypto_material01.red
from3 crypto_material02.alpha
to3 crypto_material02.alpha
bbox B
name Copy35
xpos -40
ypos 3516
}
Copy {
inputs 2
from0 crypto_material02.blue
to0 crypto_material02.blue
from1 crypto_material02.green
to1 crypto_material02.green
from2 crypto_material02.red
to2 crypto_material02.red
bbox B
name Copy36
xpos -40
ypos 3616
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData2
xpos -40
ypos 3716
}
add_layer {crypto_asset00 crypto_asset00.red crypto_asset00.green crypto_asset00.blue crypto_asset00.alpha}
Copy {
inputs 2
from0 crypto_asset00.red
to0 crypto_asset00.red
from1 crypto_asset00.green
to1 crypto_asset00.green
from2 crypto_asset00.blue
to2 crypto_asset00.blue
from3 crypto_asset00.alpha
to3 crypto_asset00.alpha
bbox B
name Copy37
xpos -40
ypos 3816
}
add_layer {crypto_asset crypto_asset.red crypto_asset.green crypto_asset.blue}
add_layer {crypto_asset01 crypto_asset01.red crypto_asset01.green crypto_asset01.blue crypto_asset01.alpha}
Copy {
inputs 2
from0 crypto_asset.red
to0 crypto_asset.red
from1 crypto_asset.green
to1 crypto_asset.green
from2 crypto_asset.blue
to2 crypto_asset.blue
from3 crypto_asset01.alpha
to3 crypto_asset01.alpha
bbox B
name Copy38
xpos -40
ypos 3916
}
add_layer {crypto_asset02 crypto_asset02.red crypto_asset02.green crypto_asset02.blue crypto_asset02.alpha}
Copy {
inputs 2
from0 crypto_asset01.blue
to0 crypto_asset01.blue
from1 crypto_asset01.green
to1 crypto_asset01.green
from2 crypto_asset01.red
to2 crypto_asset01.red
from3 crypto_asset02.alpha
to3 crypto_asset02.alpha
bbox B
name Copy39
xpos -40
ypos 4016
}
Copy {
inputs 2
from0 crypto_asset02.blue
to0 crypto_asset02.blue
from1 crypto_asset02.green
to1 crypto_asset02.green
from2 crypto_asset02.red
to2 crypto_asset02.red
bbox B
name Copy40
xpos -40
ypos 4116
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData3
xpos -40
ypos 4216
}
Output {
name Output1
xpos -40
ypos 4316
}
end_group
NoOp {
name Hela_Cape_Pass
help Render_Input_CG7
tile_color 0xffffffff
note_font_size 20
selected true
xpos -11452
ypos -21782
addUserKnob {20 User}
addUserKnob {26 "" -STARTLINE T "you probably wondering - why this weird white node is created? \nthe reason is that it is not healthy to creat the postage from Read node\nread node can be replaced and in this case your Postages will lose theyr parent,\nthat why you should create  your beloved Black postageStamp \nfrom this white sucker - just press F8 again :)"}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
NoOp {
name Hela_Cape_Pass-1
help Hela_Cape_Pass
tile_color 0xfa0
note_font_size 20
selected true
xpos -11424
ypos -21510
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T Hela_Cape_Pass}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Unpremult {
name Unpremult5
selected true
xpos -11424
ypos -21271
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
selected true
xpos -11424
ypos -20954
}
Premult {
name Premult6
selected true
xpos -11424
ypos -20916
}
Dot {
name Dot30
selected true
xpos -11390
ypos -20870
}
push $Ne643c30
Group {
name ErodeMini
tile_color 0xe58700ff
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold"
note_font_size 12
note_font_color 0xe58700ff
selected true
xpos -11087
ypos -21056
addUserKnob {20 User}
addUserKnob {6 Invertinput l "Invert input         " +STARTLINE}
addUserKnob {41 channels -STARTLINE T FilterErode1.channels}
addUserKnob {26 ERODE}
addUserKnob {41 size l "" +STARTLINE T FilterErode1.size}
addUserKnob {41 filter -STARTLINE T FilterErode1.filter}
addUserKnob {6 miniErode l "" +STARTLINE +STARTLINE}
addUserKnob {26 MINIERODE l "MINI ERODE" -STARTLINE}
addUserKnob {7 miniErodeSize l "" -STARTLINE R 0 10}
addUserKnob {26 BLUR}
addUserKnob {41 size_1 l "" +STARTLINE T Blur1.size}
addUserKnob {26 ""}
addUserKnob {7 mix}
mix 1
addUserKnob {26 ""}
addUserKnob {6 cutIn l "use a mask as a cut in" +STARTLINE}
addUserKnob {41 size_2 l "           blur cut in" -STARTLINE T Blur2.size}
}
Input {
inputs 0
name Mask
xpos -198
ypos 103
number 1
}
Dot {
name Dot15
xpos -164
ypos 218
}
set Nb8908fc0 [stack 0]
Dot {
name Dot14
xpos -164
ypos 285
}
set Na4fb8c90 [stack 0]
Blur {
channels rgba
name Blur2
selected true
xpos -198
ypos 584
}
Dot {
name Dot13
xpos -164
ypos 866
}
push $Na4fb8c90
Shuffle {
red white
green white
blue white
alpha white
name Shuffle1
xpos -292
ypos 281
}
push $Nb8908fc0
Shuffle {
alpha white
name Shuffle2
xpos -413
ypos 214
disable {{"\[exists parent.input1] "}}
}
Switch {
inputs 2
which {{parent.cutIn}}
name Switch1
xpos -413
ypos 281
}
Dot {
name Dot8
xpos -379
ypos 353
}
set Nb8fb7950 [stack 0]
Dot {
name Dot3
xpos -379
ypos 619
}
set Nb8fbc340 [stack 0]
Dot {
name Dot9
xpos -379
ypos 702
}
push $Nb8fbc340
push $Nb8fb7950
Input {
inputs 0
name Input1
xpos -528
ypos 84
}
Dot {
name Dot10
xpos -494
ypos 110
}
set Nb8e71430 [stack 0]
Invert {
channels rgba
mix {{parent.Invertinput}}
name Invert4
xpos -528
ypos 171
}
Dot {
name Dot5
xpos -494
ypos 236
}
set Nf998b50 [stack 0]
Dot {
name Dot6
xpos -705
ypos 236
}
FilterErode {
channels rgba
size {{parent.parent.ErodeMini1.FilterErode1.size}}
name FilterErode1
xpos -739
ypos 281
}
Dot {
name Dot7
xpos -705
ypos 353
}
push $Nf998b50
Merge2 {
inputs 2+1
operation copy
name Merge1
xpos -528
ypos 349
}
Dot {
name Dot1
xpos -494
ypos 432
}
set Nb8925680 [stack 0]
Dot {
name Dot4
xpos -696
ypos 432
}
Reformat {
type scale
scale 5
name Reformat11
xpos -730
ypos 468
}
FilterErode {
channels rgba
size {{parent.miniErodeSize}}
name FilterErode6
xpos -730
ypos 494
}
Reformat {
type scale
scale {{1/parent.Reformat11.scale}}
name Reformat12
xpos -730
ypos 520
}
Dot {
name Dot2
xpos -696
ypos 619
}
push $Nb8925680
Merge2 {
inputs 2+1
operation copy
name Merge2
xpos -528
ypos 615
disable {{!parent.miniErode}}
}
Blur {
inputs 1+1
channels rgba
name Blur1
xpos -528
ypos 698
}
push $Nb8e71430
Dot {
name Dot11
xpos -872
ypos 110
}
Dot {
name Dot12
xpos -872
ypos 804
}
Merge2 {
inputs 2
operation copy
mix {{parent.mix}}
name mix
xpos -528
ypos 800
}
Merge2 {
inputs 2
operation mask
mix {{parent.cutIn}}
name Merge3
xpos -528
ypos 862
}
Output {
name Output1
xpos -528
ypos 943
}
end_group
push $N3a015a30
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle2
tile_color 0xffffffff
selected true
xpos -10889
ypos -21152
}
Blur {
inputs 1+1
channels rgba
size {{parent.Blur1.size}}
name Blur2
label "\[value size]"
selected true
xpos -10889
ypos -21062
}
Dot {
name Dot29
selected true
xpos -10855
ypos -20938
}
Group {
inputs 0
name Render_Input_CG6
onCreate "n = nuke.thisNode()\n\nif nuke.env\['NukeVersionMajor'] > 9:\n    n.knob('localizationPolicy').setVisible(True)\n    p = nuke.toNode('preferences')\n    n.knob('localizationPolicy').setValue(p.knob('LocalizationPolicyDefault').value())\n    \n    n.knob('cacheLocal').setVisible(False)\nelse:\n    n.knob('localizationPolicy').setVisible(False)\n    n.knob('cacheLocal').setVisible(True)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkname = k.name()\npublished = n.knob('published').value()\n\nif kname in \['cacheLocal', 'localizationPolicy', 'first', 'last', 'before', 'after', 'on_error']:\n    val = k.value()\n    if kname in \['first', 'last']:\n        val = int(val)\n    readnodes = nuke.allNodes('Read', n)\n    for rn in readnodes:\n        rn.knob(kname).setValue(val)\n\nelif kname == 'primary_only':\n    val = k.value()\n    cpnodes = nuke.allNodes('Copy', n)\n    for cpn in cpnodes:\n        cpn.knob('disable').setValue(val)\n        \nelif kname == 'versions':\n    version = k.value()\n    from tx.path import Path\n    from tx_compositing.layers import CGVersion\n    cgv = CGVersion(Path(n.knob('render_folder').evaluate()) / version)\n    element = n.knob('element').value()\n    if published:\n        elements = cgv.published_elements()\n    else:\n        elements = cgv.elements.keys()\n    elements.sort()\n    n.knob('element').setValues(elements)\n    if element in elements:\n        n.knob('element').setValue(element)\n    else:\n        n.knob('element').setValue(elements\[0])"
tile_color 0x72a8c3ff
label "\[value versions]\n\[value element]"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 17
note_font_color 0xffffffff
selected true
xpos -10851
ypos -21956
addUserKnob {20 tab1 l CG}
addUserKnob {1 Sequence}
Sequence "\[value TrixterShotData.sequence]"
addUserKnob {1 Shot -STARTLINE}
Shot "\[value TrixterShotData.shot]"
addUserKnob {1 render_folder l INVISIBLE +INVISIBLE}
render_folder "\[value TrixterShotData.projectpath]/seq/\[value Sequence]/\[value Shot]/rendering/images/versions"
addUserKnob {26 ""}
addUserKnob {6 published l "published only" t "show only versions with published elements" -STARTLINE}
addUserKnob {4 versions l version M {release_environment_v038 release_v021 release_v028 release_v042 release_v043 release_v044 release_v047 release_v048 release_v049 release_v071 release_v073 release_v074 release_v075 release_v077 release_v078 release_v079 release_v080 release_v081 release_v082 release_v083 release_v084 release_v085 release_v086 release_v087 release_v088 release_v089 release_v090 release_v091 release_v093}}
versions release_v093
addUserKnob {22 update_versions l update -STARTLINE T "import os\nfrom tx_compositing.layers import CGVersion\n\nn = nuke.thisNode()\npublished = n.knob('published').value()\nversions = \[]\n\nrender_folder = n.knob('render_folder').evaluate()\nfiles = os.listdir(render_folder)\nfor f in files:\n    if os.path.isdir(os.path.join(render_folder, f)):\n        if os.path.exists(os.path.join(render_folder, f, 'primary')):\n            cgv = CGVersion(os.path.join(render_folder, f))\n            if not published or cgv.has_publishes():\n                versions.append(f)\n\nversions.sort()\nn.knob('versions').setValues(versions)\nif len(versions) == 0:\n    n.knob('element').setValues(\[])\n\nelse:\n    maxversion = max(versions)\n    n.knob('versions').setValue(maxversion)\n    \n    cgv = CGVersion(os.path.join(render_folder, maxversion))\n    element = n.knob('element').value()\n    if published:\n        elements = cgv.published_elements()\n    else:\n        elements = cgv.elements.keys()\n    elements.sort()\n    n.knob('element').setValues(elements)\n    if element in elements:\n        n.knob('element').setValue(element)\n    else:\n        n.knob('element').setValue(elements\[0])"}
addUserKnob {4 element M {Hela_Cape_Pass Hela_Suit_Pass matte}}
element Hela_Suit_Pass
addUserKnob {22 load_layers l "        L O A D   L A Y E R S        " T "from tx.path import Path\nfrom tx_compositing.layers import CGVersion\n\nn = nuke.thisNode()\n\nvfolder = Path(n.knob('render_folder').evaluate()) / n.knob('versions').value()\ncgv = CGVersion(vfolder)\n\nelement = n.knob('element').value()\nwith n:\n    outp = nuke.toNode('Output1')\n    nodes = nuke.allNodes()\n    nodes.pop(nodes.index(outp))\n    for node in nodes: nuke.delete(node)\n\n    ln = cgv.create_nodes(element)\n    if ln is not None:\n        outp.setInput(0, ln)\n        outp.setXYpos(ln.xpos(), ln.ypos()+100)\n    \n        readnodes = nuke.allNodes('Read')\n        for k in \['cacheLocal', 'before', 'after', 'on_error']:\n            val = n.knob(k).value()\n            for rn in readnodes:\n                rn.knob(k).setValue(val)\n    \n        cpnodes = nuke.allNodes('Copy')\n        val = n.knob('primary_only').value()\n        for cpn in cpnodes:\n            cpn.knob('disable').setValue(val)\n    \n    else:\n        rn = None\n\ncgv.create_deep_nodes(element)\n\nif rn is not None:\n    for k in \['first', 'last']:\n        n.knob(k).setValue(rn.knob(k).value())\n\n    n.knob('file').setValue(cgv.elements\[element]\['layers']\[0].seq_string().rsplit(' ', 1)\[0])\nelse:\n    n.knob('file').setValue('')" +STARTLINE}
addUserKnob {26 line1 l "" +STARTLINE}
addUserKnob {1 file l INVISIBLE +INVISIBLE}
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/primary/primary_Hela_Suit_Pass.#.exr
addUserKnob {22 create_mp l "    Create Multipart    " T "import threading\nfrom tx.path import Path\nimport mario\n\nn = nuke.thisNode()\nsequence = n.knob('Sequence').evaluate()\nshot = n.knob('Shot').evaluate()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\niname = '_'.join(\[sequence, shot, version, element])\nipath = (vfolder / '..' / '..' / 'multipart' / iname / 'output' / (iname + '.%04d.exr')).normpath()\n\nprc = mario.processors.MCGVCreateMultipartSequence(cgversion=vfolder, element=element, image=ipath)\nthreading.Thread(target=prc.submit).start()\nn.knob('file').setValue(str(ipath))" +STARTLINE}
addUserKnob {22 create_read l "    Create Readnode    " -STARTLINE T "from tx.path import Path\nimport pyseq\n\nn = nuke.thisNode()\nsequence = n.knob('Sequence').evaluate()\nshot = n.knob('Shot').evaluate()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\niname = '_'.join(\[sequence, shot, version, element])\nipath = (vfolder / '..' / '..' / 'multipart' / iname / 'output' / (iname + '.%04d.exr')).normpath()\n\nsequences = pyseq.getSequences(str(ipath).replace('%04d', '*'))\nif len(sequences) > 0:\n    seq = sequences\[0]\n    with nuke.root():\n        nuke.createNode('Read', 'file \"%s %s\"' % (ipath, seq.format('%r')))"}
addUserKnob {22 delete_element l "    Delete Element    " -STARTLINE T "import threading\nfrom tx.path import Path\nimport mario\n\nn = nuke.thisNode()\nversion = n.knob('versions').value()\nvfolder = Path(n.knob('render_folder').evaluate()) / version\nelement = n.knob('element').value()\n\nprc = mario.processors.MCGVDeleteElement(cgversion=vfolder, element=element)\nthreading.Thread(target=prc.submit, kwargs=\{'paused' : True\}).start()"}
addUserKnob {26 line2 l "" +STARTLINE}
addUserKnob {6 primary_only l "primary only" t "disable all other layers to increase performance" +STARTLINE}
addUserKnob {4 cacheLocal l "cache locally" +HIDDEN M {always auto never}}
cacheLocal auto
addUserKnob {4 localizationPolicy l "localization policy" M {on "auto\tfrom auto-localize path" off}}
localizationPolicy off
addUserKnob {3 first l "frame range"}
first 1001
addUserKnob {4 before l "" -STARTLINE M {hold loop bounce black}}
addUserKnob {3 last l "" -STARTLINE}
last 1122
addUserKnob {4 after l "" -STARTLINE M {hold loop bounce black}}
addUserKnob {4 on_error l "missing frames" M {error black checkerboard "nearest frame" ""}}
on_error "nearest frame"
addUserKnob {22 reload l "reload all" t "press the reload button on all read nodes in the group" -STARTLINE T "n = nuke.thisNode()\n\nreadnodes = nuke.allNodes('Read', n)\nfor rn in readnodes:\n    rn.knob('reload').execute()"}
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_asset/crypto_asset_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read39
xpos -190
ypos 4841
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CA_FixOverscan
xpos -190
ypos 4941
}
set N10b55400 [stack 0]
push $N10b55400
push $N10b55400
push $N10b55400
push $N10b55400
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_material/crypto_material_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read38
xpos -190
ypos 4341
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CM_FixOverscan
xpos -190
ypos 4441
}
set N10b818d0 [stack 0]
push $N10b818d0
push $N10b818d0
push $N10b818d0
push $N10b818d0
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/crypto_object/crypto_object_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read37
xpos -190
ypos 3841
postage_stamp false
}
Reformat {
type "to box"
box_width {{Read1.width}}
box_height {{Read1.height}}
box_fixed true
box_pixel_aspect {{Read1.pixel_aspect}}
resize none
pbb true
name CO_FixOverscan
xpos -190
ypos 3941
}
set N10bad7f0 [stack 0]
push $N10bad7f0
push $N10bad7f0
push $N10bad7f0
push $N10bad7f0
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_8/light_group_8_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read36
xpos -190
ypos 3441
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_7/light_group_7_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read35
xpos -190
ypos 3341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_6/light_group_6_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read34
xpos -190
ypos 3241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_5/light_group_5_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read33
xpos -190
ypos 3141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_4/light_group_4_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read32
xpos -190
ypos 3041
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_3/light_group_3_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read31
xpos -190
ypos 2941
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_2/light_group_2_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read30
xpos -190
ypos 2841
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/light_group_1/light_group_1_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read29
xpos -190
ypos 2741
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_9/id_9_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read28
xpos -190
ypos 2641
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_8/id_8_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read27
xpos -190
ypos 2541
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_7/id_7_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read26
xpos -190
ypos 2441
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_6/id_6_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read25
xpos -190
ypos 2341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_5/id_5_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read24
xpos -190
ypos 2241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_4/id_4_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read23
xpos -190
ypos 2141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_3/id_3_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read22
xpos -190
ypos 2041
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_2/id_2_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read21
xpos -190
ypos 1941
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/id_1/id_1_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read20
xpos -190
ypos 1841
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/Z/Z_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read17
xpos -190
ypos 1541
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/P/P_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read15
xpos -190
ypos 1341
postage_stamp false
}
set N10dcaae0 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/sss/sss_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read14
xpos -190
ypos 1241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/emission/emission_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read13
xpos -190
ypos 1141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/refraction/refraction_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read12
xpos -190
ypos 1041
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_transmission/direct_transmission_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read11
xpos -190
ypos 941
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_specular_2/indirect_specular_2_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read10
xpos -190
ypos 841
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_specular_2/direct_specular_2_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read9
xpos -190
ypos 741
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/specular_color_2/specular_color_2_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read8
xpos -190
ypos 641
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_specular/indirect_specular_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read7
xpos -190
ypos 541
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_specular/direct_specular_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read6
xpos -190
ypos 441
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/specular_color/specular_color_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read5
xpos -190
ypos 341
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/indirect_diffuse/indirect_diffuse_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read4
xpos -190
ypos 241
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/direct_diffuse/direct_diffuse_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read3
xpos -190
ypos 141
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/diffuse_color/diffuse_color_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read2
xpos -190
ypos 41
postage_stamp false
}
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/primary/primary_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read1
xpos -190
ypos -59
postage_stamp false
}
set N10f64160 [stack 0]
push $N10f64160
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
from3 rgba.alpha
to3 rgba.alpha
bbox B
name Copy1
xpos -40
ypos 16
}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_color.red
from1 rgba.green
to1 diffuse_color.green
from2 rgba.blue
to2 diffuse_color.blue
bbox B
name Copy2
xpos -40
ypos 116
}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_direct.red
from1 rgba.green
to1 diffuse_direct.green
from2 rgba.blue
to2 diffuse_direct.blue
bbox B
name Copy3
xpos -40
ypos 216
}
Copy {
inputs 2
from0 rgba.red
to0 diffuse_indirect.red
from1 rgba.green
to1 diffuse_indirect.green
from2 rgba.blue
to2 diffuse_indirect.blue
bbox B
name Copy4
xpos -40
ypos 316
}
Copy {
inputs 2
from0 rgba.red
to0 specular_color.red
from1 rgba.green
to1 specular_color.green
from2 rgba.blue
to2 specular_color.blue
bbox B
name Copy5
xpos -40
ypos 416
}
Copy {
inputs 2
from0 rgba.red
to0 specular_direct.red
from1 rgba.green
to1 specular_direct.green
from2 rgba.blue
to2 specular_direct.blue
bbox B
name Copy6
xpos -40
ypos 516
}
Copy {
inputs 2
from0 rgba.red
to0 specular_indirect.red
from1 rgba.green
to1 specular_indirect.green
from2 rgba.blue
to2 specular_indirect.blue
bbox B
name Copy7
xpos -40
ypos 616
}
Copy {
inputs 2
from0 rgba.red
to0 specular_color_2.red
from1 rgba.green
to1 specular_color_2.green
from2 rgba.blue
to2 specular_color_2.blue
bbox B
name Copy8
xpos -40
ypos 716
}
Copy {
inputs 2
from0 rgba.red
to0 specular_direct2.red
from1 rgba.green
to1 specular_direct2.green
from2 rgba.blue
to2 specular_direct2.blue
bbox B
name Copy9
xpos -40
ypos 816
}
Copy {
inputs 2
from0 rgba.red
to0 specular_indirect2.red
from1 rgba.green
to1 specular_indirect2.green
from2 rgba.blue
to2 specular_indirect2.blue
bbox B
name Copy10
xpos -40
ypos 916
}
add_layer {transmission_direct transmission_direct.red transmission_direct.green transmission_direct.blue}
Copy {
inputs 2
from0 rgba.red
to0 transmission_direct.red
from1 rgba.green
to1 transmission_direct.green
from2 rgba.blue
to2 transmission_direct.blue
bbox B
name Copy11
xpos -40
ypos 1016
}
Copy {
inputs 2
from0 rgba.red
to0 refraction.red
from1 rgba.green
to1 refraction.green
from2 rgba.blue
to2 refraction.blue
bbox B
name Copy12
xpos -40
ypos 1116
}
Copy {
inputs 2
from0 rgba.red
to0 emission.red
from1 rgba.green
to1 emission.green
from2 rgba.blue
to2 emission.blue
bbox B
name Copy13
xpos -40
ypos 1216
}
Copy {
inputs 2
from0 rgba.red
to0 subsurface.red
from1 rgba.green
to1 subsurface.green
from2 rgba.blue
to2 subsurface.blue
bbox B
name Copy14
xpos -40
ypos 1316
}
set N110330d0 [stack 0]
Copy {
inputs 2
from0 rgba.red
to0 P.red
from1 rgba.green
to1 P.green
from2 rgba.blue
to2 P.blue
bbox B
name Copy15
xpos -40
ypos 1416
}
set N11040f60 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/N/N_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read16
xpos -190
ypos 1441
postage_stamp false
}
Unpremult {
channels all
name Unpremult2
xpos -190
ypos 1467
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge2
xpos -190
ypos 1492
}
push $N11040f60
Copy {
inputs 2
from0 rgba.red
to0 N.red
from1 rgba.green
to1 N.green
from2 rgba.blue
to2 N.blue
bbox B
name Copy16
xpos -40
ypos 1516
}
Copy {
inputs 2
from0 rgba.red
to0 depth.Z
bbox B
name Copy17
xpos -40
ypos 1616
}
set N110912a0 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/pref/pref_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read18
xpos -190
ypos 1641
postage_stamp false
}
Unpremult {
channels all
name Unpremult3
xpos -190
ypos 1667
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge3
xpos -190
ypos 1692
}
push $N110912a0
Copy {
inputs 2
from0 rgba.red
to0 pref.red
from1 rgba.green
to1 pref.green
from2 rgba.blue
to2 pref.blue
bbox B
name Copy18
xpos -40
ypos 1716
}
set N110d3900 [stack 0]
Read {
inputs 0
file /corky/projects/CRE_343227/seq/FTR/3060/rendering/images/versions/release_v093/motionvector/motionvector_Hela_Suit_Pass.#.exr
localizationPolicy off
format "2624 1240 0 0 2624 1240 1 CRE"
first 1001
last 1122
origfirst 1001
origlast 1122
origset true
on_error "nearest frame"
colorspace linear
raw true
name Read19
xpos -190
ypos 1741
postage_stamp false
}
Unpremult {
channels all
name Unpremult4
xpos -190
ypos 1767
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge4
xpos -190
ypos 1792
}
push $N110d3900
add_layer {motionvector motionvector.red motionvector.green motionvector.blue motionvector.alpha}
Copy {
inputs 2
from0 rgba.red
to0 motionvector.red
from1 rgba.green
to1 motionvector.green
from2 rgba.blue
to2 motionvector.blue
bbox B
name Copy19
xpos -40
ypos 1816
}
Copy {
inputs 2
from0 rgba.red
to0 id_1.red
from1 rgba.green
to1 id_1.green
from2 rgba.blue
to2 id_1.blue
bbox B
name Copy20
xpos -40
ypos 1916
}
Copy {
inputs 2
from0 rgba.red
to0 id_2.red
from1 rgba.green
to1 id_2.green
from2 rgba.blue
to2 id_2.blue
bbox B
name Copy21
xpos -40
ypos 2016
}
Copy {
inputs 2
from0 rgba.red
to0 id_3.red
from1 rgba.green
to1 id_3.green
from2 rgba.blue
to2 id_3.blue
bbox B
name Copy22
xpos -40
ypos 2116
}
Copy {
inputs 2
from0 rgba.red
to0 id_4.red
from1 rgba.green
to1 id_4.green
from2 rgba.blue
to2 id_4.blue
bbox B
name Copy23
xpos -40
ypos 2216
}
Copy {
inputs 2
from0 rgba.red
to0 id_5.red
from1 rgba.green
to1 id_5.green
from2 rgba.blue
to2 id_5.blue
bbox B
name Copy24
xpos -40
ypos 2316
}
Copy {
inputs 2
from0 rgba.red
to0 id_6.red
from1 rgba.green
to1 id_6.green
from2 rgba.blue
to2 id_6.blue
bbox B
name Copy25
xpos -40
ypos 2416
}
Copy {
inputs 2
from0 rgba.red
to0 id_7.red
from1 rgba.green
to1 id_7.green
from2 rgba.blue
to2 id_7.blue
bbox B
name Copy26
xpos -40
ypos 2516
}
Copy {
inputs 2
from0 rgba.red
to0 id_8.red
from1 rgba.green
to1 id_8.green
from2 rgba.blue
to2 id_8.blue
bbox B
name Copy27
xpos -40
ypos 2616
}
Copy {
inputs 2
from0 rgba.red
to0 id_9.red
from1 rgba.green
to1 id_9.green
from2 rgba.blue
to2 id_9.blue
bbox B
name Copy28
xpos -40
ypos 2716
}
add_layer {light_group_1 light_group_1.red light_group_1.green light_group_1.blue}
Copy {
inputs 2
from0 rgba.red
to0 light_group_1.red
from1 rgba.green
to1 light_group_1.green
from2 rgba.blue
to2 light_group_1.blue
bbox B
name Copy29
xpos -40
ypos 2816
}
add_layer {light_group_2 light_group_2.red light_group_2.green light_group_2.blue}
Copy {
inputs 2
from0 rgba.red
to0 light_group_2.red
from1 rgba.green
to1 light_group_2.green
from2 rgba.blue
to2 light_group_2.blue
bbox B
name Copy30
xpos -40
ypos 2916
}
add_layer {light_group_3 light_group_3.red light_group_3.green light_group_3.blue}
Copy {
inputs 2
from0 rgba.red
to0 light_group_3.red
from1 rgba.green
to1 light_group_3.green
from2 rgba.blue
to2 light_group_3.blue
bbox B
name Copy31
xpos -40
ypos 3016
}
add_layer {light_group_4 light_group_4.red light_group_4.green light_group_4.blue light_group_4.alpha}
Copy {
inputs 2
from0 rgba.red
to0 light_group_4.red
from1 rgba.green
to1 light_group_4.green
from2 rgba.blue
to2 light_group_4.blue
bbox B
name Copy32
xpos -40
ypos 3116
}
add_layer {light_group_5 light_group_5.red light_group_5.green light_group_5.blue light_group_5.alpha}
Copy {
inputs 2
from0 rgba.red
to0 light_group_5.red
from1 rgba.green
to1 light_group_5.green
from2 rgba.blue
to2 light_group_5.blue
bbox B
name Copy33
xpos -40
ypos 3216
}
add_layer {light_group_6 light_group_6.red light_group_6.green light_group_6.blue light_group_6.alpha}
Copy {
inputs 2
from0 rgba.red
to0 light_group_6.red
from1 rgba.green
to1 light_group_6.green
from2 rgba.blue
to2 light_group_6.blue
bbox B
name Copy34
xpos -40
ypos 3316
}
add_layer {light_group_7 light_group_7.red light_group_7.green light_group_7.blue light_group_7.alpha}
Copy {
inputs 2
from0 rgba.red
to0 light_group_7.red
from1 rgba.green
to1 light_group_7.green
from2 rgba.blue
to2 light_group_7.blue
bbox B
name Copy35
xpos -40
ypos 3416
}
add_layer {light_group_8 light_group_8.red light_group_8.green light_group_8.blue light_group_8.alpha}
Copy {
inputs 2
from0 rgba.red
to0 light_group_8.red
from1 rgba.green
to1 light_group_8.green
from2 rgba.blue
to2 light_group_8.blue
bbox B
name Copy36
xpos -40
ypos 3516
}
Copy {
inputs 2
from0 crypto_object.red
to0 crypto_object.red
from1 crypto_object.green
to1 crypto_object.green
from2 crypto_object.blue
to2 crypto_object.blue
from3 crypto_object00.alpha
to3 crypto_object00.alpha
bbox B
name Copy37
xpos -40
ypos 3616
}
Copy {
inputs 2
from0 crypto_object00.blue
to0 crypto_object00.blue
from1 crypto_object00.green
to1 crypto_object00.green
from2 crypto_object00.red
to2 crypto_object00.red
from3 crypto_object01.alpha
to3 crypto_object01.alpha
bbox B
name Copy38
xpos -40
ypos 3716
}
Copy {
inputs 2
from0 crypto_object01.blue
to0 crypto_object01.blue
from1 crypto_object01.green
to1 crypto_object01.green
from2 crypto_object01.red
to2 crypto_object01.red
from3 crypto_object02.alpha
to3 crypto_object02.alpha
bbox B
name Copy39
xpos -40
ypos 3816
}
Copy {
inputs 2
from0 crypto_object02.blue
to0 crypto_object02.blue
from1 crypto_object02.green
to1 crypto_object02.green
from2 crypto_object02.red
to2 crypto_object02.red
bbox B
name Copy40
xpos -40
ypos 3916
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData1
xpos -40
ypos 4016
}
Copy {
inputs 2
from0 crypto_material.red
to0 crypto_material.red
from1 crypto_material.green
to1 crypto_material.green
from2 crypto_material.blue
to2 crypto_material.blue
from3 crypto_material00.alpha
to3 crypto_material00.alpha
bbox B
name Copy41
xpos -40
ypos 4116
}
Copy {
inputs 2
from0 crypto_material00.blue
to0 crypto_material00.blue
from1 crypto_material00.green
to1 crypto_material00.green
from2 crypto_material00.red
to2 crypto_material00.red
from3 crypto_material01.alpha
to3 crypto_material01.alpha
bbox B
name Copy42
xpos -40
ypos 4216
}
Copy {
inputs 2
from0 crypto_material01.blue
to0 crypto_material01.blue
from1 crypto_material01.green
to1 crypto_material01.green
from2 crypto_material01.red
to2 crypto_material01.red
from3 crypto_material02.alpha
to3 crypto_material02.alpha
bbox B
name Copy43
xpos -40
ypos 4316
}
Copy {
inputs 2
from0 crypto_material02.blue
to0 crypto_material02.blue
from1 crypto_material02.green
to1 crypto_material02.green
from2 crypto_material02.red
to2 crypto_material02.red
bbox B
name Copy44
xpos -40
ypos 4416
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData2
xpos -40
ypos 4516
}
Copy {
inputs 2
from0 crypto_asset00.red
to0 crypto_asset00.red
from1 crypto_asset00.green
to1 crypto_asset00.green
from2 crypto_asset00.blue
to2 crypto_asset00.blue
from3 crypto_asset00.alpha
to3 crypto_asset00.alpha
bbox B
name Copy45
xpos -40
ypos 4616
}
Copy {
inputs 2
from0 crypto_asset.red
to0 crypto_asset.red
from1 crypto_asset.green
to1 crypto_asset.green
from2 crypto_asset.blue
to2 crypto_asset.blue
from3 crypto_asset01.alpha
to3 crypto_asset01.alpha
bbox B
name Copy46
xpos -40
ypos 4716
}
Copy {
inputs 2
from0 crypto_asset01.blue
to0 crypto_asset01.blue
from1 crypto_asset01.green
to1 crypto_asset01.green
from2 crypto_asset01.red
to2 crypto_asset01.red
from3 crypto_asset02.alpha
to3 crypto_asset02.alpha
bbox B
name Copy47
xpos -40
ypos 4816
}
Copy {
inputs 2
from0 crypto_asset02.blue
to0 crypto_asset02.blue
from1 crypto_asset02.green
to1 crypto_asset02.green
from2 crypto_asset02.red
to2 crypto_asset02.red
bbox B
name Copy48
xpos -40
ypos 4916
}
CopyMetaData {
inputs 2
metadatafilter crypto
metadatafilterMode "keys only"
name CopyMetaData3
xpos -40
ypos 5016
}
Output {
name Output1
xpos -40
ypos 5116
}
push $N110330d0
push $N10dcaae0
Unpremult {
channels all
name Unpremult1
xpos -190
ypos 1367
}
Merge2 {
inputs 2
operation mask
also_merge all
name Merge1
xpos -190
ypos 1392
}
end_group
NoOp {
name HELA
help Render_Input_CG4
tile_color 0xffffffff
note_font_size 20
selected true
xpos -10851
ypos -21768
addUserKnob {20 User}
addUserKnob {26 "" -STARTLINE T "you probably wondering - why this weird white node is created? \nthe reason is that it is not healthy to creat the postage from Read node\nread node can be replaced and in this case your Postages will lose theyr parent,\nthat why you should create  your beloved Black postageStamp \nfrom this white sucker - just press F8 again :)"}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" -STARTLINE T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
NoOp {
name HELA-1
help HELA
tile_color 0xfa0
note_font_size 20
selected true
xpos -10689
ypos -21517
hide_input true
addUserKnob {20 User}
addUserKnob {26 connect l "connected to :" T HELA}
addUserKnob {22 show l "show source" -STARTLINE T "\na = nuke.thisNode()\na\['hide_input'].setValue(0)\ndep = a.dependencies(nuke.INPUTS)\[0]\nif dep.Class()==\"Dot\":\n    dep = dep.dependencies(nuke.INPUTS)\[0]\na\['hide_input'].setValue(1)\nnuke.show(dep)\n"}
addUserKnob {22 selectSimilar l "select similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        y=one\['connect'].value()\n        if y==c:\n            one.setSelected(True)"}
addUserKnob {22 reconnectSimilar l "reconnect similar" -STARTLINE T "\na = nuke.thisNode()\nc=a\['connect'].value()\n\nb=nuke.allNodes(\"NoOp\")\nfor one in b:\n    if \"connect\" in one.knobs():\n        if one\['connect'].value()==c:\n            one.setInput(0,nuke.toNode(c))"}
addUserKnob {22 togglesource l "<font color='White'><b>toggle source" -STARTLINE T "\na = nuke.thisNode()\nb = a\['showsource'].value()\n\n\nif b == 1:\n    a\['hide_input'].setValue(0)\n\n    dep = a.dependencies(nuke.INPUTS)\[0]\n    if dep.Class()==\"Dot\":\n        dep = dep.dependencies(nuke.INPUTS)\[0]\n    a\['hide_input'].setValue(1)\n    xC = dep.xpos() + dep.screenWidth()/2\n    yC = dep.ypos() + dep.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(0)\n    nuke.show(a,True)\n    nuke.show(dep)\n\n\nelif b==0:\n    a = nuke.thisNode()\n    xC = a.xpos() + a.screenWidth()/2\n    yC = a.ypos() + a.screenHeight()/2\n    nuke.zoom( 1, \[ xC, yC ])\n    a\['showsource'].setValue(1)"}
addUserKnob {22 reconnect -STARTLINE T "a = nuke.selectedNode()\nname=a\['help'].value()\nname = nuke.toNode(name)\na.setInput(0, name)"}
addUserKnob {6 showsource -STARTLINE +HIDDEN}
addUserKnob {26 "" T "<font color='DimGray'><b> &copy; Alexey Kuchinski"}
}
Unpremult {
name Unpremult3
selected true
xpos -10689
ypos -21273
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy2
selected true
xpos -10689
ypos -20948
}
Premult {
name Premult4
selected true
xpos -10689
ypos -20910
}
Merge2 {
inputs 2
operation disjoint-over
name Merge32
selected true
xpos -10689
ypos -20874
}
CheckerBoard2 {
inputs 0
name CheckerBoard2
selected true
xpos -10572
ypos -20822
postage_stamp false
}
Merge2 {
inputs 2
name Merge35
selected true
xpos -10572
ypos -20751
}
